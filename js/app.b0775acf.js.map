{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Graph.vue?141a","webpack:///./src/App.vue?8a48","webpack:///./src/App.vue?d952","webpack:///./src/components/CollapsiblePane.vue?be1f","webpack:///./src/components/CollapsiblePane.vue?1fa9","webpack:///./src/components/CollapsiblePane.vue?0878","webpack:///./src/components/CollapsiblePane.vue","webpack:///./src/components/Graph.vue?518d","webpack:///./src/graph/base/EventEmitter.ts","webpack:///./src/graph/base/Positioned.ts","webpack:///./src/graph/graph/layout/GraphLayout.ts","webpack:///./src/graph/graph/layout/KamadaKawaiGraphLayout.ts","webpack:///./src/graph/graph/layout/NoneGraphLayout.ts","webpack:///./src/graph/graph/layout/graphLayoutFactory.ts","webpack:///./src/graph/graph/component/ComponentLayout.ts","webpack:///./src/graph/graph/component/LinearComponentLayout.ts","webpack:///./src/graph/graph/component/NoneComponentLayout.ts","webpack:///./src/graph/graph/component/componentLayoutFactory.ts","webpack:///./src/graph/graph/type/GraphType.ts","webpack:///./src/graph/graph/type/BoxGraphType.ts","webpack:///./src/graph/graph/type/XdotGraphType.ts","webpack:///./src/graph/graph/type/graphTypeFactory.ts","webpack:///./src/graph/base/Port.ts","webpack:///./src/graph/graph/physics/GraphPhysics.ts","webpack:///./src/graph/graph/physics/BarnesHutGraphPhysics.ts","webpack:///./src/graph/graph/physics/NoneGraphPhysics.ts","webpack:///./src/graph/graph/physics/graphPhysicsFactory.ts","webpack:///./src/graph/graph/Graph.ts","webpack:///./src/graph/edge/type/EdgeType.ts","webpack:///./src/graph/edge/type/StraightEdgeType.ts","webpack:///./src/graph/edge/type/QuadraticEdgeType.ts","webpack:///./src/graph/edge/type/XdotEdgeType.ts","webpack:///./src/graph/edge/type/edgeTypeFactory.ts","webpack:///./src/graph/node/type/recordParser.ts","webpack:///./src/graph/node/type/NodeType.ts","webpack:///./src/graph/node/type/BoxNodeType.ts","webpack:///./src/graph/node/type/RecordCell.ts","webpack:///./src/graph/node/type/RecordNodeType.ts","webpack:///./src/graph/node/type/TableCell.ts","webpack:///./src/graph/node/type/TableNodeType.ts","webpack:///./src/graph/node/type/XdotNodeType.ts","webpack:///./src/graph/node/type/nodeTypeFactory.ts","webpack:///./src/graph/node/Node.ts","webpack:///./src/graph/edge/Edge.ts","webpack:///./src/graph/base/renderableFactory.ts","webpack:///./src/graph/Root.ts","webpack:///./src/components/MyCanvas.vue?c07e","webpack:///./src/components/MyCanvas.vue?e1f3","webpack:///./src/components/MyCanvas.vue?40d2","webpack:///./src/components/MyCanvas.vue","webpack:///./src/components/Graph.vue?b1ea","webpack:///./src/graph/dot/DotScanner.ts","webpack:///./src/components/Graph.vue?becd","webpack:///./src/components/Graph.vue","webpack:///./src/graph/dot/BaseScanner.ts","webpack:///./src/graph/dot/XDotAttrParser.ts","webpack:///./src/graph/dot/BaseParser.ts","webpack:///./src/graph/dot/DotParser.ts","webpack:///./src/graph/dot/passes.ts","webpack:///./src/graph/parser.ts","webpack:///./src/graph/examples/stdThreadJoin.gv","webpack:///./src/graph/examples/stdThreadJoin.txt","webpack:///./src/graph/examples/record.txt","webpack:///./src/graph/examples/subgraph.txt","webpack:///./src/graph/examples/icosahedron.txt","webpack:///./src/graph/examples/table.txt","webpack:///./src/graph/examples/edge.txt","webpack:///./src/graph/examples/stdThreadJoin.xdot.txt","webpack:///./src/graph/examples/test.xdot.txt","webpack:///./src/graph/examples.ts","webpack:///./src/debounce-decorator.ts","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?640d","webpack:///./src/App.vue","webpack:///./src/main.ts","webpack:///./src/components/CollapsiblePane.vue?6955"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","class","settingsOpen","on","$event","_e","_g","desktopLayout","assign","sizerMouseActive","mouseup","onMainSizerMouseUp","mousemove","onMainSizerMouseMove","sizerTouchActive","touchend","onMainSizerTouchEnd","touchmove","onMainSizerTouchMove","style","width","settingsWidth","ref","_s","parseError","canvasWidth","canvasHeight","rendered","left","onMainSizerMouseDown","onMainSizerTouchStart","inputFileChange","directives","rawName","expression","$$selectedVal","Array","filter","target","options","selected","map","val","_value","parser","multiple","redraw","_l","example","selectExample","realSettingsWidth","domProps","composing","rawInput","parsedInput","staticRenderFns","click","title","expand","animationHeight","height","_t","realHeight","content","$refs","paneContent","offsetHeight","addEventListener","transitionEnd","setTimeout","String","mainCanvasData","mousedown","wheel","mouseDragActive","thumbnailWidth","thumbnailHeight","thumbnailCanvasData","thumbnailMousedown","thumbnailMouseDragActive","thumbnailMouseup","thumbnailMousemove","events","event","listener","undefined","index","indexOf","args","parent","fixed","position","x","y","node","Error","graph","ports","edges","children","config","edge","fullyUpdatePosition","is","render","contentSize","newConfig","KamadaKawaiGraphLayout","defaultConfig","portToIndex","Map","set","port","initialPlaced","springLength","Math","random","distanceMatrix","fill","Infinity","fromBelonging","toBelonging","fromIndex","toIndex","k","dist","lengthMatrix","kMatrix","springConstant","pow","energyMatrix","mPos","iPos","denominator","sqrt","energySum","sum","maxEnergy","threshold","maxIterations","max","min","maxInnerIterations","iterations","deDx","deDy","e","delta","subIterations","d2eDx2","d2eDxDy","d2eDy2","factor","dx","dy","sumX","sumY","oldDx","oldDy","deltaX","deltaY","preferredEdgeDirection","PI","totalX","totalY","currentAngle","atan2","rotateAngle","rotateMatrix","cos","sin","upperLeft","lowerRight","pos","size","getBoundingBoxSize","halfWidth","halfHeight","informAllEdgesFullyUpdatePosition","layoutFactory","type","layouts","LinearComponentLayout","components","componentsSize","getContentSize","direction","reduce","a","b","spaceBetween","begin","componentFactory","angle","shape","updateData","BoxGraphType","layout","textSizeNeedsUpdate","label","fontSize","fontFamily","lineHeight","ctx","root","font","lines","split","textSize","measureText","layoutContentSize","componentLayout","padding","textPosition","labelPosition","borderSize","strokeWidth","rect","fillColor","stroke","strokeColor","text","align","abs","shapes","concat","keys","graphTypeFactory","id","BarnesHutGraphPhysics","layoutData","nodeToIndex","nodes","forces","velocities","controlPoints","getControlPoints","point","minX","maxX","minY","maxY","positioned","sizeDiff","rootSize","halfRootSize","centerX","centerY","tree","centerOfMass","mass","range","splitBranch","placeInTree","that","distance","gravityForce","centralGravity","calculateForces","branch","nodeMass","gravitationalConstant","force","getForceContributions","getForceContribution","NW","NE","SW","SE","theta","formBarnesHutTree","items","item1","item2","edgeLength","springForce","fx","fy","calculateVelocity","velocity","df","damping","maxVelocity","item","updatePosition","containedNode","childSize","updateBranchMass","region","child","totalMass","physicsFactory","parentData","Graph","getId","depth","fullId","parentId","fromEdges","Set","toEdges","oldChildren","subgraphs","renderableFactory","has","newChild","constructor","adjacencyList","edgesData","values","from","findPort","to","findBelongingPort","unvisited","layoutsData","calculateConnectedComponent","delete","component","adjacency","next","portToComponent","edgeData","componentClass","layoutClass","physicsClass","physics","newLayouts","newPhysics","solve","typeClass","graphType","updated","subgraph","step","draggable","distanceToBorder","fromPointerPos","toPointerPos","fromAngle","toAngle","lineFromPos","lineToPos","StraightEdgeType","fromPort","toPort","fromPos","getAbsolutePosition","toPos","fromDistance","toDistance","realFromPosX","realFromPosY","realToPosX","realToPosY","fromPointer","pointerWidth","toPointer","pointerHeight","pointerColor","unshift","points","lineColor","lineWidth","controlPoint","QuadraticEdgeType","viaPos","edgeTypeFactory","TokenEnum","BoxNodeType","contentSizeNeedsUpdate","borderSizeNeedsUpdate","recordParser","record","buffer","lexer","pop","EOF","VERTICAL_BAR","LEFT_CURLY_BRACE","RIGHT_CURLY_BRACE","LEFT_ANGLE_BRACE","RIGHT_ANGLE_BRACE","STRING","parseRecordLabel","token","parseField","ret","nodeType","isHorizontal","isField","fieldData","getPorts","getConfig","cellSize","recordData","cell","RecordCell","deltaWidth","startX","updateCellSize","deltaHeight","startY","RecordNodeType","contentNeedsUpdate","borderNeedsUpdate","rootCellSize","getCellSize","founded","rowSpan","columnSpan","border","getTableConfig","cellBorder","backgroundColor","attributes","attribute","toLowerCase","parseInt","getText","element","elements","join","parentConfig","tableConfig","cellPadding","rowOffset","columnOffset","TableNodeType","layoutNeedsUpdate","jsonObj","xml2js","tableElement","cellSpacing","table","rows","columns","firstRow","tr","row","td","getPort","cellSizes","cellHeight","cellWidth","rowHeight","columnWidth","accRowHeight","accColumnWidth","upperLeftX","upperLeftY","nodeTypeFactory","Node","Edge","fromNodeOrGraph","toNodeOrGraph","findParentNodeOrGraph","add","edgeType","document","createElement","getContext","stepTimer","setInterval","informRender","idArray","clearFixed","newClass","renderable","freeze","emit","globalGraphRoot","staticStyle","$listeners","context","hitContext","hitColorMap","hitIdMap","canvas","enableHit","hitCanvas","round","g","color","hitCtx","clearRect","updateShape","draggableId","finalDraggable","finalId","save","translate","scale","scaleX","scaleY","childShape","restore","beginPath","fillStyle","strokeStyle","generateHitColor","linesWidth","posY","textBaseline","posX","fillText","moveTo","lineTo","quadraticCurveTo","middleX","middleY","closePath","outerLeft","outerTop","outerRight","outerBottom","innerLeft","innerTop","innerBottom","innerRight","pen","fontsize","fontname","textAlign","centering","arc","filled","fillcolor","setLineDash","dash","linewidth","p0","p1","p2","p3","bezierCurveTo","lineCap","lineJoin","pixel","getImageData","updateCanvas","Number","required","Boolean","draggedId","mouseLastCoords","maxThumbnailLength","minThumbnailLength","thumbnailPadding","thumbnailMouseLastCoords","updateSize","scaleBy","preventDefault","translateMouseEvent","mousePointTo","stageX","stageY","newPos","elementOffsetX","elementOffsetY","currentTarget","offsetLeft","offsetTop","offsetParent","pageX","pageY","mainCanvas","getIdFromHitPoint","setFixed","buttons","newCoords","movePort","thumbnailCanvas","oldCoords","thumbnailFactor","deepCopyAndRemoveDraggable","copy","viewportX","viewportY","viewportWidth","viewportHeight","default","MyCanvas","tokens","symbols","literals","ignoreCase","eofToken","skipToken","flags","tokensRegex","RegExp","buf","mo","match","lastIndex","testLit","finalType","input","newInput","DotScanner","SKIP","STR_ID","replace","ID","HTML_ID","EDGE_OP","LSQUARE","RSQUARE","LCURLY","RCURLY","COMMA","COLON","SEMI","EQUAL","PLUS","strict","STRICT","GRAPH","digraph","DIGRAPH","NODE","EDGE","SUBGRAPH","FontCharacteristics","lookahead","done","types","parseGraph","consume","directed","graphAttrs","nodeAttrs","edgeAttrs","parseStmt","newGraphAttrs","newNodeAttrs","newEdgeAttrs","newChildren","parseAttrs","parseSubgraph","parseNodeId","ids","parseId","parseAttr","compass","HSVtoRGB","h","v","floor","f","q","bold","italic","underline","superscript","subscript","strikethrough","overline","op","readCode","readColor","readText","startsWith","lw","parseFloat","readFloat","readPoint","readInt","BOLD","ITALIC","UNDERLINE","SUPERSCRIPT","SUBSCRIPT","STRIKE_THROUGH","OVERLINE","readPolygon","JSON","parse","stringify","path","res","skipSpace","num","c1","hsv","xdotAttrPass","traversal","attr","newShapes","xdotReverseY","convert","forEach","draw","xdotToRenderablePass","xdotId","xdotFrom","xdotTo","alnumChars","randomAlnumString","generateId","unescapeString","str","normalizeColor","end","graphParsers","json","graphviz","ast","parseNode","node_id","attr_list","eq","recordHorizontal","LR","TB","RL","BT","edge_list","xdot","dotScanner","dotParser","scan","graphExamples","stdThreadJoin","icosahedron","Debounce","delay","prop","configurable","debounce","minGraphWidth","minSettingsWidth","windowWidth","documentElement","clientWidth","windowHeight","clientHeight","examples","parsed","console","log","stack","getSize","updateCanvasSize","throttle","removeEventListener","parseInput","fullyUpdateData","file","files","alert","reader","FileReader","onload","evt","readAsText","$nextTick","offsetWidth","mouseOffsetX","offsetX","touches","CollapsiblePane","productionTip","Icon","$mount"],"mappings":"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","file":"js/app.b0775acf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=style&index=0&id=6d2c06d4&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=style&index=0&id=6d2c06d4&lang=stylus&scoped=true&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=stylus&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=stylus&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('header',{staticClass:\"app-header\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\"Graph Visualizer\")]),_c('div',{staticClass:\"settings\"},[(_vm.desktopLayout)?_c('div',{staticClass:\"settings-item\"},[_c('span',{staticClass:\"settings-item-title\",class:{ 'setting-item-active': _vm.settingsOpen },on:{\"click\":function($event){_vm.settingsOpen = !_vm.settingsOpen}}},[_vm._v(\" 侧栏 \")])]):_vm._e()])]),_c('main',_vm._g({staticClass:\"main-panes\",class:{\n          'main-panes-show-sidebarmain-panes-show-sidebar': _vm.settingsOpen && _vm.desktopLayout\n        }},Object.assign({}, _vm.sizerMouseActive ? {\n          mouseup: _vm.onMainSizerMouseUp,\n          mousemove: _vm.onMainSizerMouseMove\n        } : {}, _vm.sizerTouchActive ? {\n          touchend: _vm.onMainSizerTouchEnd,\n          touchmove: _vm.onMainSizerTouchMove\n        } : {})),[_c('div',{staticClass:\"main-container main-container-graph\",class:{ 'main-container-graph-size-active':\n                    !_vm.sizerMouseActive && !_vm.sizerTouchActive},style:({\n           width: _vm.desktopLayout ? (_vm.settingsOpen ?\n                  (\"calc(100% - \" + _vm.settingsWidth + \"px)\") : '100%') : 'auto'\n         })},[_c('div',{ref:\"canvas\",staticClass:\"main-pane main-pane-graph\"},[(_vm.parseError)?_c('div',{staticClass:\"error-pane\"},[_c('pre',[_c('code',[_vm._v(_vm._s(_vm.parseError))])])]):_vm._e(),_c('Graph',{ref:\"graph\",attrs:{\"width\":_vm.canvasWidth,\"height\":_vm.canvasHeight,\"data\":_vm.rendered}})],1)]),_c('transition',{attrs:{\"name\":\"sizer-slide-x\",\"duration\":300}},[(_vm.settingsOpen && _vm.desktopLayout)?_c('div',{staticClass:\"main-sizer main-client-settings-sizer\",style:({ left: (\"calc(100% - \" + _vm.settingsWidth + \"px)\") }),on:{\"mousedown\":_vm.onMainSizerMouseDown,\"touchstart\":_vm.onMainSizerTouchStart}},[_c('div',{staticClass:\"main-sizer-handlebar\"})]):_vm._e()]),_c('transition',{attrs:{\"name\":\"settings-slide-x\",\"duration\":300}},[(_vm.settingsOpen || !_vm.desktopLayout)?_c('div',{staticClass:\"main-container main-container-settings\",style:({\n             width: _vm.desktopLayout ? (_vm.settingsWidth + \"px\") : 'auto'\n           })},[_c('div',{staticClass:\"main-pane main-pane-settings\"},[_c('CollapsiblePane',{staticClass:\"main-pane-subpane\",attrs:{\"title\":\"输入\"}},[_c('div',{staticClass:\"settings-input-file\"},[_c('label',{attrs:{\"for\":\"input-file\"}},[_c('v-icon',{attrs:{\"name\":\"upload\",\"scale\":\"0.8\"}}),_vm._v(\"打开文件 \")],1),_c('input',{attrs:{\"type\":\"file\",\"id\":\"input-file\"},on:{\"change\":_vm.inputFileChange}})]),_c('div',{staticClass:\"settings-input-format\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.parser),expression:\"parser\"}],attrs:{\"id\":\"input-format\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.parser=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"json\",\"selected\":\"\"}},[_vm._v(\"JSON\")]),_c('option',{attrs:{\"value\":\"graphviz\"}},[_vm._v(\"Graphviz\")])])]),_c('button',{staticClass:\"setting-input-redraw\",on:{\"click\":_vm.redraw}},[_c('v-icon',{attrs:{\"name\":\"sync\",\"scale\":\"0.8\"}}),_vm._v(\"重绘 \")],1),_c('div',{staticClass:\"settings-input-examples\"},[_c('span',{staticClass:\"settings-input-example-label\"},[_vm._v(\"示例：\")]),_vm._l((_vm.examples),function(example,i){return _c('span',{key:example.name,staticClass:\"settings-input-example\",on:{\"click\":function($event){return _vm.selectExample(i)}}},[_vm._v(\" \"+_vm._s(example.name)+\" \")])})],2),_c('div',{staticClass:\"settings-input-display\",class:{ 'settings-input-display-two-column':\n                            _vm.realSettingsWidth >= 400 }},[_c('div',{staticClass:\"settings-input-raw\"},[_c('label',{attrs:{\"for\":\"input-raw\"}},[_vm._v(\"输入数据：\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.rawInput),expression:\"rawInput\"}],attrs:{\"id\":\"input-raw\",\"rows\":\"10\"},domProps:{\"value\":(_vm.rawInput)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.rawInput=$event.target.value}}})]),_c('div',{staticClass:\"settings-input-parsed\"},[_c('label',{attrs:{\"for\":\"input-parsed\"}},[_vm._v(\"解析结果（只读）：\")]),_c('textarea',{attrs:{\"id\":\"input-parsed\",\"rows\":\"10\",\"readonly\":\"\"},domProps:{\"value\":_vm.parsedInput}})])])])],1)]):_vm._e()])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',{staticClass:\"pane-title\",on:{\"click\":_vm.click}},[_vm._v(\" \"+_vm._s(_vm.title)+\" \"),_c('v-icon',{staticClass:\"pane-arrow\",class:{ 'pane-arrow-expand': _vm.expand },attrs:{\"name\":\"angle-up\"}})],1),_c('div',{ref:\"paneContent\",staticClass:\"pane-content\",style:(_vm.animationHeight !== null ?\n               { height: _vm.animationHeight + 'px' } : {})},[_vm._t(\"default\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport 'vue-awesome/icons/angle-up';\nimport { Vue, Component, Prop } from 'vue-property-decorator';\n\n@Component\nexport default class CollapsiblePane extends Vue {\n  @Prop(String) public readonly title: string | undefined;\n  private expand = true;\n  private realHeight = 0;\n  private animationHeight: number|null = null;\n  public mounted() {\n    const content = this.$refs.paneContent as HTMLElement;\n    this.realHeight = content.offsetHeight;\n    content.addEventListener('transitionend', this.transitionEnd.bind(this));\n  }\n  public click() {\n    this.expand = !this.expand;\n    if (this.expand) {\n      this.animationHeight = 0;\n      setTimeout(() => {\n        this.animationHeight = this.realHeight;\n      });\n    } else {\n      const content = this.$refs.paneContent as HTMLElement;\n      this.realHeight = content.offsetHeight;\n      this.animationHeight = this.realHeight;\n      setTimeout(() => {\n        this.animationHeight = 0;\n      });\n    }\n  }\n  public transitionEnd() {\n    if (this.animationHeight !== 0) {\n      this.animationHeight = null;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CollapsiblePane.vue?vue&type=template&id=08120549&scoped=true&\"\nimport script from \"./CollapsiblePane.vue?vue&type=script&lang=ts&\"\nexport * from \"./CollapsiblePane.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08120549\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"graph-container\"},[_c('my-canvas',_vm._g({ref:\"mainCanvas\",attrs:{\"width\":_vm.width,\"height\":_vm.height,\"data\":_vm.mainCanvasData,\"enable-hit\":true},on:{\"mousedown\":_vm.mousedown,\"wheel\":_vm.wheel}},_vm.mouseDragActive ? { mouseup: _vm.mouseup, mousemove: _vm.mousemove } : {})),_c('div',{staticClass:\"thumbnail\",style:({\n    width: _vm.thumbnailWidth + 'px',\n    height: _vm.thumbnailHeight + 'px'\n  })},[_c('my-canvas',_vm._g({ref:\"thumbnailCanvas\",attrs:{\"width\":_vm.thumbnailWidth,\"height\":_vm.thumbnailHeight,\"data\":_vm.thumbnailCanvasData,\"enable-hit\":true},on:{\"mousedown\":_vm.thumbnailMousedown}},_vm.thumbnailMouseDragActive ? {\n                 mouseup: _vm.thumbnailMouseup,\n                 mousemove: _vm.thumbnailMousemove,\n               } : {}))],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class EventEmitter {\n  private readonly events: { [event: string]: Array<(...args: any[]) => any> } = {};\n\n  public addEventListener(event: string, listener: (...args: any[]) => any) {\n    if (this.events[event] === undefined) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  public removeEventListener(event: string, listener: (...args: any[]) => any) {\n    if (this.events[event] !== undefined) {\n      const index = this.events[event].indexOf(listener);\n      if (index > -1) {\n        this.events[event].splice(index, 1);\n      }\n    }\n  }\n\n  public emit(event: string, ...args: any[]) {\n    if (this.events[event] !== undefined) {\n      for (const listener of this.events[event]) {\n        listener.apply(this, args);\n      }\n    }\n  }\n}\n","import {Position} from '@/graph/base/dataInput';\n\nexport default class Positioned {\n  public parent: Positioned | null;\n  public fixed: boolean;\n  public position: Position;\n  public constructor(parent: Positioned | null) {\n    this.parent = parent;\n    this.fixed = false;\n    this.position = { x: 0, y: 0 };\n  }\n  public setPosition(position: Position): void {\n    this.position = position;\n  }\n  public getPosition(): Position {\n    return this.position;\n  }\n  public getAbsolutePosition(parent: Positioned): Position {\n    let x = 0;\n    let y = 0;\n    let node: Positioned | null = this;\n    while (node !== parent) {\n      if (node === null) {\n        throw new Error('Incorrect parent parameter');\n      }\n      x += node.position.x;\n      y += node.position.y;\n      node = node.parent;\n    }\n    return {x, y};\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport {GraphLayoutData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport Edge from '@/graph/edge/Edge';\nimport Renderable from '@/graph/base/Renderable';\nimport Node from '@/graph/node/Node';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport interface LayoutEdgeData {\n  from: Port;\n  to: Port;\n  fromBelonging: Node | Graph;\n  toBelonging: Node | Graph;\n  edge: Edge;\n}\n\nexport interface LayoutData {\n  ports: Array<Node | Graph>;\n  edges: LayoutEdgeData[];\n  children: Renderable[];\n}\n\nexport default abstract class GraphLayout extends Positioned {\n  protected readonly graph: Graph;\n  protected data: LayoutData;\n  public constructor(graph: Graph, parent: Positioned | null) {\n    super(parent);\n    this.graph = graph;\n    this.data = {\n      ports: [],\n      edges: [],\n      children: [],\n    };\n  }\n  public solve(config: GraphLayoutData | undefined,\n               data: LayoutData,\n               index: number): void {\n    this.data = data;\n  }\n  public informAllEdgesFullyUpdatePosition() {\n    if (this.data) {\n      for (const edge of this.data.edges) {\n        edge.edge.fullyUpdatePosition();\n      }\n    }\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: this.data.children.map((x) => x.render()),\n    };\n  }\n  public getContentSize(): Size {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport {KamadaKawaiGraphLayoutData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport Positioned from '@/graph/base/Positioned';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface KamadaKawaiGraphLayoutConfig {\n  springLength: number;\n  springConstant: number;\n  preferredEdgeDirection: number | 'any';\n}\n\nexport default class KamadaKawaiGraphLayout extends GraphLayout {\n  private static defaultConfig: KamadaKawaiGraphLayoutConfig = {\n    springLength: 150,\n    springConstant: 0.05,\n    preferredEdgeDirection: 'any',\n  };\n  private contentSize: Size;\n  constructor(graph: Graph, parent: Positioned | null) {\n    super(graph, parent);\n    this.contentSize = { width: 0, height: 0 };\n  }\n  public solve(config: KamadaKawaiGraphLayoutData | undefined,\n               data: LayoutData,\n               index: number) {\n    super.solve(config, data, index);\n    const newConfig: KamadaKawaiGraphLayoutConfig = Object.assign({},\n      KamadaKawaiGraphLayout.defaultConfig, config);\n    const portToIndex: Map<Port, number> = new Map();\n    for (let i = 0; i < data.ports.length; ++i) {\n      portToIndex.set(data.ports[i], i);\n    }\n    // Initial random placement\n    for (const port of data.ports) {\n      if (!port.initialPlaced) {\n        port.position = {\n          x: newConfig.springLength * ( Math.random() - 0.5),\n          y: newConfig.springLength * ( Math.random() - 0.5),\n        };\n        port.initialPlaced = true;\n      }\n    }\n    // Compute distance matrix by Floyd Warshall\n    const distanceMatrix: number[][] = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      distanceMatrix.push(Array(data.ports.length).fill(Infinity));\n      distanceMatrix[distanceMatrix.length - 1][i] = 0;\n    }\n    for (const {fromBelonging, toBelonging} of data.edges) {\n      const fromIndex = portToIndex.get(fromBelonging)!;\n      const toIndex = portToIndex.get(toBelonging)!;\n      distanceMatrix[fromIndex][toIndex] = 1;\n      distanceMatrix[toIndex][fromIndex] = 1;\n    }\n    for (let k = 0; k < data.ports.length; ++k) {\n      for (let i = 0; i < data.ports.length; ++i) {\n        for (let j = 0; j < data.ports.length; ++j) {\n          const dist = distanceMatrix[i][k] + distanceMatrix[k][j];\n          if (distanceMatrix[i][j] > dist) {\n            distanceMatrix[i][j] = dist;\n          }\n        }\n      }\n    }\n    // Place ports using Kamada Kawai\n    // Compute length matrix\n    const lengthMatrix = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const length = [];\n      for (let j = 0; j < data.ports.length; ++j) {\n        length.push(newConfig.springLength * distanceMatrix[i][j]);\n      }\n      lengthMatrix.push(length);\n    }\n    // Compute k matrix\n    const kMatrix = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const k = [];\n      for (let j = 0; j < data.ports.length; ++j) {\n        k.push(newConfig.springConstant *\n          Math.pow(distanceMatrix[i][j], -2));\n      }\n      kMatrix.push(k);\n    }\n    // Compute energy matrix\n    const energyMatrix = [];\n    for (const port of data.ports) {\n      energyMatrix.push(Array(data.ports.length));\n    }\n    for (let m = 0; m < data.ports.length; ++m) {\n      const mPos = data.ports[m].position;\n      energyMatrix[m][m] = [0, 0];\n      for (let i = m + 1; i < data.ports.length; ++i) {\n        const iPos = data.ports[i].position;\n        const denominator = 1.0 / Math.sqrt(\n          Math.pow(mPos.x - iPos.x, 2) + Math.pow(mPos.y - iPos.y, 2));\n        energyMatrix[m][i] = [\n          kMatrix[m][i] * (mPos.x - iPos.x) *\n            (1 - lengthMatrix[m][i] * denominator),\n          kMatrix[m][i] * (mPos.y - iPos.y) *\n            (1 - lengthMatrix[m][i] * denominator),\n        ];\n        energyMatrix[i][m] = [\n          -energyMatrix[m][i][0],\n          -energyMatrix[m][i][1],\n        ];\n      }\n    }\n    const energySum = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const sum = [0, 0];\n      for (let j = 0; j < data.ports.length; ++j) {\n        sum[0] += energyMatrix[i][j][0];\n        sum[1] += energyMatrix[i][j][1];\n      }\n      energySum.push(sum);\n    }\n    // Compute position\n    const threshold = 0.01;\n    const maxIterations = Math.max(1000,\n      Math.min(10 * data.ports.length, 6000));\n    const maxInnerIterations = 5;\n    let iterations = 0;\n    let maxEnergy;\n    while (iterations < maxIterations) {\n      iterations += 1;\n      // Get port with highest energy\n      let m = 0;\n      let deDx = 0;\n      let deDy = 0;\n      maxEnergy = -1;\n      for (let i = 0; i < data.ports.length; ++i) {\n        const e = Math.sqrt(Math.pow(energySum[i][0], 2) +\n          Math.pow(energySum[i][1], 2));\n        if (e > maxEnergy) {\n          m = i;\n          deDx = energySum[i][0];\n          deDy = energySum[i][1];\n          maxEnergy = e;\n        }\n      }\n      if (maxEnergy <= threshold) {\n        break;\n      }\n      const mPos = data.ports[m].position;\n      let delta = maxEnergy;\n      let subIterations = 0;\n      while (delta > threshold && subIterations < maxInnerIterations) {\n        subIterations += 1;\n        // Move port\n        let d2eDx2 = 0;\n        let d2eDxDy = 0;\n        let d2eDy2 = 0;\n        for (let i = 0; i < data.ports.length; ++i) {\n          if (i !== m) {\n            const iPos = data.ports[i].position;\n            const factor = 1.0 / Math.pow(Math.pow(mPos.x - iPos.x, 2) +\n              Math.pow(mPos.y - iPos.y, 2), 1.5);\n            const k = kMatrix[m][i];\n            const l = lengthMatrix[m][i];\n            d2eDx2 += k * (1 - l * Math.pow(mPos.y - iPos.y, 2) * factor);\n            d2eDxDy += k * l * (mPos.x - iPos.x) * (mPos.y - iPos.y) *\n              factor;\n            d2eDy2 += k * (1 - l * Math.pow(mPos.x - iPos.x, 2) * factor);\n          }\n        }\n        // Solve equation using Cramer's rule\n        const denominator = d2eDx2 * d2eDy2 - Math.pow(d2eDxDy, 2);\n        const dx = (d2eDxDy * deDy - d2eDy2 * deDx) / denominator;\n        const dy = (d2eDxDy * deDx - d2eDx2 * deDy) / denominator;\n        mPos.x += dx;\n        mPos.y += dy;\n        // Recalculate energy matrix\n        let sumX = 0;\n        let sumY = 0;\n        for (let i = 0; i < data.ports.length; ++i) {\n          if (i !== m) {\n            const [oldDx, oldDy] = energyMatrix[m][i];\n            const iPos = data.ports[i].position;\n            const factor = 1.0 / Math.sqrt(\n              Math.pow(mPos.x - iPos.x, 2) + Math.pow(mPos.y - iPos.y, 2));\n            const deltaX = kMatrix[m][i] * (mPos.x - iPos.x) *\n              (1 - lengthMatrix[m][i] * factor);\n            const deltaY = kMatrix[m][i] * (mPos.y - iPos.y) *\n              (1 - lengthMatrix[m][i] * factor);\n            energyMatrix[m][i] = [deltaX, deltaY];\n            energyMatrix[i][m] = [-deltaX, -deltaY];\n            energySum[i][0] += oldDx - deltaX;\n            energySum[i][1] += oldDy - deltaY;\n            sumX += deltaX;\n            sumY += deltaY;\n          }\n        }\n        energySum[m] = [sumX, sumY];\n        // Update\n        delta = Math.sqrt(Math.pow(energySum[m][0], 2) +\n          Math.pow(energySum[m][1], 2));\n        deDx = energySum[m][0];\n        deDy = energySum[m][1];\n      } // for kamada kawai inner iteration\n    } // for kamada kawai outer iteration\n    // Rotate graph to satisfy preferred edge direction\n    if (typeof newConfig.preferredEdgeDirection === 'number') {\n      const preferredEdgeDirection: number = newConfig.preferredEdgeDirection /\n        180 * Math.PI;\n      let totalX = 0;\n      let totalY = 0;\n      for (const edge of data.edges) {\n        totalX += edge.toBelonging.position.x - edge.fromBelonging.position.x;\n        totalY += edge.toBelonging.position.y - edge.fromBelonging.position.y;\n      }\n      const currentAngle = Math.atan2(totalY, totalX);\n      const rotateAngle = preferredEdgeDirection - currentAngle;\n      const rotateMatrix: number[][] = [\n        [Math.cos(rotateAngle), -Math.sin(rotateAngle)],\n        [Math.sin(rotateAngle), Math.cos(rotateAngle)],\n      ];\n      for (const node of data.ports) {\n        node.position = {\n          x: rotateMatrix[0][0] * node.position.x +\n            rotateMatrix[0][1] * node.position.y,\n          y: rotateMatrix[1][0] * node.position.x +\n            rotateMatrix[1][1] * node.position.y,\n        };\n      }\n    }\n    // Calculate component size and position\n    const upperLeft = [Infinity, Infinity];\n    const lowerRight = [-Infinity, -Infinity];\n    for (const port of data.ports) {\n      const pos = port.position;\n      const size = port.getBoundingBoxSize();\n      const halfWidth = size.width / 2;\n      const halfHeight = size.height / 2;\n      if (pos.x - halfWidth < upperLeft[0]) {\n        upperLeft[0] = pos.x - halfWidth;\n      }\n      if (pos.x + halfWidth > lowerRight[0]) {\n        lowerRight[0] = pos.x + halfWidth;\n      }\n      if (pos.y - halfHeight < upperLeft[1]) {\n        upperLeft[1] = pos.y - halfHeight;\n      }\n      if (pos.y + halfHeight > lowerRight[1]) {\n        lowerRight[1] = pos.y + halfHeight;\n      }\n    }\n    const position = {\n      x: (upperLeft[0] + lowerRight[0]) / 2,\n      y: (upperLeft[1] + lowerRight[1]) / 2,\n    };\n    this.contentSize = {\n      width: lowerRight[0] - upperLeft[0],\n      height: lowerRight[1] - upperLeft[1],\n    };\n    // Move ports to center\n    for (const port of data.ports) {\n      port.position.x -= position.x;\n      port.position.y -= position.y;\n    }\n    this.informAllEdgesFullyUpdatePosition();\n  } // solve method\n\n  public getContentSize() {\n    return this.contentSize;\n  }\n}\n","import GraphLayout from '@/graph/graph/layout/GraphLayout';\n\nexport default class NoneGraphLayout extends GraphLayout {}\n","import KamadaKawaiGraphLayout from './KamadaKawaiGraphLayout';\nimport {GraphLayoutData} from '@/graph/base/dataInput';\nimport GraphLayout from '@/graph/graph/layout/GraphLayout';\nimport Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport NoneGraphLayout from '@/graph/graph/layout/NoneGraphLayout';\n\nexport default function layoutFactory(data: GraphLayoutData | undefined)\n    : new (graph: Graph, parent: Positioned | null) => GraphLayout {\n  switch (data && data.type) {\n    case 'none':\n      return NoneGraphLayout;\n    default:\n      return KamadaKawaiGraphLayout;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport {ComponentLayoutData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class ComponentLayout extends Positioned {\n  protected readonly graph: Graph;\n  public constructor(graph: Graph, parent: Positioned | null) {\n    super(parent);\n    this.graph = graph;\n  }\n  public updateData(config: ComponentLayoutData | undefined): void {\n    // do nothing\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: this.graph.layouts.map((x) => x.render()),\n    };\n  }\n  public getContentSize(): Size {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n}\n","import ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport Graph from '@/graph/graph/Graph';\nimport {LinearComponentLayoutData, Size} from '@/graph/base/dataInput';\nimport Positioned from '@/graph/base/Positioned';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface LinearComponentLayoutConfig {\n  direction: 'TD' | 'DT' | 'LR' | 'RL';\n  spaceBetween: number;\n}\n\nexport default class LinearComponentLayout extends ComponentLayout {\n  private static defaultConfig = {\n    direction: 'TD',\n    spaceBetween: 12,\n  };\n  private contentSize: Size;\n  constructor(graph: Graph, parent: Positioned | null) {\n    super(graph, parent);\n    this.contentSize = { width: 0, height: 0 };\n  }\n  public updateData(config: LinearComponentLayoutData | undefined) {\n    const newConfig: LinearComponentLayoutConfig = Object.assign({},\n      LinearComponentLayout.defaultConfig, config);\n    const components = this.graph.layouts;\n    const componentsSize = components.map((x) => x.getContentSize()!);\n    if (newConfig.direction === 'LR' || newConfig.direction === 'RL') {\n      this.contentSize = {\n        width: componentsSize.map((x) => x.width).reduce((a, b) => a + b, 0) +\n          Math.max(components.length - 1, 0) * newConfig.spaceBetween,\n        height: Math.max(...componentsSize.map((x) => x.height), 0),\n      };\n      let begin = newConfig.direction === 'LR' ?\n        -this.contentSize.width / 2 : this.contentSize.width / 2;\n      for (let i = 0; i < components.length; ++i) {\n        const deltaX = (newConfig.direction === 'LR' ?\n          componentsSize[i].width / 2 : -componentsSize[i].width / 2) +\n          begin;\n        components[i].position = { x: deltaX, y: 0 };\n        if (newConfig.direction === 'LR') {\n          begin += componentsSize[i].width + newConfig.spaceBetween;\n        } else {\n          begin -= componentsSize[i].width + newConfig.spaceBetween;\n        }\n      }\n    } else {\n      this.contentSize = {\n        width: Math.max(...componentsSize.map((x) => x.width), 0),\n        height: componentsSize.map((x) => x.height).reduce((a, b) => a + b, 0) +\n          Math.max(components.length - 1, 0) * newConfig.spaceBetween,\n      };\n      let begin = newConfig.direction === 'DT' ?\n        this.contentSize.height / 2 : -this.contentSize.height / 2;\n      for (let i = 0; i < components.length; ++i) {\n        const deltaY = (newConfig.direction === 'DT' ?\n          -componentsSize[i].height / 2 : componentsSize[i].height / 2) +\n          begin;\n        components[i].position = { x: 0, y: deltaY };\n        if (newConfig.direction === 'DT') {\n          begin -= componentsSize[i].height + newConfig.spaceBetween;\n        } else {\n          begin += componentsSize[i].height + newConfig.spaceBetween;\n        }\n      }\n    } // position calculation\n  }\n  public getContentSize() {\n    return this.contentSize;\n  }\n}\n","import ComponentLayout from '@/graph/graph/component/ComponentLayout';\n\nexport default class NoneComponentLayout extends ComponentLayout {}\n","import {ComponentLayoutData} from '@/graph/base/dataInput';\nimport Graph from '@/graph/graph/Graph';\nimport ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport LinearComponentLayout from '@/graph/graph/component/LinearComponentLayout';\nimport Positioned from '@/graph/base/Positioned';\nimport NoneComponentLayout from '@/graph/graph/component/NoneComponentLayout';\n\nexport default function componentFactory(data: ComponentLayoutData | undefined)\n  : new (graph: Graph, parent: Positioned | null) => ComponentLayout {\n  switch (data && data.type) {\n    case 'none':\n      return NoneComponentLayout;\n    default:\n      return LinearComponentLayout;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport {GraphData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class GraphType {\n  protected parent: Graph;\n  protected constructor(parent: Graph) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: GraphData): void;\n  public abstract render(): AnyShape[];\n  public getBoundingBoxSize(): Size {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n  public distanceToBorder(angle: number): number {\n    return 0;\n  }\n}\n","import GraphType from '@/graph/graph/type/GraphType';\nimport Graph from '@/graph/graph/Graph';\nimport {BoxGraphData, GraphData, Position, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface BoxGraphConfig {\n  label: string | null;\n  labelPosition: 'top' | 'right' | 'bottom' | 'left';\n  style: 'solid' | 'filled' | 'none';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n  spaceBetween: number;\n}\n\nexport default class BoxGraphType extends GraphType {\n  public static defaultConfig = {\n    label: null,\n    labelPosition: 'top', // or 'right', 'bottom', 'left'\n    style: 'none',  // or 'filled'\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 0,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 6,\n    align: 'center',\n    spaceBetween: 12,\n  };\n  private config!: BoxGraphConfig;\n  private textSize!: Size;\n  private contentSize!: Size;\n  private textPosition!: Position;\n  private borderSize!: Size;\n  constructor(parent: Graph, data: GraphData) {\n    if (data.shape !== 'box') {\n      throw new Error('Expect box shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: BoxGraphData) {\n    const newConfig = Object.assign({}, BoxGraphType.defaultConfig, data);\n    delete newConfig.layout;\n    delete newConfig.children;\n    const textSizeNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    if (textSizeNeedsUpdate) {\n      const ctx = this.parent.root.ctx;\n      ctx.font = `${newConfig.fontSize}px ${newConfig.fontFamily}`;\n      const lines = newConfig.label ? (newConfig.label as string)\n        .split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * newConfig.fontSize * newConfig.lineHeight,\n      };\n    }\n    const layoutContentSize = this.parent.componentLayout.getContentSize()!;\n    this.contentSize = {\n      width: layoutContentSize.width + 2 * newConfig.padding,\n      height: layoutContentSize.height + 2 * newConfig.padding,\n    };\n    this.parent.componentLayout.position = { x: 0, y: 0 };\n    this.textPosition = { x: 0, y: 0 };\n    if (newConfig.label) {\n      if (newConfig.labelPosition === 'left' ||\n          newConfig.labelPosition === 'right') {\n        this.contentSize.width += this.textSize.width + newConfig.spaceBetween;\n        if (this.textSize.height > layoutContentSize.height) {\n          this.contentSize.height = this.textSize.height +\n            2 * newConfig.padding;\n        }\n        if (newConfig.labelPosition === 'left') {\n          this.parent.componentLayout.position.x = (this.textSize.width +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.x = -(layoutContentSize.width +\n            newConfig.spaceBetween) / 2;\n        } else {\n          this.parent.componentLayout.position.x = -(this.textSize.width +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.x = (layoutContentSize.width +\n            newConfig.spaceBetween) / 2;\n        }\n      } else {\n        this.contentSize.height += this.textSize.height +\n          newConfig.spaceBetween;\n        if (this.textSize.width > layoutContentSize.width) {\n          this.contentSize.width = this.textSize.width + 2 * newConfig.padding;\n        }\n        if (newConfig.labelPosition === 'bottom') {\n          this.parent.componentLayout.position.y = -(this.textSize.height +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.y = (layoutContentSize.height +\n            newConfig.spaceBetween) / 2;\n        } else {\n          this.parent.componentLayout.position.y = (this.textSize.height +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.y = -(layoutContentSize.height +\n            newConfig.spaceBetween) / 2;\n        }\n      }\n    }\n    this.borderSize = {\n      width: this.contentSize.width + newConfig.strokeWidth,\n      height: this.contentSize.height + newConfig.strokeWidth,\n    };\n    this.config = newConfig;\n  }\n  public render(): AnyShape[] {\n    const rendered: AnyShape[] = [];\n    if (this.config.style && this.config.style !== 'none') {\n      const rect: AnyShape = {\n        is: 'rect',\n        x: -this.contentSize.width / 2,\n        y: -this.contentSize.height / 2,\n        width: this.contentSize.width,\n        height: this.contentSize.height,\n        fill: this.config.style === 'filled' ?\n          this.config.fillColor : undefined,\n        stroke: this.config.strokeWidth > 0 ?\n          this.config.strokeColor : undefined,\n        strokeWidth: this.config.strokeWidth,\n      };\n      rendered.push(rect);\n    }\n    if (this.config.label) {\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.textSize.width / 2,\n        y: this.textPosition.y - this.textSize.height / 2,\n        text: this.config.label,\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        lineHeight: this.config.lineHeight,\n        align: this.config.align,\n      };\n      rendered.push(text);\n    }\n    rendered.push(this.parent.componentLayout.render());\n    return rendered;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import GraphType from '@/graph/graph/type/GraphType';\nimport {XdotShape} from '@/graph/base/dataXdot';\nimport {GraphData, XdotGraphData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Graph from '@/graph/graph/Graph';\n\nexport default class XdotGraphType extends GraphType {\n  private shapes!: XdotShape[];\n  constructor(parent: Graph, data: GraphData) {\n    if (data.shape !== 'xdot') {\n      throw new Error('Expect xdot shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: XdotGraphData): void {\n    this.shapes = data.shapes ? ([] as XdotShape[]).concat(\n      ...Object.keys(data.shapes).map((x) => data.shapes![x])) : [];\n  }\n  public render(): AnyShape[] {\n    const shapes: AnyShape[] = this.shapes.slice();\n    shapes.push(this.parent.componentLayout.render());\n    return shapes;\n  }\n}\n","import BoxGraphType from '@/graph/graph/type/BoxGraphType';\nimport GraphType from '@/graph/graph/type/GraphType';\nimport Graph from '@/graph/graph/Graph';\nimport {GraphData} from '@/graph/base/dataInput';\nimport XdotGraphType from '@/graph/graph/type/XdotGraphType';\n\n// noinspection JSUnusedLocalSymbols\nexport default function graphTypeFactory(data: GraphData)\n    : new (parent: Graph, data: GraphData) => GraphType {\n  switch (data.shape) {\n    case 'xdot':\n      return XdotGraphType;\n    default:\n      data.shape = 'box';\n      return BoxGraphType;\n  }\n}\n","import Positioned from '@/graph/base/Positioned';\nimport {Size} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\n\nexport default abstract class Port extends Positioned {\n  public readonly root: Root;\n  public initialPlaced: boolean; // for graph layout\n  public id: string;\n  protected constructor(root: Root, parent: Positioned | null = null) {\n    super(parent);\n    this.root = root;\n    this.initialPlaced = false;\n    this.id = '';\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    return null;\n  }\n  public abstract getBoundingBoxSize(): Size;\n  public abstract distanceToBorder(angle: number): number;\n}\n","import Graph from '@/graph/graph/Graph';\nimport {GraphPhysicsData} from '@/graph/base/dataInput';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\n\nexport default abstract class GraphPhysics {\n  protected readonly graph: Graph;\n  protected readonly layout: GraphLayout;\n  public constructor(graph: Graph, layout: GraphLayout) {\n    this.graph = graph;\n    this.layout = layout;\n  }\n  public abstract solve(config: GraphPhysicsData | undefined,\n                        data: LayoutData): void;\n  public abstract step(): boolean;\n}\n","import GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport {BarnesHutGraphPhysicsData, Position, Vector} from '@/graph/base/dataInput';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface BarnesHutGraphPhysicsConfig {\n  theta: number;\n  gravitationalConstant: number;\n  centralGravity: number;\n  springLength: number;\n  springConstant: number;\n  damping: number;\n  maxVelocity: number;\n}\n\ninterface BarnesHutTree {\n  centerOfMass: Position;\n  mass: number;\n  range: {\n    minX: number;\n    maxX: number;\n    minY: number;\n    maxY: number;\n  };\n  children?: {\n    NW: BarnesHutTree;\n    NE: BarnesHutTree;\n    SW: BarnesHutTree;\n    SE: BarnesHutTree;\n  };\n  data?: Positioned;\n  size: number;\n}\n\nexport default class BarnesHutGraphPhysics extends GraphPhysics {\n  private static defaultConfig: BarnesHutGraphPhysicsConfig = {\n    theta: 1,\n    gravitationalConstant: -2000,\n    centralGravity: 0.05,\n    springLength: 150,\n    springConstant: 0.04,\n    damping: 0.09,\n    maxVelocity: 50,\n  };\n  private static splitBranch(branch: BarnesHutTree) {\n    if (branch.children) {\n      throw new Error('Cannot split branch on an already split branch');\n    }\n    const containedNode: Positioned | undefined = branch.data;\n    if (containedNode) {\n      branch.mass = 0;\n      branch.centerOfMass.x = 0;\n      branch.centerOfMass.y = 0;\n    }\n    delete branch.data;\n    const childSize = 0.5 * branch.size;\n    branch.children = {\n      NW: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX, maxX: branch.range.minX + childSize,\n          minY: branch.range.minY, maxY: branch.range.minY + childSize,\n        },\n        size: childSize,\n      },\n      NE: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX + childSize, maxX: branch.range.maxX,\n          minY: branch.range.minY, maxY: branch.range.minY + childSize,\n        },\n        size: childSize,\n      },\n      SW: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX, maxX: branch.range.minX + childSize,\n          minY: branch.range.minY + childSize, maxY: branch.range.maxY,\n        },\n        size: childSize,\n      },\n      SE: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX + childSize, maxX: branch.range.maxX,\n          minY: branch.range.minY + childSize, maxY: branch.range.maxY,\n        },\n        size: childSize,\n      },\n    };\n    if (containedNode) {\n      this.placeInTree(branch, containedNode);\n    }\n  }\n  private static placeInTree(branch: BarnesHutTree,\n                             node: Positioned): void {\n    if (!branch.children) {\n      throw new Error('Place in tree can be only called on a split branch');\n    }\n    this.updateBranchMass(branch, node);\n    const range = branch.children.NW.range;\n    const pos = node.position;\n    let region: 'NW' | 'SW' | 'NE' | 'SE';\n    if (range.maxX > pos.x) {\n      if (range.maxY > pos.y) {\n        region = 'NW';\n      } else {\n        region = 'SW';\n      }\n    } else {\n      if (range.maxY > pos.y) {\n        region = 'NE';\n      } else {\n        region = 'SE';\n      }\n    }\n    const child = branch.children[region];\n    if (child.children) {\n      this.placeInTree(child, node);\n    } else if (child.data) {\n      // ignore overlapping node\n      if (child.data.position.x === pos.x &&\n          child.data.position.y === pos.y ) {\n        pos.x += Math.random() - 0.5;\n        pos.y += Math.random() - 0.5;\n      } else {\n        this.splitBranch(child);\n        this.placeInTree(child, node);\n      }\n    } else {\n      child.data = node;\n      this.updateBranchMass(child, node);\n    }\n  }\n  private static updateBranchMass(branch: BarnesHutTree,\n                                  node: Positioned) {\n    const nodeMass = 1;\n    const totalMass = branch.mass + nodeMass;\n    branch.centerOfMass.x = (branch.centerOfMass.x * branch.mass +\n      node.position.x * nodeMass) / totalMass;\n    branch.centerOfMass.y = (branch.centerOfMass.y * branch.mass +\n      node.position.y * nodeMass) / totalMass;\n    branch.mass = totalMass;\n  }\n  private config: BarnesHutGraphPhysicsConfig;\n  private layoutData: LayoutData;\n  private nodeToIndex: Map<Positioned, number>;\n  private nodes: Positioned[];\n  private forces: Vector[];\n  private velocities: Vector[];\n  public constructor(graph: Graph, layout: GraphLayout) {\n    super(graph, layout);\n    this.config = BarnesHutGraphPhysics.defaultConfig;\n    this.layoutData = {\n      ports: [],\n      edges: [],\n      children: [],\n    };\n    this.nodeToIndex = new Map();\n    this.nodes = [];\n    this.forces = [];\n    this.velocities = [];\n  }\n  public solve(config: BarnesHutGraphPhysicsData | undefined,\n               data: LayoutData) {\n    this.config = Object.assign({},\n      BarnesHutGraphPhysics.defaultConfig, config);\n    this.layoutData = data;\n    this.nodeToIndex = new Map();\n    this.nodes = [];\n    // Create Index\n    let i = 0;\n    for (; i < this.layoutData.ports.length; ++i) {\n      this.nodeToIndex.set(this.layoutData.ports[i], i);\n      this.nodes.push(this.layoutData.ports[i]);\n    }\n    for (const edge of this.layoutData.edges) {\n      const controlPoints = edge.edge.getControlPoints();\n      for (const point of controlPoints) {\n        this.nodeToIndex.set(point, i);\n        this.nodes.push(point);\n        ++i;\n      }\n    }\n    this.forces = [];\n    this.velocities = [];\n    for (i = 0; i < this.nodeToIndex.size; ++i) {\n      this.forces.push({ x: 0, y: 0 });\n      this.velocities.push({ x: 0, y: 0 });\n    }\n  }\n  public formBarnesHutTree(): BarnesHutTree {\n    if (this.nodes.length < 1) {\n      throw new Error('Expect at least one node to form Barnes Hut tree');\n    }\n    let minX = this.nodes[0].position.x;\n    let maxX = this.nodes[0].position.x;\n    let minY = this.nodes[0].position.y;\n    let maxY = this.nodes[0].position.y;\n    for (let i = 1; i < this.nodes.length; ++i) {\n      const positioned = this.nodes[i];\n      const pos = positioned.position;\n      if (pos.x < minX) {\n        minX = pos.x;\n      }\n      if (pos.x > maxX) {\n        maxX = pos.x;\n      }\n      if (pos.y < minY) {\n        minY = pos.y;\n      }\n      if (pos.y > maxY)  {\n        maxY = pos.y;\n      }\n    }\n    const sizeDiff = Math.abs(maxX - minX) - Math.abs(maxY - minY);\n    if (sizeDiff > 0) {\n      minY -= 0.5 * sizeDiff;\n      maxY += 0.5 * sizeDiff;\n    } else {\n      minX += 0.5 * sizeDiff;\n      maxX -= 0.5 * sizeDiff;\n    }\n    const rootSize = Math.abs(maxX - minX);\n    const halfRootSize = 0.5 * rootSize;\n    const centerX = 0.5 * (minX + maxX);\n    const centerY = 0.5 * (minY + maxY);\n    const tree: BarnesHutTree = {\n      centerOfMass: { x: 0, y: 0},\n      mass: 0,\n      range: {\n        minX: centerX - halfRootSize, maxX: centerX + halfRootSize,\n        minY: centerY - halfRootSize, maxY: centerY + halfRootSize,\n      },\n      size: rootSize,\n    };\n    BarnesHutGraphPhysics.splitBranch(tree);\n    for (const node of this.nodes) {\n      BarnesHutGraphPhysics.placeInTree(tree, node);\n    }\n    return tree;\n  }\n  public step(): boolean {\n    for (const force of this.forces) {\n      force.x = 0;\n      force.y = 0;\n    }\n    const that = this;\n    // Calculate central gravity\n    for (let i = 0; i < this.nodes.length; ++i) {\n      const node = this.nodes[i];\n      const dx = -node.position.x;\n      const dy = -node.position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      const gravityForce = (distance === 0) ? 0 :\n        (this.config.centralGravity / distance);\n      this.forces[i].x = dx * gravityForce;\n      this.forces[i].y = dy * gravityForce;\n    }\n    // Calculate node repulsive force\n    if (this.nodes.length) {\n      function calculateForces(dx: number, dy: number,\n                               node: Positioned,\n                               branch: BarnesHutTree) {\n        if (dx === 0 && dy === 0) {\n          dx = 0.1;\n        }\n        const nodeMass = 1;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const gravityForce = that.config.gravitationalConstant * branch.mass *\n          nodeMass / Math.pow(distance, 3);\n        const force = that.forces[that.nodeToIndex.get(node)!];\n        force.x += dx * gravityForce;\n        force.y += dy * gravityForce;\n      }\n      function getForceContributions(branch: BarnesHutTree, node: Positioned) {\n        if (!branch.children) {\n          throw new Error('Get force contributions ' +\n            'can be only called on a split branch');\n        }\n        getForceContribution(branch.children.NW, node);\n        getForceContribution(branch.children.NE, node);\n        getForceContribution(branch.children.SW, node);\n        getForceContribution(branch.children.SE, node);\n      }\n      function getForceContribution(branch: BarnesHutTree, node: Positioned) {\n        if (!branch.children && !branch.data) {\n          return;\n        }\n        const dx = branch.centerOfMass.x - node.position.x;\n        const dy = branch.centerOfMass.y - node.position.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (branch.size / distance < that.config.theta) {\n          calculateForces(dx, dy, node, branch);\n        } else if (branch.children) {\n          getForceContributions(branch, node);\n        } else if (branch.data !== node) {\n          calculateForces(dx, dy, node, branch);\n        }\n      }\n      const tree = this.formBarnesHutTree();\n      for (const node of this.nodes) {\n        getForceContributions(tree, node);\n      }\n      // Naive method\n      // for (let i = 0; i < this.nodes.length - 1; ++i) {\n      //   const node1 = this.nodes[i];\n      //   const pos1 = node1.position;\n      //   for (let j = i + 1; j < this.nodes.length; ++j) {\n      //     const node2 = this.nodes[j];\n      //     const pos2 = node2.position;\n      //     const dx = pos1.x - pos2.x;\n      //     const dy = pos1.y - pos2.y;\n      //     const distance = Math.sqrt(dx * dx + dy * dy);\n      //     const gravityForce = -2000 / Math.pow(distance + 1e-3, 3);\n      //     this.forces[i].x -= dx * gravityForce;\n      //     this.forces[i].y -= dy * gravityForce;\n      //     this.forces[j].x += dx * gravityForce;\n      //     this.forces[j].y += dy * gravityForce;\n      //   }\n      // }\n    }\n    // Calculate spring force\n    for (const edge of this.layoutData.edges) {\n      if (edge.fromBelonging !== edge.toBelonging) {\n        const items = [\n          edge.fromBelonging,\n          ...edge.edge.getControlPoints(),\n          edge.toBelonging,\n        ];\n        for (let i = 0; i < items.length - 1; ++i) {\n          const item1 = items[i];\n          const item2 = items[i + 1];\n          const edgeLength = this.config.springLength / (items.length - 1);\n          const dx = item1.position.x - item2.position.x;\n          const dy = item1.position.y - item2.position.y;\n          const distance = Math.max(Math.sqrt(dx * dx + dy * dy), 0.01);\n          const springForce = this.config.springConstant *\n            (edgeLength - distance) / distance;\n          const fx = dx * springForce;\n          const fy = dy * springForce;\n          this.forces[this.nodeToIndex.get(item1)!].x += fx;\n          this.forces[this.nodeToIndex.get(item1)!].y += fy;\n          this.forces[this.nodeToIndex.get(item2)!].x -= fx;\n          this.forces[this.nodeToIndex.get(item2)!].y -= fy;\n        }\n      }\n    }\n    // Move nodes\n    function calculateVelocity(velocity: number,\n                               force: number,\n                               mass: number): number {\n      const df = that.config.damping * velocity;\n      const a = (force - df) / mass;\n      velocity += a; // * time;\n      if (Math.abs(velocity) > that.config.maxVelocity) {\n        velocity = velocity > 0 ? that.config.maxVelocity :\n          -that.config.maxVelocity;\n      }\n      return velocity;\n    }\n    for (let i = 0; i < this.nodes.length; ++i) {\n      const item = this.nodes[i];\n      const pos = item.position;\n      const force = this.forces[i];\n      const velocity = this.velocities[i];\n      if (item.fixed) {\n        velocity.x = 0;\n        velocity.y = 0;\n      } else {\n        velocity.x = calculateVelocity(velocity.x, force.x, 1);\n        velocity.y = calculateVelocity(velocity.y, force.y, 1);\n      }\n      item.position = {\n        x: pos.x + velocity.x, // * time\n        y: pos.y + velocity.y, // * time\n      };\n    }\n    for (const edge of this.layoutData.edges) {\n      edge.edge.updatePosition();\n    }\n    return true;\n  }\n}\n","import GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport {NoneGraphPhysicsData} from '@/graph/base/dataInput';\n\nexport default class NoneGraphPhysics extends GraphPhysics {\n  public solve(config: NoneGraphPhysicsData | undefined,\n               data: LayoutData): void {\n    // do nothing\n  }\n  public step(): boolean {\n    return false;\n  }\n}\n","import {GraphPhysicsData} from '@/graph/base/dataInput';\nimport Graph from '@/graph/graph/Graph';\nimport GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport BarnesHutGraphPhysics from '@/graph/graph/physics/BarnesHutGraphPhysics';\nimport GraphLayout from '@/graph/graph/layout/GraphLayout';\nimport NoneGraphPhysics from '@/graph/graph/physics/NoneGraphPhysics';\n\nexport default function physicsFactory(data: GraphPhysicsData | undefined)\n    : new (graph: Graph, layout: GraphLayout) => GraphPhysics {\n  switch (data && data.type) {\n    case 'none':\n      return NoneGraphPhysics;\n    default:\n      return BarnesHutGraphPhysics;\n  }\n}\n","import {GraphData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport renderableFactory from '@/graph/base/renderableFactory';\nimport Edge from '@/graph/edge/Edge';\nimport layoutFactory from '@/graph/graph/layout/graphLayoutFactory';\nimport componentFactory from '@/graph/graph/component/componentLayoutFactory';\nimport graphTypeFactory from '@/graph/graph/type/graphTypeFactory';\nimport Port from '@/graph/base/Port';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\nimport GraphLayout, {LayoutData, LayoutEdgeData} from '@/graph/graph/layout/GraphLayout';\nimport ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport GraphType from '@/graph/graph/type/GraphType';\nimport GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport physicsFactory from '@/graph/graph/physics/graphPhysicsFactory';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Node from '@/graph/node/Node';\n\nexport default class Graph extends Port implements Renderable {\n  public static getId(data: GraphData) {\n    if (!data.id) {\n      throw new Error('Missing id field for graph');\n    }\n    return data.id;\n  }\n  public readonly graph: Graph | null;\n  public fullId!: string;\n  public depth!: number;\n  public fromEdges!: Set<Edge>;\n  public toEdges!: Set<Edge>;\n  public children!: Map<string, Renderable>;\n  public ports!: Map<string, Node | Graph>;\n  public edges!: Map<string, Edge>;\n  public subgraphs!: Map<string, Graph>;\n  public layouts!: GraphLayout[];\n  public physics!: GraphPhysics[];\n  public layoutsData!: LayoutData[];\n  public componentLayout!: ComponentLayout;\n  private graphType!: GraphType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'graph') {\n      throw new Error('Expect node type');\n    }\n    super(root, parent);\n    this.graph = graph;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: GraphData, parentData: ParentData | null) {\n    this.id = Graph.getId(data);\n    const newChildren = new Map();\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    this.fromEdges = new Set();\n    this.toEdges = new Set();\n    const oldChildren = this.children;\n    this.children = new Map();\n    this.edges = new Map();\n    this.ports = new Map();\n    this.subgraphs = new Map();\n    if (data.children) {\n      for (const child of data.children) {\n        const type = renderableFactory(child);\n        const id = type.getId(child);\n        if (this.children.has(id)) {\n          throw new Error(`Duplicated id ${id}`);\n        }\n        let newChild: Renderable;\n        if (oldChildren && oldChildren.has(id) &&\n            oldChildren.get(id)!.constructor === type) {\n          newChild = oldChildren.get(id)!;\n          newChild.updateData(child, {\n            parentId: this.fullId,\n            depth: this.depth,\n          });\n        } else {\n          newChild = new type(this.root, this, null, child, {\n            parentId: this.fullId,\n            depth: this.depth,\n          });\n        }\n        this.children.set(id, newChild);\n        if (newChild instanceof Edge) {\n          this.edges.set(id, newChild);\n        } else {\n          this.ports.set(id, newChild as any);\n          if (newChild instanceof Graph) {\n            this.subgraphs.set(id, newChild);\n          }\n        }\n      }\n    }\n    // Create adjacency list\n    const adjacencyList: Map<Node | Graph, Array<Node | Graph>> = new Map();\n    const edgesData: LayoutEdgeData[] = [];\n    for (const edge of this.edges.values()) {\n      const from = this.findPort(edge.from.split(':'));\n      const to = this.findPort(edge.to.split(':'));\n      const fromBelonging = this.findBelongingPort(edge.from);\n      const toBelonging = this.findBelongingPort(edge.to);\n      if (from && to && fromBelonging && toBelonging) {\n        if (!adjacencyList.has(fromBelonging)) {\n          adjacencyList.set(fromBelonging, []);\n        }\n        if (!adjacencyList.has(toBelonging)) {\n          adjacencyList.set(toBelonging, []);\n        }\n        adjacencyList.get(fromBelonging)!.push(toBelonging);\n        adjacencyList.get(toBelonging)!.push(fromBelonging);\n        edgesData.push({ from, to, fromBelonging, toBelonging, edge });\n      } else {\n        throw new Error('Cannot find starting or ending port of edge');\n      }\n    }\n    // Compute connected components by DFS\n    const unvisited: Set<Node | Graph> = new Set(this.ports.values());\n    this.layoutsData = [];\n    const calculateConnectedComponent = (from: Node | Graph) => {\n      unvisited.delete(from);\n      const component = this.layoutsData[this.layoutsData.length - 1];\n      component.ports.push(from);\n      const adjacency = adjacencyList.get(from);\n      if (adjacency) {\n        for (const to of adjacency) {\n          if (unvisited.has(to)) {\n            calculateConnectedComponent(to);\n          }\n        }\n      }\n    };\n    while (unvisited.size) {\n      const node = unvisited.values().next().value;\n      const component: LayoutData = {\n        ports: [],\n        edges: [],\n        children: [],\n      };\n      this.layoutsData.push(component);\n      calculateConnectedComponent(node);\n    }\n    // Classify edges to belonging component\n    const portToComponent: Map<Port, LayoutData> = new Map();\n    for (const component of this.layoutsData) {\n      for (const port of component.ports) {\n        portToComponent.set(port, component);\n      }\n    }\n    for (const edgeData of edgesData) {\n      const {fromBelonging} = edgeData;\n      portToComponent.get(fromBelonging)!.edges.push(edgeData);\n    }\n    // Add children\n    for (const component of this.layoutsData) {\n      component.children = (component.ports as any[])\n        .concat(component.edges.map((x) => x.edge));\n    }\n    // Create layout\n    const componentClass = componentFactory(data.component);\n    if (!this.componentLayout ||\n        this.componentLayout.constructor !== componentClass) {\n      this.componentLayout = new componentClass(this, this);\n    }\n    const layoutClass = layoutFactory(data.layout);\n    const physicsClass = physicsFactory(data.physics);\n    const newLayouts: GraphLayout[] = [];\n    const newPhysics: GraphPhysics[] = [];\n    for (let i = 0; i < this.layoutsData.length; ++i) {\n      const layout = this.layouts && i < this.layouts.length &&\n        this.layouts[i].constructor === layoutClass ?\n        this.layouts[i] : new layoutClass(this, this.componentLayout);\n      const physics = this.physics && i < this.physics.length &&\n        this.physics[i].constructor === physicsClass ?\n        this.physics[i] : new physicsClass(this, layout);\n      for (const child of this.layoutsData[i].children) {\n        (child as any).parent = layout;\n      }\n      layout.solve(data.layout, this.layoutsData[i], i);\n      physics.solve(data.physics, this.layoutsData[i]);\n      newLayouts.push(layout);\n      newPhysics.push(physics);\n    }\n    this.layouts = newLayouts;\n    this.physics = newPhysics;\n    this.componentLayout.updateData(data.component);\n    const typeClass = graphTypeFactory(data);\n    if (!this.graphType || this.graphType.constructor !== typeClass) {\n      this.graphType = new typeClass(this, data);\n    } else {\n      this.graphType.updateData(data);\n    }\n  }\n  public step(): boolean {\n    let updated = false;\n    if (this.subgraphs) {\n      for (const subgraph of this.subgraphs.values()) {\n        if (subgraph.step()) {\n          updated = true;\n        }\n      }\n    }\n    if (this.physics) {\n      for (const physics of this.physics) {\n        if (physics.step()) {\n          updated = true;\n        }\n      }\n    }\n    return updated;\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      draggable: true,\n      id: this.fullId,\n      x: this.position.x,\n      y: this.position.y,\n      children: this.graphType.render(),\n    };\n  }\n  public findBelongingPort(id: string): Node | Graph | null {\n    id = id.split(':')[0];\n    if (this.ports.has(id)) {\n      return this.ports.get(id)!;\n    }\n    for (const graph of this.subgraphs.values()) {\n      if (graph.findBelongingPort(id)) {\n        return graph;\n      }\n    }\n    return null;\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    if (this.ports.has(id[0])) {\n      const node = this.ports.get(id[0])!;\n      return node.findPort(id.slice(1));\n    }\n    for (const graph of this.subgraphs.values()) {\n      const node = graph.findPort(id);\n      if (node) {\n        return node;\n      }\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.graphType.getBoundingBoxSize();\n  }\n  public distanceToBorder(angle: number) {\n    return this.graphType.distanceToBorder(angle);\n  }\n}\n","import Edge from '@/graph/edge/Edge';\nimport {EdgeData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Positioned from '@/graph/base/Positioned';\n\nexport default abstract class EdgeType {\n  public readonly parent: Edge;\n  protected constructor(parent: Edge) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: EdgeData): void;\n  public fullyUpdatePosition(): void {\n    // do nothing\n  }\n  public updatePosition(): void {\n    // do nothing\n  }\n  public getControlPoints(): Positioned[] {\n    return [];\n  }\n  public abstract render(): AnyShape;\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, Position, StraightEdgeData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport interface StraightEdgeConfig {\n  fromPointer: boolean;\n  toPointer: boolean;\n  lineColor: string;\n  lineWidth: number;\n  pointerColor: string;\n  pointerWidth: number;\n  pointerHeight: number;\n}\n\nexport default class StraightEdgeType extends EdgeType {\n  private static defaultConfig: StraightEdgeConfig = {\n    fromPointer: false,\n    toPointer: true,\n    lineColor: 'black',\n    lineWidth: 1,\n    pointerColor: 'black',\n    pointerWidth: 10,\n    pointerHeight: 15,\n  };\n  private config!: StraightEdgeConfig;\n  private fromPointerPos: Position;\n  private toPointerPos: Position;\n  private fromAngle: number;\n  private toAngle: number;\n  private lineFromPos: Position;\n  private lineToPos: Position;\n  public constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'straight') {\n      throw new Error('Expect straight shape');\n    }\n    super(parent);\n    this.updateData(data);\n    this.fromPointerPos = { x: 0, y: 0 };\n    this.toPointerPos = { x: 0, y: 0 };\n    this.fromAngle = this.toAngle = 0;\n    this.lineFromPos = { x: 0, y: 0 };\n    this.lineToPos = { x: 0, y: 0 };\n  }\n  public updateData(data: StraightEdgeData): void {\n    this.config = Object.assign({}, StraightEdgeType.defaultConfig, data);\n  }\n  public fullyUpdatePosition(): void {\n    this.updatePosition();\n  }\n  public updatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    this.fromAngle = Math.atan2(toPos.y - fromPos.y, toPos.x - fromPos.x);\n    this.toAngle = Math.PI + this.fromAngle;\n    const fromDistance = fromPort.distanceToBorder(this.fromAngle);\n    const toDistance = toPort.distanceToBorder(this.toAngle);\n    let realFromPosX = fromPos.x + fromDistance * Math.cos(this.fromAngle);\n    let realFromPosY = fromPos.y + fromDistance * Math.sin(this.fromAngle);\n    let realToPosX = toPos.x + toDistance * Math.cos(this.toAngle);\n    let realToPosY = toPos.y + toDistance * Math.sin(this.toAngle);\n    this.fromPointerPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    if (this.config.fromPointer) {\n      realFromPosX += this.config.pointerWidth * Math.cos(this.fromAngle);\n      realFromPosY += this.config.pointerWidth * Math.sin(this.fromAngle);\n    }\n    this.lineFromPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    this.toPointerPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n    if (this.config.toPointer) {\n      realToPosX += this.config.pointerWidth * Math.cos(this.toAngle);\n      realToPosY += this.config.pointerWidth * Math.sin(this.toAngle);\n    }\n    this.lineToPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n  }\n\n  public render(): AnyShape {\n    const children: AnyShape[] = [];\n    if (this.config.fromPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.fromPointerPos.x,\n        y: this.fromPointerPos.y,\n        angle: this.fromAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    if (this.config.toPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.toPointerPos.x,\n        y: this.toPointerPos.y,\n        angle: this.toAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    children.unshift({\n      is: 'line',\n      points: [\n        this.lineFromPos.x, this.lineFromPos.y,\n        this.lineToPos.x, this.lineToPos.y,\n      ],\n      stroke: this.config.lineColor,\n      strokeWidth: this.config.lineWidth,\n    });\n    return {\n      is: 'group',\n      children,\n    };\n  }\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, Position, QuadraticEdgeData} from '@/graph/base/dataInput';\nimport Positioned from '@/graph/base/Positioned';\nimport Edge from '@/graph/edge/Edge';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport interface QuadraticEdgeConfig {\n  fromPointer: boolean;\n  toPointer: boolean;\n  lineColor: string;\n  lineWidth: number;\n  pointerColor: string;\n  pointerWidth: number;\n  pointerHeight: number;\n}\n\nexport default class QuadraticEdgeType extends EdgeType {\n  private static defaultConfig: QuadraticEdgeConfig = {\n    fromPointer: false,\n    toPointer: true,\n    lineColor: 'black',\n    lineWidth: 1,\n    pointerColor: 'black',\n    pointerWidth: 10,\n    pointerHeight: 15,\n  };\n  private config!: QuadraticEdgeConfig;\n  private controlPoint!: Positioned;\n  private fromPointerPos: Position;\n  private toPointerPos: Position;\n  private fromAngle: number;\n  private toAngle: number;\n  private lineFromPos: Position;\n  private lineToPos: Position;\n  public constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'quadratic') {\n      throw new Error('Expect quadratic shape');\n    }\n    super(parent);\n    this.updateData(data);\n    this.controlPoint = new Positioned(this.parent.parent);\n    this.fromPointerPos = { x: 0, y: 0 };\n    this.toPointerPos = { x: 0, y: 0 };\n    this.fromAngle = this.toAngle = 0;\n    this.lineFromPos = { x: 0, y: 0 };\n    this.lineToPos = { x: 0, y: 0 };\n  }\n  public updateData(data: QuadraticEdgeData): void {\n    this.config = Object.assign({}, QuadraticEdgeType.defaultConfig, data);\n  }\n  public fullyUpdatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    this.controlPoint.position = {\n      x: 0.5 * (fromPos.x + toPos.x),\n      y: 0.5 * (fromPos.y + toPos.y),\n    };\n    this.updatePosition();\n  }\n  public updatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    const viaPos = this.controlPoint.position;\n    this.fromAngle = Math.atan2(viaPos.y - fromPos.y, viaPos.x - fromPos.x);\n    this.toAngle = Math.PI + Math.atan2(toPos.y - viaPos.y, toPos.x - viaPos.x);\n    const fromDistance = fromPort.distanceToBorder(this.fromAngle);\n    const toDistance = toPort.distanceToBorder(this.toAngle);\n    let realFromPosX = fromPos.x + fromDistance * Math.cos(this.fromAngle);\n    let realFromPosY = fromPos.y + fromDistance * Math.sin(this.fromAngle);\n    let realToPosX = toPos.x + toDistance * Math.cos(this.toAngle);\n    let realToPosY = toPos.y + toDistance * Math.sin(this.toAngle);\n    this.fromPointerPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    if (this.config.fromPointer) {\n      realFromPosX += this.config.pointerWidth * Math.cos(this.fromAngle);\n      realFromPosY += this.config.pointerWidth * Math.sin(this.fromAngle);\n    }\n    this.lineFromPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    this.toPointerPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n    if (this.config.toPointer) {\n      realToPosX += this.config.pointerWidth * Math.cos(this.toAngle);\n      realToPosY += this.config.pointerWidth * Math.sin(this.toAngle);\n    }\n    this.lineToPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n  }\n  public getControlPoints(): Positioned[] {\n    return [this.controlPoint];\n  }\n  public render(): AnyShape {\n    const children: AnyShape[] = [];\n    if (this.config.fromPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.fromPointerPos.x,\n        y: this.fromPointerPos.y,\n        angle: this.fromAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    if (this.config.toPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.toPointerPos.x,\n        y: this.toPointerPos.y,\n        angle: this.toAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    children.unshift({\n      is: 'quadraticLine',\n      points: [\n        this.lineFromPos.x, this.lineFromPos.y,\n        this.controlPoint.position.x,\n        this.controlPoint.position.y,\n        this.lineToPos.x, this.lineToPos.y,\n      ],\n      stroke: this.config.lineColor,\n      strokeWidth: this.config.lineWidth,\n    });\n    return {\n      is: 'group',\n      children,\n    };\n  }\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, XdotEdgeData} from '@/graph/base/dataInput';\nimport {XdotShape} from '@/graph/base/dataXdot';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport default class XdotEdgeType extends EdgeType {\n  private shapes!: XdotShape[];\n  constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'xdot') {\n      throw new Error('Expect xdot shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: XdotEdgeData): void {\n    this.shapes = data.shapes ? ([] as XdotShape[]).concat(\n      ...Object.keys(data.shapes).map((x) => data.shapes![x])) : [];\n  }\n  public render(): AnyShape {\n    return{\n      is: 'group',\n      children: this.shapes,\n    };\n  }\n}\n","import {EdgeData} from '@/graph/base/dataInput';\nimport Edge from '@/graph/edge/Edge';\nimport StraightEdgeType from '@/graph/edge/type/StraightEdgeType';\nimport EdgeType from '@/graph/edge/type/EdgeType';\nimport QuadraticEdgeType from '@/graph/edge/type/QuadraticEdgeType';\nimport XdotEdgeType from '@/graph/edge/type/XdotEdgeType';\n\nexport default function edgeTypeFactory(data: EdgeData)\n    : new (parent: Edge, data: EdgeData) => EdgeType {\n  switch (data.shape) {\n    case 'straight':\n      return StraightEdgeType;\n    case 'xdot':\n      return XdotEdgeType;\n    default:\n      data.shape = 'quadratic';\n      return QuadraticEdgeType;\n  }\n}\n","/*\n * recordLabel\n *   : field ('|' field )*\n *   ;\n * field\n *   : (’<’ string ’>’)? string?\n *   | '{' recordLabel '}'\n *   ;\n */\n\nenum TokenEnum {\n  EOF,\n  VERTICAL_BAR,\n  LEFT_CURLY_BRACE,\n  RIGHT_CURLY_BRACE,\n  LEFT_ANGLE_BRACE,\n  RIGHT_ANGLE_BRACE,\n  STRING,\n}\n\ninterface Token {\n  type: TokenEnum;\n  text?: string;\n}\n\nexport interface Record {\n  type: 'record';\n  children: RecordData[];\n}\n\nexport interface Field {\n  type: 'field';\n  port?: string;\n  text?: string;\n}\n\nexport type RecordData = Record | Field;\n\nexport default function recordParser(record: string): RecordData {\n  let position = 0;\n  const buffer: Token[] = [];\n  function lexer(): Token {\n    if (buffer.length) {\n      return buffer.pop()!;\n    }\n    while (position < record.length &&\n           ' \\t\\n\\r\\v'.indexOf(record[position]) > -1) {\n      ++position;\n    }\n    if (position >= record.length) {\n      return { type: TokenEnum.EOF };\n    }\n    switch (record[position]) {\n      case '|':\n        ++position;\n        return { type: TokenEnum.VERTICAL_BAR };\n      case '{':\n        ++position;\n        return { type: TokenEnum.LEFT_CURLY_BRACE };\n      case '}':\n        ++position;\n        return { type: TokenEnum.RIGHT_CURLY_BRACE };\n      case '<':\n        ++position;\n        return { type: TokenEnum.LEFT_ANGLE_BRACE };\n      case '>':\n        ++position;\n        return { type: TokenEnum.RIGHT_ANGLE_BRACE };\n      default: {\n        let text = '';\n        while (position < record.length &&\n               ' \\t\\n\\r\\v|{}<>'.indexOf(record[position]) === -1) {\n          if (record[position] === '\\\\') {\n            ++position;\n            if (position === record.length) {\n              throw new Error('Unexpected end of escape sequence');\n            }\n            switch (record[position]) {\n              case 'n':\n                text += '\\n';\n                break;\n              default:\n                text += record[position];\n            }\n          } else {\n            text += record[position];\n          }\n          ++position;\n        }\n        return { type: TokenEnum.STRING, text };\n      }\n    }\n  }\n  function parseRecordLabel(): Record {\n    const children = [parseField()];\n    let token;\n    while ((token = lexer())!.type === TokenEnum.VERTICAL_BAR) {\n      children.push(parseField());\n    }\n    buffer.push(token);\n    return { type: 'record', children };\n  }\n  function parseField(): RecordData {\n    let token = lexer();\n    if (token.type === TokenEnum.LEFT_CURLY_BRACE) {\n      const ret = parseRecordLabel();\n      if (lexer().type !== TokenEnum.RIGHT_CURLY_BRACE) {\n        throw new Error('Expect \\'}\\'');\n      }\n      return ret;\n    }\n    const result: Field = { type: 'field' };\n    if (token.type === TokenEnum.LEFT_ANGLE_BRACE) {\n      token = lexer();\n      if (token.type === TokenEnum.STRING) {\n        let port = token.text;\n        while ((token = lexer()).type === TokenEnum.STRING) {\n          port += ' ' + token.text;\n        }\n        result.port = port;\n      }\n      if (token.type !== TokenEnum.RIGHT_ANGLE_BRACE) {\n        throw new Error('Expect \\'>\\'');\n      }\n      token = lexer();\n    }\n    if (token.type === TokenEnum.STRING) {\n      let text = token.text;\n      while ((token = lexer()).type === TokenEnum.STRING) {\n        text += ' ' + token.text;\n      }\n      result.text = text;\n    }\n    buffer.push(token);\n    return result;\n  }\n  const tree = parseRecordLabel();\n  if (lexer().type !== TokenEnum.EOF) {\n    throw new Error('Unexpected token');\n  }\n  return tree;\n}\n","import Node from '@/graph/node/Node';\nimport {NodeData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class NodeType {\n  public readonly parent: Node;\n  protected constructor(parent: Node) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: NodeData): void;\n  public abstract render(): AnyShape[];\n  public findPort(id: string[]): Port | null {\n    return null;\n  }\n  public getBoundingBoxSize(): Size {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n  public distanceToBorder(angle: number): number {\n    return 0;\n  }\n}\n","import NodeType from '@/graph/node/type/NodeType';\nimport Node from '@/graph/node/Node';\nimport {BoxNodeData, NodeData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface BoxNodeConfig {\n  label: string | null;\n  style: 'solid' | 'filled';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n}\n\nexport default class BoxNodeType extends NodeType {\n  private static defaultConfig: BoxNodeConfig = {\n    label: null,\n    style: 'solid',  // or 'filled'\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 4,\n    align: 'center',\n  };\n  private config!: BoxNodeConfig;\n  private textSize!: Size;\n  private contentSize!: Size;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'box') {\n      throw new Error('Expect box shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: BoxNodeData) {\n    const newConfig = Object.assign({}, BoxNodeType.defaultConfig, data);\n    const textSizeNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    const contentSizeNeedsUpdate = textSizeNeedsUpdate ||\n      this.config.padding !== newConfig.padding;\n    const borderSizeNeedsUpdate = contentSizeNeedsUpdate ||\n      this.config.strokeWidth !== newConfig.strokeWidth;\n    this.config = newConfig;\n    if (textSizeNeedsUpdate) {\n      const ctx = this.parent.root.ctx;\n      ctx.font = `${newConfig.fontSize}px ${newConfig.fontFamily}`;\n      const lines = newConfig.label ? newConfig.label.split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * newConfig.fontSize * newConfig.lineHeight,\n      };\n    }\n    if (contentSizeNeedsUpdate) {\n      this.contentSize = {\n        width: this.textSize.width + 2 * newConfig.padding,\n        height: this.textSize.height + 2 * newConfig.padding,\n      };\n    }\n    if (borderSizeNeedsUpdate) {\n      // Konva's border extends towards both inner and outer\n      this.borderSize = {\n        width: this.contentSize.width + newConfig.strokeWidth,\n        height: this.contentSize.height + newConfig.strokeWidth,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    const rect: AnyShape = {\n      is: 'rect',\n      x: -this.contentSize.width / 2,\n      y: -this.contentSize.height / 2,\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n      fill: this.config.style === 'filled' ?\n        this.config.fillColor : undefined,\n      stroke: this.config.strokeWidth > 0 ?\n        this.config.strokeColor : undefined,\n      strokeWidth: this.config.strokeWidth,\n    };\n    const rendered: AnyShape[] = [rect];\n    if (this.config.label) {\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.contentSize.width / 2,\n        y: -this.contentSize.height / 2,\n        text: this.config.label,\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        lineHeight: this.config.lineHeight,\n        padding: this.config.padding,\n        align: this.config.align,\n      };\n      rendered.push(text);\n    }\n    return rendered;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import RecordNodeType from '@/graph/node/type/RecordNodeType';\nimport {Field, Record, RecordData} from '@/graph/node/type/recordParser';\nimport {Size} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default class RecordCell extends Port {\n  private readonly nodeType: RecordNodeType;\n  private isField!: boolean;\n  private isHorizontal!: boolean;\n  private label?: string;\n  private children?: RecordCell[];\n  private textSize?: Size;\n  private contentSize?: Size;\n  private cellSize!: Size;\n  constructor(root: Root, parent: Port, nodeType: RecordNodeType,\n              data: RecordData, isHorizontal = true) {\n    super(root, parent);\n    this.nodeType = nodeType;\n    this.updateData(data, isHorizontal);\n  }\n  public updateData(data: RecordData, isHorizontal = true) {\n    this.isField = data.type === 'field';\n    this.isHorizontal = isHorizontal;\n    if (this.isField) {\n      const fieldData = data as Field;\n      if (fieldData.port) {\n        this.nodeType.getPorts()!.set(fieldData.port, this);\n      }\n      const ctx = this.root.ctx;\n      const config = this.nodeType.getConfig()!;\n      this.label = fieldData.text || '';\n      ctx.font = `${config.fontSize}px ${config.fontFamily}`;\n      const lines =  this.label ?  this.label.split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * config.fontSize * config.lineHeight,\n      };\n      this.contentSize = {\n        width: this.textSize.width + 2 * config.padding,\n        height: this.textSize.height + 2 * config.padding,\n      };\n      this.cellSize = {\n        width: this.contentSize.width,\n        height: this.contentSize.height,\n      };\n    } else {\n      const recordData = data as Record;\n      this.children = [];\n      for (const child of recordData.children) {\n        const cell = new RecordCell(this.root, this, this.nodeType,\n          child, !isHorizontal);\n        this.children.push(cell);\n      }\n      if (isHorizontal) {\n        this.cellSize = {\n          width: this.children.map((x: RecordCell) => x.cellSize.width)\n            .reduce((a, b) => a + b, 0),\n          height: Math.max(...this.children.map(\n            (x: RecordCell) => x.cellSize.height)),\n        };\n      } else {\n        this.cellSize = {\n          width: Math.max(...this.children.map(\n            (x: RecordCell) => x.cellSize.width)),\n          height: this.children.map((x: RecordCell) => x.cellSize.height)\n            .reduce((a, b) => a + b, 0),\n        };\n      }\n    }\n  }\n  public updateCellSize(width: number, height: number) {\n    if (!this.isField) {\n      if (!this.children) {\n        throw new Error('Non-field record should have children');\n      }\n      if (this.isHorizontal) {\n        const deltaWidth = (width - this.cellSize.width) / this.children.length;\n        let startX = -width / 2;\n        for (const child of this.children) {\n          child.updateCellSize(child.cellSize.width + deltaWidth, height);\n          child.position = {\n            x: startX + child.cellSize.width / 2,\n            y: 0,\n          };\n          startX += child.cellSize.width;\n        }\n      } else {\n        const deltaHeight = (height - this.cellSize.height) /\n          this.children.length;\n        let startY = -height / 2;\n        for (const child of this.children) {\n          child.updateCellSize(width, child.cellSize.height + deltaHeight);\n          child.position = {\n            x: 0,\n            y: startY + child.cellSize.height / 2,\n          };\n          startY += child.cellSize.height;\n        }\n      }\n    }\n    this.cellSize = { width, height };\n  }\n  public getCellSize(): Size | undefined {\n    return this.cellSize;\n  }\n  public render(): AnyShape[] {\n    let rendered: AnyShape[];\n    if (this.isField) {\n      const config = this.nodeType.getConfig()!;\n      rendered = [\n        {\n          is: 'rect',\n          x: -this.cellSize.width / 2,\n          y: -this.cellSize.height / 2,\n          width: this.cellSize.width,\n          height: this.cellSize.height,\n          fill: config.style === 'filled' ? config.fillColor : undefined,\n          stroke: config.strokeWidth > 0 ? config.strokeColor : undefined,\n          strokeWidth: config.strokeWidth,\n        },\n      ];\n      if (this.label) {\n        if (!this.contentSize) {\n          throw new Error('Field record should have content size');\n        }\n        rendered.push({\n          is: 'text',\n          x: -this.contentSize.width / 2,\n          y: -this.contentSize.height / 2,\n          text: this.label,\n          fontSize: config.fontSize,\n          fontFamily: config.fontFamily,\n          lineHeight: config.lineHeight,\n          padding: config.padding,\n          align: config.align,\n        });\n      }\n    } else {\n      if (!this.children) {\n        throw new Error('Non-field record should have children');\n      }\n      rendered = this.children.map((x) => {\n        const position = x.position;\n        return {\n          is: 'group',\n          x: position.x,\n          y: position.y,\n          children: x.render(),\n        };\n      });\n    }\n    return rendered;\n  }\n  public getBoundingBoxSize(): Size {\n    const config = this.nodeType.getConfig()!;\n    return {\n      width: this.cellSize.width + config.strokeWidth,\n      height: this.cellSize.height + config.strokeWidth,\n    };\n  }\n  public distanceToBorder(angle: number): number {\n    const borderSize = this.getBoundingBoxSize();\n    return Math.min(\n      Math.abs(borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import NodeType from './NodeType';\nimport Node from '@/graph/node/Node';\nimport recordParser from './recordParser';\nimport RecordCell from './RecordCell';\nimport {NodeData, RecordNodeData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface RecordNodeConfig {\n  label: string;\n  direction: 'horizontal' | 'vertical';\n  style: 'solid' | 'filled';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n}\n\nexport default class RecordNodeType extends NodeType {\n  public static defaultConfig: RecordNodeConfig = {\n    label: '',\n    direction: 'horizontal', // or 'vertical'\n    style: 'solid',\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 4,\n    align: 'center',\n  };\n  private config!: RecordNodeConfig;\n  private ports!: Map<string, Port>;\n  private root!: RecordCell;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'record') {\n      throw new Error('Expect record shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public getConfig(): RecordNodeConfig | undefined {\n    return this.config;\n  }\n  public getPorts(): Map<string, Port> | undefined {\n    return this.ports;\n  }\n  public updateData(data: RecordNodeData) {\n    const newConfig = Object.assign({}, RecordNodeType.defaultConfig, data);\n    const contentNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.direction !== newConfig.direction ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight ||\n      this.config.padding !== newConfig.padding;\n    const borderNeedsUpdate = contentNeedsUpdate ||\n      this.config.strokeWidth !== newConfig.strokeWidth;\n    this.config = newConfig;\n    if (contentNeedsUpdate) {\n      const record = recordParser(data.label);\n      this.ports = new Map();\n      this.root = new RecordCell(this.parent.root, this.parent, this,\n        record, this.config.direction === 'horizontal');\n      const rootCellSize = this.root.getCellSize()!;\n      this.root.updateCellSize(rootCellSize.width, rootCellSize.height);\n    }\n    if (borderNeedsUpdate) {\n      const rootCellSize = this.root.getCellSize()!;\n      this.borderSize = {\n        width: rootCellSize.width + this.config.strokeWidth,\n        height: rootCellSize.height + this.config.strokeWidth,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    return this.root.render();\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 1) {\n      const founded = this.ports.get(id[0]);\n      if (founded) {\n        return founded;\n      }\n      return null;\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import TableNodeType from '@/graph/node/type/TableNodeType';\nimport Root from '@/graph/Root';\nimport {Element} from 'xml-js';\nimport {Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface TableCellConfig {\n  rowSpan: number;\n  columnSpan: number;\n  border: number;\n  backgroundColor: string;\n}\n\nexport default class TableCell extends Port {\n  public rowOffset!: number;\n  public columnOffset!: number;\n  public contentSize!: Size;\n  public cellSize!: Size;\n  private readonly nodeType: TableNodeType;\n  private config!: TableCellConfig;\n  private port?: string;\n  private label!: string;\n  private textSize!: Size;\n  constructor(root: Root, parent: Port, nodeType: TableNodeType, data: any) {\n     super(root, parent);\n     this.nodeType = nodeType;\n     this.updateData(data);\n  }\n  public updateData(data: any) {\n    this.config = {\n      rowSpan: 1,\n      columnSpan: 1,\n      border: this.nodeType.getTableConfig()!.cellBorder,\n      backgroundColor: 'white',\n    };\n    if (data.attributes) {\n      for (const attribute of Object.keys(data.attributes)) {\n        const value = data.attributes[attribute];\n        switch (attribute.toLowerCase()) {\n          case 'rowspan':\n            this.config.rowSpan = parseInt(value, 10);\n            break;\n          case 'colspan':\n            this.config.columnSpan = parseInt(value, 10);\n            break;\n          case 'border':\n            this.config.border = parseInt(value, 10);\n            break;\n          case 'bgcolor':\n            this.config.backgroundColor = value;\n            break;\n          case 'port':\n            this.port = value;\n            break;\n          default:\n            throw new Error('Unknown attribute for table cell');\n        }\n      }\n    }\n    function getText(element: Element): string {\n      switch (element.type) {\n        case 'text':\n          if (typeof element.text === 'string') {\n            return element.text;\n          }\n          return '';\n        case 'element':\n          if (element.name && element.name.toLowerCase() === 'br') {\n            return '\\n';\n          }\n          if (element.elements) {\n            return element.elements.map(getText).join('');\n          } else {\n            return '';\n          }\n        default:\n          throw new Error('Unknown element type');\n      }\n    }\n    this.label = getText(data);\n    const parentConfig = this.nodeType.getConfig()!;\n    const tableConfig = this.nodeType.getTableConfig()!;\n    const ctx = this.root.ctx;\n    ctx.font = `${parentConfig.fontSize}px ${parentConfig.fontFamily}`;\n    const lines = this.label ? this.label.split('\\n') : [];\n    this.textSize = {\n      width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n      height: lines.length * parentConfig.fontSize * parentConfig.lineHeight,\n    };\n    this.contentSize = {\n      width: this.textSize.width + 2 * tableConfig.cellPadding,\n      height: this.textSize.height + 2 * tableConfig.cellPadding,\n    };\n    this.cellSize = {\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n    };\n    this.rowOffset = 0;\n    this.columnOffset = 0;\n  }\n  public render(): AnyShape {\n    const rect: AnyShape = {\n      is: 'rect',\n      x: -this.cellSize!.width / 2,\n      y: -this.cellSize!.height / 2,\n      width: this.cellSize!.width,\n      height: this.cellSize!.height,\n      fill: this.config!.backgroundColor,\n      stroke: this.config!.border > 0 ? 'black' : undefined,\n      strokeWidth: this.config!.border,\n    };\n    const rendered: AnyShape[] = [rect];\n    if (this.label) {\n      const parentConfig = this.nodeType.getConfig()!;\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.contentSize!.width / 2,\n        y: -this.contentSize!.height / 2,\n        text: this.label,\n        fontSize: parentConfig.fontSize,\n        fontFamily: parentConfig.fontFamily,\n        lineHeight: parentConfig.lineHeight,\n        padding: this.nodeType.getTableConfig()!.cellPadding,\n        align: 'center',\n      };\n      rendered.push(text);\n    }\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: rendered,\n    };\n  }\n  public getConfig(): TableCellConfig | undefined {\n    return this.config;\n  }\n  public getPort(): string | undefined {\n    return this.port;\n  }\n  public getBoundingBoxSize() {\n    return {\n      width: this.cellSize!.width + this.config!.border,\n      height: this.cellSize!.height + this.config!.border,\n    };\n  }\n  public distanceToBorder(angle: number) {\n    const borderSize = this.getBoundingBoxSize();\n    return Math.min(\n      Math.abs(borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import convert, {Element} from 'xml-js';\nimport NodeType from './NodeType';\nimport TableCell from './TableCell';\nimport Node from '@/graph/node/Node';\nimport {NodeData, Size, TableNodeData} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface TableNodeConfig {\n  label: string;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n}\n\ninterface TableConfig {\n  border: number;\n  cellBorder: number;\n  cellSpacing: number;\n  cellPadding: number;\n}\n\nexport default class TableNodeType extends NodeType {\n  public static defaultConfig: TableNodeConfig = {\n    label: '',\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n  };\n  private config!: TableNodeConfig;\n  private tableConfig!: TableConfig;\n  private table!: TableCell[][];\n  private ports!: Map<string, Port>;\n  private contentSize!: Size;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'table') {\n      throw new Error('Expect record shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: TableNodeData) {\n    const newConfig = Object.assign({}, TableNodeType.defaultConfig, data);\n    const layoutNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    this.config = newConfig;\n    if (layoutNeedsUpdate) {\n      const jsonObj = convert.xml2js(this.config.label) as Element;\n      if (!jsonObj.elements || !jsonObj.elements[0] ||\n          !jsonObj.elements[0].name ||\n          jsonObj.elements[0].name.toLowerCase() !== 'table') {\n        throw new Error('Expect table element');\n      }\n      const tableElement = jsonObj.elements[0];\n      this.tableConfig = {\n        border: 0,\n        cellBorder: 1,\n        cellSpacing: 0,\n        cellPadding: 4,\n      };\n      if (tableElement.attributes) {\n        for (const attribute of Object.keys(tableElement.attributes)) {\n          const value = tableElement.attributes[attribute] as string;\n          switch (attribute.toLowerCase()) {\n            case 'border':\n              this.tableConfig.border = parseInt(value, 10);\n              break;\n            case 'cellborder':\n              this.tableConfig.cellBorder = parseInt(value, 10);\n              break;\n            case 'cellspacing':\n              this.tableConfig.cellSpacing = parseInt(value, 10);\n              break;\n            case 'cellpadding':\n              this.tableConfig.cellPadding = parseInt(value, 10);\n              break;\n            default:\n              throw new Error('Unknown attribute for table');\n          }\n        }\n      }\n      // Parse table and get numbers of rows and columns\n      this.table = [];\n      this.ports = new Map();\n      let rows = 0;\n      let columns = 0;\n      let firstRow = true;\n      if (tableElement.elements) {\n        for (const tr of tableElement.elements) {\n          if (!tr.name || tr.name.toLowerCase() !== 'tr') {\n            throw new Error('Expect tr element');\n          }\n          const row = [];\n          if (tr.elements) {\n            for (const td of tr.elements) {\n              if (!td.name || td.name.toLowerCase() !== 'td') {\n                throw new Error('Expect td element');\n              }\n              const cell = new TableCell(this.parent.root, this.parent,\n                this, td);\n              const port = cell.getPort();\n              if (port) {\n                this.ports.set(port, cell);\n              }\n              if (firstRow) {\n                columns += cell.getConfig()!.columnSpan;\n              }\n              row.push(cell);\n            }\n          }\n          ++rows;\n          if (firstRow) {\n            firstRow = false;\n          }\n          this.table.push(row);\n        }\n      }\n      // Create empty cell size table\n      const cellSizes = [];\n      for (let i = 0; i < rows; ++i) {\n        cellSizes.push(Array(columns).fill(null));\n      }\n      // Fill size table with minimum required size\n      for (let rowOffset = 0; rowOffset < rows; ++rowOffset) {\n        let columnOffset = 0;\n        for (const cell of this.table[rowOffset]) {\n          while (columnOffset < columns && cellSizes[rowOffset][columnOffset]) {\n            ++columnOffset;\n          }\n          cell.rowOffset = rowOffset;\n          cell.columnOffset = columnOffset;\n          const {rowSpan, columnSpan} = cell.getConfig()!;\n          const cellHeight = (cell.contentSize.height -\n            (rowSpan - 1) * this.tableConfig.cellSpacing) / rowSpan;\n          const cellWidth = (cell.contentSize.width -\n            (columnSpan - 1) * this.tableConfig.cellSpacing) / columnSpan;\n          for (let i = 0; i < rowSpan; ++i) {\n            for (let j = 0; j < columnSpan; ++j) {\n              cellSizes[rowOffset + i][columnOffset + j] = {\n                width: cellWidth,\n                height: cellHeight,\n              };\n            }\n          }\n          columnOffset += columnSpan;\n        }\n      }\n      // Get height of rows and width of columns\n      const rowHeight = [];\n      const columnWidth = [];\n      for (let i = 0; i < rows; ++i) {\n        let max = -Infinity;\n        for (let j = 0; j < columns; ++j) {\n          if (cellSizes[i][j].height > max) {\n            max = cellSizes[i][j].height;\n          }\n        }\n        rowHeight.push(max);\n      }\n      for (let j = 0; j < columns; ++j) {\n        let max = -Infinity;\n        for (let i = 0; i < rows; ++i) {\n          if (cellSizes[i][j].width > max) {\n            max = cellSizes[i][j].width;\n          }\n        }\n        columnWidth.push(max);\n      }\n      // Get accumulated height and width\n      const accRowHeight = [0];\n      const accColumnWidth = [0];\n      for (let i = 0; i < rows; ++i) {\n        accRowHeight.push(accRowHeight[i] + rowHeight[i] +\n          this.tableConfig.cellSpacing);\n      }\n      for (let i = 0; i < columns; ++i) {\n        accColumnWidth.push(accColumnWidth[i] + columnWidth[i] +\n          this.tableConfig.cellSpacing);\n      }\n      this.contentSize = {\n        width: accColumnWidth[accColumnWidth.length - 1] -\n          this.tableConfig.cellSpacing,\n        height: accRowHeight[accRowHeight.length - 1] -\n          this.tableConfig.cellSpacing,\n      };\n      // Set size and position to cells\n      for (const row of this.table) {\n        for (const cell of row) {\n          const {rowSpan, columnSpan} = cell.getConfig()!;\n          const {rowOffset, columnOffset} = cell;\n          const upperLeftX = accColumnWidth[columnOffset];\n          const upperLeftY = accRowHeight[rowOffset];\n          const width = accColumnWidth[columnOffset + columnSpan] -\n            upperLeftX - this.tableConfig.cellSpacing;\n          const height = accRowHeight[rowOffset + rowSpan] -\n            upperLeftY - this.tableConfig.cellSpacing;\n          cell.position = {\n            x: upperLeftX + width / 2 - this.contentSize.width / 2,\n            y: upperLeftY + height / 2 - this.contentSize.height / 2,\n          };\n          cell.cellSize = { width, height };\n        }\n      }\n      this.borderSize = {\n        width: this.contentSize.width + this.tableConfig.border +\n          2 * this.tableConfig.cellSpacing,\n        height: this.contentSize.height + this.tableConfig.border +\n          2 * this.tableConfig.cellSpacing,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    const rendered: AnyShape[] = [];\n    rendered.push({\n      is: 'rect',\n      x: -this.contentSize.width / 2 - this.tableConfig.cellSpacing,\n      y: -this.contentSize.height / 2 - this.tableConfig.cellSpacing,\n      width: this.contentSize.width + 2 * this.tableConfig.cellSpacing,\n      height: this.contentSize.height + 2 * this.tableConfig.cellSpacing,\n      fill: 'white',\n      stroke: this.tableConfig.border > 0 ? 'black' : undefined,\n      strokeWidth: this.tableConfig.border,\n    });\n    for (const row of this.table) {\n      for (const cell of row) {\n        rendered.push(cell.render());\n      }\n    }\n    return rendered;\n  }\n  public getConfig(): TableNodeConfig | undefined {\n    return this.config;\n  }\n  public getTableConfig(): TableConfig | undefined {\n    return this.tableConfig;\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 1) {\n      const founded = this.ports.get(id[0]);\n      if (founded) {\n        return founded;\n      }\n      return null;\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import Node from '@/graph/node/Node';\nimport {NodeData, XdotNodeData} from '@/graph/base/dataInput';\nimport NodeType from '@/graph/node/type/NodeType';\nimport {XdotShape} from '@/graph/base/dataXdot';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Port from '@/graph/base/Port';\n\nexport default class XdotNodeType extends NodeType {\n  private shapes!: XdotShape[];\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'xdot') {\n      throw new Error('Expect xdot shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public findPort(id: string[]): Port | null {\n    return this.parent;\n  }\n  public updateData(data: XdotNodeData): void {\n    this.shapes = data.shapes ? ([] as XdotShape[]).concat(\n      ...Object.keys(data.shapes).map((x) => data.shapes![x])) : [];\n  }\n  public render(): AnyShape[] {\n    return this.shapes;\n  }\n}\n","import BoxNodeType from '@/graph/node/type/BoxNodeType';\nimport NodeType from '@/graph/node/type/NodeType';\nimport {NodeData} from '@/graph/base/dataInput';\nimport Node from '@/graph/node/Node';\nimport RecordNodeType from '@/graph/node/type/RecordNodeType';\nimport TableNodeType from '@/graph/node/type/TableNodeType';\nimport XdotNodeType from '@/graph/node/type/XdotNodeType';\n\nexport default function nodeTypeFactory(data: NodeData)\n    : new (parent: Node, data: NodeData) => NodeType {\n  switch (data.shape) {\n    case 'table':\n      return TableNodeType;\n    case 'record':\n      return RecordNodeType;\n    case 'xdot':\n      return XdotNodeType;\n    default:\n      data.shape = 'box';\n      return BoxNodeType;\n  }\n}\n","import {NodeData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport nodeTypeFactory from '@/graph/node/type/nodeTypeFactory';\nimport NodeType from '@/graph/node/type/NodeType';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Port from '@/graph/base/Port';\nimport Positioned from '@/graph/base/Positioned';\nimport Graph from '@/graph/graph/Graph';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport default class Node extends Port implements Renderable {\n  public static getId(data: NodeData) {\n    if (!data.id) {\n      throw new Error('Missing id field for node');\n    }\n    return data.id;\n  }\n  public readonly graph: Graph | null;\n  public depth!: number;\n  public fullId!: string;\n  public fromEdges!: Set<Edge>;\n  public toEdges!: Set<Edge>;\n  private nodeType!: NodeType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'node') {\n      throw new Error('Expect node type');\n    }\n    super(root, parent);\n    this.graph = graph;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: NodeData, parentData: ParentData | null) {\n    this.id = Node.getId(data);\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    this.fromEdges = new Set();\n    this.toEdges = new Set();\n    const typeClass = nodeTypeFactory(data);\n    if (!this.nodeType || this.nodeType.constructor !== typeClass) {\n      this.nodeType = new typeClass(this, data);\n    } else {\n      this.nodeType.updateData(data);\n    }\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      draggable: true,\n      id: this.fullId,\n      x: this.position.x,\n      y: this.position.y,\n      children: this.nodeType.render(),\n    };\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    return this.nodeType.findPort(id);\n  }\n  public getBoundingBoxSize() {\n    return this.nodeType.getBoundingBoxSize();\n  }\n  public distanceToBorder(angle: number) {\n    return this.nodeType.distanceToBorder(angle);\n  }\n}\n","import {EdgeData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\nimport Graph from '@/graph/graph/Graph';\nimport EdgeType from '@/graph/edge/type/EdgeType';\nimport edgeTypeFactory from '@/graph/edge/type/edgeTypeFactory';\nimport Port from '@/graph/base/Port';\nimport Node from '@/graph/node/Node';\n\nexport default class Edge implements Renderable {\n  public static getId(data: EdgeData) {\n    return data.id || `${data.from}-${data.to}`;\n  }\n  private static findParentNodeOrGraph(node: Positioned | null)\n    : Node | Graph | null {\n    while (node && !(node instanceof Graph || node instanceof Node)) {\n      node = node.parent;\n    }\n    return node;\n  }\n  public from!: string;\n  public to!: string;\n  public depth!: number;\n  public fullId!: string;\n  public readonly root: Root;\n  public readonly graph: Graph | null;\n  public readonly parent: Positioned | null;\n  public id!: string;\n  public fromPort!: Port;\n  public toPort!: Port;\n  public fromNodeOrGraph!: Node | Graph;\n  public toNodeOrGraph!: Node | Graph;\n  private edgeType!: EdgeType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'edge') {\n      throw new Error('Expect edge type');\n    }\n    this.root = root;\n    this.graph = graph;\n    this.parent = parent;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: EdgeData, parentData: ParentData | null) {\n    this.id = Edge.getId(data);\n    this.from = data.from;\n    this.to = data.to;\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    if (!this.graph) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.graph.findPort(this.from.split(':'));\n    const toPort = this.graph.findPort(this.to.split(':'));\n    if (!fromPort || !toPort) {\n      throw new Error(`Unknown start or end port ${this.from}-${this.to} for edge`);\n    }\n    this.fromPort = fromPort;\n    this.toPort = toPort;\n    if (this.fromNodeOrGraph) {\n      this.fromNodeOrGraph.fromEdges.delete(this);\n    }\n    if (this.toNodeOrGraph) {\n      this.toNodeOrGraph.toEdges.delete(this);\n    }\n    const fromNodeOrGraph = Edge.findParentNodeOrGraph(fromPort);\n    const toNodeOrGraph = Edge.findParentNodeOrGraph(toPort);\n    if (!fromNodeOrGraph || !toNodeOrGraph) {\n      throw new Error('Unknown start or end node for edge');\n    }\n    fromNodeOrGraph.fromEdges.add(this);\n    toNodeOrGraph.toEdges.add(this);\n    this.fromNodeOrGraph = fromNodeOrGraph;\n    this.toNodeOrGraph = toNodeOrGraph;\n    const typeClass = edgeTypeFactory(data);\n    if (!this.edgeType || this.edgeType.constructor !== typeClass) {\n      this.edgeType = new typeClass(this, data);\n    } else {\n      this.edgeType.updateData(data);\n    }\n  }\n  public fullyUpdatePosition() {\n    this.edgeType.fullyUpdatePosition();\n  }\n  public updatePosition() {\n    this.edgeType.updatePosition();\n  }\n  public getControlPoints(): Positioned[] {\n    return this.edgeType.getControlPoints();\n  }\n  public render() {\n    return this.edgeType.render();\n  }\n}\n","import Root from '@/graph/Root';\nimport Edge from '@/graph/edge/Edge';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\nimport {RenderableData} from '@/graph/base/dataInput';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface RenderableConstructor {\n  new (root: Root,\n       graph: Graph | null,\n       parent: Positioned | null,\n       data: RenderableData,\n       parentData: ParentData | null): Renderable;\n  getId(data: RenderableData): string;\n}\n\nexport default function renderableFactory(data: RenderableData)\n    : RenderableConstructor {\n  switch (data.type) {\n    case 'node':\n      return Node;\n    case 'edge':\n      return Edge;\n    case 'graph':\n      return Graph;\n    default:\n      throw new Error('Unknown renderable object');\n  }\n}\n","import EventEmitter from '@/graph/base/EventEmitter';\nimport { RenderableData } from '@/graph/base/dataInput';\nimport renderableFactory from '@/graph/base/renderableFactory';\nimport Renderable from '@/graph/base/Renderable';\nimport Port from '@/graph/base/Port';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\n\n\nexport default class Root extends EventEmitter {\n  public ctx: CanvasRenderingContext2D;\n  public child: (Renderable & Port) | null;\n  private stepTimer: number;\n  private fixed: Port[];\n  public constructor() {\n    super();\n    this.ctx = document.createElement('canvas').getContext('2d')!;\n    this.child = null;\n    this.stepTimer = setInterval(() => {\n      if (this.child instanceof Graph) {\n        if (this.child.step()) {\n          this.informRender();\n        }\n      }\n    }, 1000 / 60);\n    this.fixed = [];\n  }\n  public findPort(id: string) {\n    const idArray = id.split(':');\n    if (this.child) {\n      if (this.child.id !== idArray[0]) {\n        return null;\n      }\n      return this.child.findPort(idArray.slice(1));\n    }\n    return null;\n  }\n  public setFixed(fixed: string[]) {\n    this.clearFixed();\n    this.fixed = fixed.map((id) => {\n      const port = this.findPort(id);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      if (!(port instanceof Graph || port instanceof Node)) {\n        throw new Error('Wrong type of port');\n      }\n      port.fixed = true;\n      return port;\n    });\n  }\n  public clearFixed() {\n    for (const port of this.fixed) {\n      port.fixed = false;\n    }\n    this.fixed = [];\n  }\n  public movePort(id: string,\n                  delta: { deltaX: number, deltaY: number }) {\n    const port = this.findPort(id);\n    if (port === null) {\n      throw new Error('Cannot find the port');\n    }\n    if (!(port instanceof Graph || port instanceof Node)) {\n      throw new Error('Wrong type of port');\n    }\n    port.position.x += delta.deltaX;\n    port.position.y += delta.deltaY;\n    for (const edge of [...port.fromEdges, ...port.toEdges]) {\n      edge.updatePosition();\n    }\n    this.informRender();\n  }\n  public updateData(data: RenderableData) {\n    const newClass = renderableFactory(data);\n    if (!this.child || this.child.constructor !== newClass) {\n      const renderable = new newClass(this, null, null, data, null);\n      // noinspection SuspiciousTypeOfGuard\n      if (!(renderable instanceof Port)) {\n        throw new Error('Root element must be renderable port');\n      }\n      this.child = renderable;\n    } else {\n      this.child.updateData(data, null);\n    }\n    this.informRender();\n  }\n  public fullyUpdateData(data: RenderableData) {\n    const renderable = new (renderableFactory(data))(\n      this, null, null, data, null);\n    // noinspection SuspiciousTypeOfGuard\n    if (!(renderable instanceof Port)) {\n      throw new Error('Root element must be renderable port');\n    }\n    this.child = renderable;\n    this.informRender();\n  }\n  public informRender() {\n    if (this.child) {\n      const data = [this.child.render()];\n      Object.freeze(data);\n      this.emit('render', data);\n    }\n  }\n}\n\nexport const globalGraphRoot = new Root();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({ width: _vm.width, height: _vm.height, position: 'relative' })},[(_vm.enableHit)?_c('canvas',{ref:\"hitCanvas\",staticStyle:{\"position\":\"absolute\",\"display\":\"none\"}}):_vm._e(),_c('canvas',_vm._g({ref:\"canvas\",staticStyle:{\"position\":\"absolute\"}},_vm.$listeners))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Provide, Prop, Watch} from 'vue-property-decorator';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\n@Component\nexport default class MyCanvas extends Vue {\n  @Prop({ type: Number, required: true }) public readonly width!: number;\n  @Prop({ type: Number, required: true }) public readonly height!: number;\n  @Prop(Boolean) public readonly enableHit: boolean | undefined;\n  @Prop(Object) public readonly data: AnyShape | undefined;\n  private context: CanvasRenderingContext2D | null = null;\n  private hitContext: CanvasRenderingContext2D | null = null;\n  private hitColorMap: { [color: string]: string } = {};\n  private hitIdMap: { [id: string]: string } = {};\n  public mounted() {\n    this.context = (this.$refs.canvas as HTMLCanvasElement)\n      .getContext('2d');\n    (this.$refs.canvas as HTMLCanvasElement).width = this.width;\n    (this.$refs.canvas as HTMLCanvasElement).height = this.height;\n    if (this.enableHit) {\n      this.hitContext = (this.$refs.hitCanvas as HTMLCanvasElement)\n        .getContext('2d');\n      (this.$refs.hitCanvas as HTMLCanvasElement).width = this.width;\n      (this.$refs.hitCanvas as HTMLCanvasElement).height = this.height;\n    }\n  }\n  @Provide()\n  public generateHitColor(id: string): string {\n    if (this.hitIdMap[id]) {\n      return this.hitIdMap[id];\n    }\n    while (true) {\n      const r = Math.round(Math.random() * 255);\n      const g = Math.round(Math.random() * 255);\n      const b = Math.round(Math.random() * 255);\n      const color = `rgb(${r},${g},${b})`;\n      if (!this.hitColorMap[color]) {\n        this.hitColorMap[color] = id;\n        this.hitIdMap[id] = color;\n        return color;\n      }\n    }\n  }\n  public updateCanvas() {\n    if (!this.context) {\n      return;\n    }\n    const ctx: CanvasRenderingContext2D = this.context;\n    const hitCtx = this.hitContext;\n    ctx.clearRect(0, 0, this.width, this.height);\n    if (hitCtx) {\n      hitCtx.clearRect(0, 0, this.width, this.height);\n      this.hitColorMap = {};\n      this.hitIdMap = {};\n    }\n    const updateShape = (shape: AnyShape,\n                         draggable: boolean,\n                         draggableId: string) => {\n      const finalDraggable = shape.draggable || draggable;\n      const finalId = shape.id || draggableId;\n      switch (shape.is) {\n        case 'group': {\n          ctx.save();\n          ctx.translate(shape.x || 0, shape.y || 0);\n          ctx.scale(shape.scaleX || 1, shape.scaleY || 1);\n          if (hitCtx) {\n            hitCtx.save();\n            hitCtx.translate(shape.x || 0, shape.y || 0);\n            hitCtx.scale(shape.scaleX || 1, shape.scaleY || 1);\n          }\n          if (shape.children) {\n            for (const childShape of shape.children) {\n              updateShape(childShape, shape.draggable || draggable,\n                shape.id || draggableId);\n            }\n          }\n          ctx.restore();\n          if (hitCtx) {\n            hitCtx.restore();\n          }\n          break;\n        }\n        case 'rect': {\n          ctx.beginPath();\n          ctx.rect(shape.x || 0, shape.y || 0,\n            shape.width || 0, shape.height || 0);\n          if (shape.fill) {\n            ctx.fillStyle = shape.fill;\n            ctx.fill();\n          }\n          if (shape.stroke) {\n            ctx.lineWidth = shape.strokeWidth || 1;\n            ctx.strokeStyle = shape.stroke;\n            ctx.stroke();\n          }\n          if (hitCtx && finalDraggable && finalId) {\n            const color = this.generateHitColor(finalId);\n            hitCtx.beginPath();\n            hitCtx.rect(shape.x || 0, shape.y || 0,\n              shape.width || 0, shape.height || 0);\n            hitCtx.fillStyle = color;\n            hitCtx.fill();\n            if (shape.stroke) {\n              hitCtx.lineWidth = shape.strokeWidth || 1;\n              hitCtx.strokeStyle = color;\n              hitCtx.stroke();\n            }\n          }\n          break;\n        }\n        case 'text': {\n          const fontSize = shape.fontSize || 12;\n          const lineHeight = shape.lineHeight || 1.2;\n          const padding = shape.padding || 4;\n          ctx.font = `${fontSize}px ${shape.fontFamily || 'sans-serif'}`;\n          const lines = shape.text ? shape.text.split('\\n') : [];\n          const linesWidth = lines.map((x: string) => ctx.measureText(x).width);\n          const width = Math.max(...linesWidth, 0);\n          let posY = (shape.y || 0) + padding;\n          ctx.textBaseline = 'top';\n          ctx.fillStyle = shape.fill || 'black';\n          for (let i = 0; i < lines.length; ++i) {\n            let posX = (shape.x || 0) + padding;\n            if (shape.align === 'left') {\n              // do nothing\n            } else if (shape.align === 'right') {\n              posX += width - linesWidth[i];\n            } else {\n              posX += (width - linesWidth[i]) / 2;\n            }\n            ctx.fillText(lines[i], posX,\n              posY + 0.5 * (lineHeight - 1) * fontSize);\n            posY += lineHeight * fontSize;\n          }\n          break;\n        }\n        case 'line': {\n          const points = shape.points || [];\n          ctx.strokeStyle = shape.stroke || 'black';\n          ctx.lineWidth = shape.strokeWidth || 1;\n          ctx.beginPath();\n          ctx.moveTo(points[0] || 0, points[1] || 0);\n          ctx.lineTo(points[2] || 0, points[3] || 0);\n          ctx.stroke();\n          break;\n        }\n        case 'quadraticLine': {\n          const points = shape.points || [];\n          ctx.strokeStyle = shape.stroke || 'black';\n          ctx.lineWidth = shape.strokeWidth || 1;\n          ctx.beginPath();\n          ctx.moveTo(points[0] || 0, points[1] || 0);\n          ctx.quadraticCurveTo(points[2] || 0, points[3] || 0,\n            points[4] || 0, points[5] || 0);\n          ctx.stroke();\n          break;\n        }\n        case 'pointer': {\n          const x = shape.x || 0;\n          const y = shape.y || 0;\n          const angle = shape.angle || 0;\n          const width = shape.width || 10;\n          const height = shape.height || 15;\n          const middleX = x + height * Math.cos(angle);\n          const middleY = y + height * Math.sin(angle);\n          const deltaX = width / 2 * Math.sin(angle);\n          const deltaY = -width / 2 * Math.cos(angle);\n          ctx.fillStyle = shape.fill || 'black';\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          ctx.lineTo(middleX + deltaX, middleY + deltaY);\n          ctx.lineTo(middleX - deltaX, middleY - deltaY);\n          ctx.closePath();\n          ctx.fill();\n          break;\n        }\n        case 'rectWithWhole': {\n          ctx.beginPath();\n          ctx.moveTo(shape.outerLeft || 0, shape.outerTop || 0);\n          ctx.lineTo(shape.outerRight || 0, shape.outerTop || 0);\n          ctx.lineTo(shape.outerRight || 0, shape.outerBottom || 0);\n          ctx.lineTo(shape.outerLeft || 0, shape.outerBottom || 0);\n          ctx.lineTo(shape.outerLeft || 0, shape.outerTop || 0);\n          ctx.moveTo(shape.innerLeft || 0, shape.innerTop || 0);\n          ctx.lineTo(shape.innerLeft || 0, shape.innerBottom || 0);\n          ctx.lineTo(shape.innerRight || 0, shape.innerBottom || 0);\n          ctx.lineTo(shape.innerRight || 0, shape.innerTop || 0);\n          ctx.lineTo(shape.innerLeft || 0, shape.innerTop || 0);\n          ctx.fillStyle = shape.fill || 'white';\n          ctx.fill();\n          break;\n        }\n        case 'xdot': {\n          switch (shape.type) {\n            case 'text': {\n              ctx.font = `${shape.pen.fontsize}px ${shape.pen.fontname}`;\n              ctx.fillStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                shape.pen.color[3] + ')';\n              ctx.textAlign = shape.centering === -1 ? 'left' :\n                shape.centering === 0 ? 'center' : 'right';\n              ctx.textBaseline = 'alphabetic';\n              ctx.fillText(shape.text, shape.x, shape.y, shape.width);\n              break;\n            }\n            case 'ellipse': {\n              ctx.save();\n              ctx.translate(shape.x, shape.y);\n              ctx.scale(shape.width, shape.height);\n              ctx.beginPath();\n              ctx.moveTo(1.0, 0.0);\n              ctx.arc(0.0, 0.0, 1.0, 0, 2.0 * Math.PI);\n              ctx.restore();\n              if (shape.filled) {\n                ctx.fillStyle = 'rgba(' + shape.pen.fillcolor[0] + ',' +\n                  shape.pen.fillcolor[1] + ',' + shape.pen.fillcolor[2] + ',' +\n                  shape.pen.fillcolor[3] + ')';\n                ctx.fill();\n              } else {\n                ctx.setLineDash(shape.pen.dash);\n                ctx.lineWidth = shape.pen.linewidth;\n                ctx.strokeStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                  shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                  shape.pen.color[3] + ')';\n                ctx.stroke();\n              }\n              break;\n            }\n            case 'line': {\n              ctx.beginPath();\n              const p0 = shape.points[0];\n              ctx.moveTo(p0[0], p0[1]);\n              for (let i = 1; i < shape.points.length; ++i) {\n                const p = shape.points[i];\n                ctx.lineTo(p[0], p[1]);\n              }\n              ctx.setLineDash(shape.pen.dash);\n              ctx.lineWidth = shape.pen.linewidth;\n              ctx.strokeStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                shape.pen.color[3] + ')';\n              ctx.stroke();\n              break;\n            }\n            case 'bezier': {\n              ctx.beginPath();\n              const p0 = shape.points[0];\n              ctx.moveTo(p0[0], p0[1]);\n              for (let i = 1; i < shape.points.length; i += 3) {\n                const [p1, p2, p3] = shape.points.slice(i, i + 3);\n                ctx.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n              }\n              if (shape.filled) {\n                ctx.fillStyle = 'rgba(' + shape.pen.fillcolor[0] + ',' +\n                  shape.pen.fillcolor[1] + ',' + shape.pen.fillcolor[2] + ',' +\n                  shape.pen.fillcolor[3] + ')';\n                ctx.fill();\n              } else {\n                ctx.setLineDash(shape.pen.dash);\n                ctx.lineWidth = shape.pen.linewidth;\n                ctx.strokeStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                  shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                  shape.pen.color[3] + ')';\n                ctx.stroke();\n              }\n              break;\n            }\n            case 'polygon': {\n              ctx.beginPath();\n              const p0 = shape.points[shape.points.length - 1];\n              ctx.moveTo(p0[0], p0[1]);\n              for (const p of shape.points) {\n                ctx.lineTo(p[0], p[1]);\n              }\n              ctx.closePath();\n              if (shape.filled) {\n                ctx.fillStyle = 'rgba(' + shape.pen.fillcolor[0] + ',' +\n                  shape.pen.fillcolor[1] + ',' + shape.pen.fillcolor[2] + ',' +\n                  shape.pen.fillcolor[3] + ')';\n                ctx.fill();\n              } else {\n                ctx.setLineDash(shape.pen.dash);\n                ctx.lineWidth = shape.pen.linewidth;\n                ctx.strokeStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                  shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                  shape.pen.color[3] + ')';\n                ctx.stroke();\n              }\n              break;\n            }\n            case 'image':\n              throw new Error('Image is not supported');\n            default:\n              throw new Error('Unknown type of xdot shape');\n          }\n          break;\n        }\n        default:\n          throw new Error('Unknown shape');\n      }\n    };\n    if (this.data) {\n      ctx.lineCap = 'butt';\n      ctx.lineJoin = 'miter';\n      updateShape(this.data, false, '');\n    }\n  }\n  public getIdFromHitPoint(x: number, y: number): string | undefined {\n    if (this.hitContext) {\n      const pixel = this.hitContext.getImageData(x, y, 1, 1).data;\n      const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\n      return this.hitColorMap[color];\n    }\n  }\n  @Watch('width')\n  public onWidthChanged() {\n    (this.$refs.canvas as HTMLCanvasElement).width = this.width;\n    if (this.enableHit) {\n      (this.$refs.hitCanvas as HTMLCanvasElement).width = this.width;\n    }\n    this.updateCanvas();\n  }\n  @Watch('height')\n  public onHeightChanged() {\n    (this.$refs.canvas as HTMLCanvasElement).height = this.height;\n    if (this.enableHit) {\n      (this.$refs.hitCanvas as HTMLCanvasElement).height = this.height;\n    }\n    this.updateCanvas();\n  }\n  @Watch('data')\n  public onDataChanged() {\n    this.updateCanvas();\n  }\n}\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MyCanvas.vue?vue&type=template&id=4c322310&\"\nimport script from \"./MyCanvas.vue?vue&type=script&lang=ts&\"\nexport * from \"./MyCanvas.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\nimport {globalGraphRoot} from '@/graph/Root';\nimport MyCanvas from '@/components/MyCanvas.vue';\nimport Port from '@/graph/base/Port';\n\n@Component({\n  components: {\n    MyCanvas,\n  },\n})\nexport default class Graph extends Vue {\n  @Prop({ type: Number, required: true }) public readonly width!: number;\n  @Prop({ type: Number, required: true }) public readonly height!: number;\n  @Prop({ type: Array, default() { return []; }})\n  public readonly data!: object[];\n  private x = 0;\n  private y = 0;\n  private scale = 1;\n  private size = { width: 0, height: 0 };\n  private draggedId: null | string = null;\n  private mouseDragActive = false;\n  private mouseLastCoords = {\n    x: 0,\n    y: 0,\n  };\n  private maxThumbnailLength = 160;\n  private minThumbnailLength = 100;\n  private thumbnailPadding = 10;\n  private thumbnailMouseDragActive = false;\n  private thumbnailMouseLastCoords = {\n    x: 0,\n    y: 0,\n  };\n  get stageX() {\n    return this.width / 2 + this.x;\n  }\n  get stageY() {\n    return this.height / 2 + this.y;\n  }\n  public mounted() {\n    this.updateSize();\n  }\n  @Watch('data')\n  public onDataChanged() {\n    this.updateSize();\n  }\n  public updateSize() {\n    // noinspection SuspiciousTypeOfGuard\n    if (globalGraphRoot.child instanceof Port) {\n      this.size = globalGraphRoot.child.getBoundingBoxSize();\n    }\n  }\n  get mainCanvasData() {\n    return {\n      is: 'group',\n      x: this.stageX,\n      y: this.stageY,\n      scaleX: this.scale,\n      scaleY: this.scale,\n      children: this.data,\n    };\n  }\n  get thumbnailCanvasData() {\n    const scale = 1 / this.thumbnailFactor;\n    function deepCopyAndRemoveDraggable(shape: any) {\n      const copy = Object.assign({}, shape);\n      if (copy.draggable) {\n        delete copy.draggable;\n      }\n      if (copy.children) {\n        copy.children = copy.children.map((x: any) =>\n          deepCopyAndRemoveDraggable(x));\n      }\n      return copy;\n    }\n    const data = this.data.map((x: any) => deepCopyAndRemoveDraggable(x));\n    const viewportX = (-this.width / 2 - this.x) / this.scale;\n    const viewportY = (-this.height / 2 - this.y) / this.scale;\n    const viewportWidth = this.width / this.scale;\n    const viewportHeight = this.height / this.scale;\n    data.push({\n      is: 'rectWithWhole',\n      id: 'mask',\n      fill: 'rgba(0,0,0,0.2)',\n      outerLeft: -this.thumbnailWidth * this.thumbnailFactor / 2,\n      outerRight: this.thumbnailWidth * this.thumbnailFactor / 2,\n      outerTop: -this.thumbnailHeight * this.thumbnailFactor / 2,\n      outerBottom: this.thumbnailHeight * this.thumbnailFactor / 2,\n      innerLeft: viewportX,\n      innerRight: viewportX + viewportWidth,\n      innerTop: viewportY,\n      innerBottom: viewportY + viewportHeight,\n    });\n    data.push({\n      is: 'rect',\n      id: 'viewport',\n      draggable: true,\n      x: viewportX,\n      y: viewportY,\n      width: viewportWidth,\n      height: viewportHeight,\n      stroke: '#3eaf7c',\n      strokeWidth: this.thumbnailFactor,\n    });\n    return {\n      is: 'group',\n      x: this.thumbnailWidth / 2,\n      y: this.thumbnailHeight / 2,\n      scaleX: scale,\n      scaleY: scale,\n      children: data,\n    };\n  }\n  get thumbnailFactor() {\n    return Math.max(this.size.width / this.maxThumbnailLength,\n      this.size.height / this.maxThumbnailLength, 1);\n  }\n  get thumbnailWidth() {\n    return Math.max(this.size.width / this.thumbnailFactor,\n      this.minThumbnailLength) + 2 * this.thumbnailPadding;\n  }\n  get thumbnailHeight() {\n    return Math.max(this.size.height / this.thumbnailFactor,\n      this.minThumbnailLength) + 2 * this.thumbnailPadding;\n  }\n  public wheel(e: WheelEvent) {\n    const scaleBy = 1.1;\n    e.preventDefault();\n    const pos = this.translateMouseEvent(e);\n    const mousePointTo = {\n      x: (pos.x - this.stageX) / this.scale,\n      y: (pos.y - this.stageY) / this.scale,\n    };\n    this.scale = e.deltaY < 0 ? this.scale * scaleBy : this.scale / scaleBy;\n    const newPos = {\n      x: -(mousePointTo.x - pos.x / this.scale) *\n        this.scale,\n      y: -(mousePointTo.y - pos.y / this.scale) *\n        this.scale,\n    };\n    this.x = newPos.x - this.width / 2;\n    this.y = newPos.y - this.height / 2;\n  }\n  public translateMouseEvent(e: MouseEvent): {x: number, y: number} {\n    let elementOffsetX = 0;\n    let elementOffsetY = 0;\n    let target = e.currentTarget;\n    while (target) {\n      elementOffsetX += (target as HTMLElement).offsetLeft;\n      elementOffsetY += (target as HTMLElement).offsetTop;\n      target = (target as HTMLElement).offsetParent;\n    }\n    return {\n      x: e.pageX - elementOffsetX,\n      y: e.pageY - elementOffsetY,\n    };\n  }\n  public mousedown(e: MouseEvent) {\n    this.mouseDragActive = true;\n    this.mouseLastCoords = {\n      x: e.pageX,\n      y: e.pageY,\n    };\n    const pos = this.translateMouseEvent(e);\n    const id = (this.$refs.mainCanvas as any).getIdFromHitPoint(pos.x, pos.y);\n    if (id) {\n      this.draggedId = id;\n      globalGraphRoot.setFixed([id]);\n    }\n  }\n  public mouseup() {\n    this.mouseDragActive = false;\n    this.draggedId = null;\n    globalGraphRoot.clearFixed();\n  }\n  public mousemove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.mouseDragActive = false;\n    }\n    if (this.mouseDragActive || this.draggedId) {\n      const newCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      const deltaX = newCoords.x - this.mouseLastCoords.x;\n      const deltaY = newCoords.y - this.mouseLastCoords.y;\n      if (this.draggedId) {\n        globalGraphRoot.movePort(this.draggedId, {\n          deltaX: deltaX / this.scale,\n          deltaY: deltaY / this.scale,\n        });\n      } else {\n        this.x += deltaX;\n        this.y += deltaY;\n      }\n      this.mouseLastCoords = newCoords;\n    }\n  }\n  public thumbnailMousedown(e: MouseEvent) {\n    const pos = this.translateMouseEvent(e);\n    const id = (this.$refs.thumbnailCanvas as any)\n      .getIdFromHitPoint(pos.x, pos.y);\n    if (id === 'viewport') {\n      this.thumbnailMouseDragActive = true;\n      this.thumbnailMouseLastCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n    }\n  }\n  public thumbnailMouseup() {\n    this.thumbnailMouseDragActive = false;\n  }\n  public thumbnailMousemove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.thumbnailMouseDragActive = false;\n    }\n    if (this.thumbnailMouseDragActive) {\n      const newCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      const oldCoords = this.thumbnailMouseLastCoords;\n      const scale = this.thumbnailFactor * this.scale;\n      this.x -= (newCoords.x - oldCoords.x) * scale;\n      this.y -= (newCoords.y - oldCoords.y) * scale;\n      this.thumbnailMouseLastCoords = newCoords;\n    }\n  }\n}\n","import BaseScanner from '@/graph/dot/BaseScanner';\n\nexport enum TokenEnum {\n  EOF = -1,\n  SKIP = -2,\n\n  ID = 0,\n  STR_ID = 1,\n  HTML_ID = 2,\n  EDGE_OP = 3,\n\n  LSQUARE = 4,\n  RSQUARE = 5,\n  LCURLY = 6,\n  RCURLY = 7,\n  COMMA = 8,\n  COLON = 9,\n  SEMI = 10,\n  EQUAL = 11,\n  PLUS = 12,\n\n  STRICT = 13,\n  GRAPH = 14,\n  DIGRAPH = 15,\n  NODE = 16,\n  EDGE = 17,\n  SUBGRAPH = 18,\n}\n\nexport default class DotScanner extends BaseScanner<TokenEnum> {\n  private static tokens: Array<[TokenEnum, string, boolean]> = [\n    [TokenEnum.SKIP, '[ \\\\t\\\\f\\\\r\\\\n\\\\v]+|//[^\\\\r\\\\n]*|/\\\\*.*?\\\\*/|#[^\\\\r\\\\n]*',\n      false],\n    [TokenEnum.ID, '[a-zA-Z_\\\\x80-\\\\xff][a-zA-Z0-9_\\\\x80-\\\\xff]*', true],\n    [TokenEnum.ID, '-?(?:\\\\.[0-9]+|[0-9]+(?:\\\\.[0-9]*)?)', false],\n    [TokenEnum.STR_ID, '\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*\"', false],\n    [TokenEnum.HTML_ID, '<[^<>]*(?:<[^<>]*>[^<>]*)*>', false],\n    [TokenEnum.EDGE_OP, '-[>-]', false],\n  ];\n  private static symbols: { [symbol: string]: TokenEnum } = {\n    '[': TokenEnum.LSQUARE,\n    ']': TokenEnum.RSQUARE,\n    '{': TokenEnum.LCURLY,\n    '}': TokenEnum.RCURLY,\n    ',': TokenEnum.COMMA,\n    ':': TokenEnum.COLON,\n    ';': TokenEnum.SEMI,\n    '=': TokenEnum.EQUAL,\n    '+': TokenEnum.PLUS,\n  };\n  private static literals: { [symbol: string]: TokenEnum } = {\n    strict: TokenEnum.STRICT,\n    graph: TokenEnum.GRAPH,\n    digraph: TokenEnum.DIGRAPH,\n    node: TokenEnum.NODE,\n    edge: TokenEnum.EDGE,\n    subgraph: TokenEnum.SUBGRAPH,\n  };\n  public constructor() {\n    super(\n      DotScanner.tokens,\n      DotScanner.symbols,\n      DotScanner.literals,\n      true,\n      TokenEnum.EOF,\n      TokenEnum.SKIP,\n    );\n  }\n  public * scan(input: string): Generator<[TokenEnum, string]> {\n    for (let [type, text] of super.scan(input)) {\n      if (type === TokenEnum.STR_ID) {\n        text = text.slice(1, -1);\n        text = text.replace(/\\\\(?:\\r\\n|\\r|\\n)/g, '');\n        text = text.replace(/\\\\\"/g, '\"');\n        type = TokenEnum.ID;\n      } else if (type === TokenEnum.HTML_ID) {\n        text = text.slice(1, -1);\n        type = TokenEnum.ID;\n      }\n      yield [type, text];\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Graph.vue?vue&type=template&id=6d2c06d4&scoped=true&\"\nimport script from \"./Graph.vue?vue&type=script&lang=ts&\"\nexport * from \"./Graph.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Graph.vue?vue&type=style&index=0&id=6d2c06d4&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6d2c06d4\",\n  null\n  \n)\n\nexport default component.exports","export default class BaseScanner<T> {\n  private readonly tokens: Array<[T, string, boolean]>;\n  private readonly symbols: { [symbol: string]: T };\n  private readonly literals: { [symbol: string]: T };\n  private readonly eofToken: T;\n  private readonly skipToken?: T;\n  private readonly tokensRegex: RegExp;\n  public constructor(tokens: Array<[T, string, boolean]>,\n                     symbols: { [symbol: string]: T },\n                     literals: { [symbol: string]: T },\n                     ignoreCase: boolean,\n                     eofToken: T,\n                     skipToken: T | undefined) {\n    this.tokens = tokens;\n    this.symbols = symbols;\n    this.literals = literals;\n    this.eofToken = eofToken;\n    this.skipToken = skipToken;\n    let flags = 's';\n    if (ignoreCase) {\n      flags += 'i';\n    }\n    this.tokensRegex = new RegExp('^(?:' + tokens.map(\n      (x) => '(' + x[1] + ')').join('|') + ')', flags);\n  }\n  public next(buf: string): [T, string, string] {\n    if (!buf.length) {\n      return [this.eofToken, '', ''];\n    }\n    const mo = buf.match(this.tokensRegex);\n    if (mo) {\n      let lastIndex = -1;\n      for (let i = 0; i < this.tokens.length; ++i) {\n        if (mo[i + 1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n      if (lastIndex < 0) {\n        throw new Error('Cannot find token index');\n      }\n      const [type, , testLit] = this.tokens[lastIndex];\n      const finalType = testLit ? this.literals[mo[0]] || type : type;\n      return [finalType, mo[0], buf.slice(mo[0].length)];\n    } else {\n      const type = this.symbols[buf[0]];\n      if (!type) {\n        throw new Error('Unexpected character');\n      }\n      return [type, buf[0], buf.slice(1)];\n    }\n  }\n  public * scan(input: string): Generator<[T, string]> {\n    while (true) {\n      const [type, text, newInput] = this.next(input);\n      input = newInput;\n      if (this.skipToken && type === this.skipToken) {\n        continue;\n      }\n      yield [type, text];\n      if (type === this.eofToken) {\n        break;\n      }\n    }\n  }\n}\n","/* tslint:disable:no-bitwise */\n\nimport {XdotPen, XdotShape} from '@/graph/base/dataXdot';\n\nenum FontCharacteristics {\n  BOLD = 1,\n  ITALIC = 2,\n  UNDERLINE = 4,\n  SUPERSCRIPT = 8,\n  SUBSCRIPT = 16,\n  STRIKE_THROUGH = 32,\n  OVERLINE = 64,\n}\n\nfunction HSVtoRGB(h: number, s: number, v: number): [number, number, number] {\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n  }\n  return [r, g, b];\n}\n\nexport default class XDotAttrParser {\n  private readonly pen: XdotPen;\n  private readonly input: string;\n  private pos: number;\n  public constructor(input: string) {\n    this.pen = {\n      color: [0.0, 0.0, 0.0, 1.0],\n      fillcolor: [0.0, 0.0, 0.0, 1.0],\n      linewidth: 1.0,\n      fontsize: 14.0,\n      fontname: 'Times-Roman',\n      bold: false,\n      italic: false,\n      underline: false,\n      superscript: false,\n      subscript: false,\n      strikethrough: false,\n      overline: false,\n      dash: [],\n    };\n    this.input = input;\n    this.pos = 0;\n  }\n  public parse(): XdotShape[] {\n    const shapes: XdotShape[] = [];\n    while (this.pos < this.input.length) {\n      const op = this.readCode();\n      switch (op) {\n        case 'c':\n          this.pen.color = this.readColor();\n          break;\n        case 'C':\n          this.pen.fillcolor = this.readColor();\n          break;\n        case 'S': {\n          const style = this.readText();\n          if (style.startsWith('setlinewidth')) {\n            const lw = style.split('(')[1].split(')')[0];\n            this.pen.linewidth = parseFloat(lw);\n          } else if (['solid', 'dashed', 'dotted'].indexOf(style) !== -1) {\n            if (style === 'solid') {\n              this.pen.dash = [];\n            } else if (style === 'dashed') {\n              this.pen.dash = [6];\n            } else {\n              this.pen.dash = [2, 4];\n            }\n          } else {\n            throw new Error('Unknown line style');\n          }\n          break;\n        }\n        case 'F':\n          this.pen.fontsize = this.readFloat();\n          this.pen.fontname = this.readText();\n          break;\n        case 'T': {\n          const [x, y] = this.readPoint();\n          const centering = this.readInt();\n          if ([-1, 0, 1].indexOf(centering) === -1) {\n            throw new Error('Wrong centering parameter');\n          }\n          const width = this.readFloat();\n          const text = this.readText();\n          shapes.push({\n            is: 'xdot',\n            type: 'text',\n            pen: Object.assign({}, this.pen),\n            x, y,\n            centering: centering as any,\n            width, text,\n          });\n          break;\n        }\n        case 't': {\n          const f = this.readInt();\n          this.pen.bold = !!(f & FontCharacteristics.BOLD);\n          this.pen.italic = !!(f & FontCharacteristics.ITALIC);\n          this.pen.underline = !!(f & FontCharacteristics.UNDERLINE);\n          this.pen.superscript = !!(f & FontCharacteristics.SUPERSCRIPT);\n          this.pen.subscript = !!(f & FontCharacteristics.SUBSCRIPT);\n          this.pen.strikethrough = !!(f & FontCharacteristics.STRIKE_THROUGH);\n          this.pen.overline = !!(f & FontCharacteristics.OVERLINE);\n          break;\n        }\n        case 'E': case 'e': {\n          const [x, y] = this.readPoint();\n          const width = this.readFloat();\n          const height = this.readFloat();\n          if (op === 'E') {\n            shapes.push({\n              is: 'xdot',\n              type: 'ellipse',\n              pen: Object.assign({}, this.pen),\n              x, y, width, height,\n              filled: true,\n            });\n          }\n          shapes.push({\n            is: 'xdot',\n            type: 'ellipse',\n            pen: Object.assign({}, this.pen),\n            x, y, width, height,\n            filled: false,\n          });\n          break;\n        }\n        case 'L': {\n          const points = this.readPolygon();\n          shapes.push({\n            is: 'xdot',\n            type: 'line',\n            pen: Object.assign({}, this.pen),\n            points,\n          });\n          break;\n        }\n        case 'B': case 'b': {\n          const points = this.readPolygon();\n          if (op === 'b') {\n            shapes.push({\n              is: 'xdot',\n              type: 'bezier',\n              pen: Object.assign({}, this.pen),\n              points: JSON.parse(JSON.stringify(points)),\n              filled: true,\n            });\n          }\n          shapes.push({\n            is: 'xdot',\n            type: 'bezier',\n            pen: Object.assign({}, this.pen),\n            points,\n            filled: false,\n          });\n          break;\n        }\n        case 'P': case 'p': {\n          const points = this.readPolygon();\n          if (op === 'P') {\n            shapes.push({\n              is: 'xdot',\n              type: 'polygon',\n              pen: Object.assign({}, this.pen),\n              points: JSON.parse(JSON.stringify(points)),\n              filled: true,\n            });\n          }\n          shapes.push({\n            is: 'xdot',\n            type: 'polygon',\n            pen: Object.assign({}, this.pen),\n            points,\n            filled: false,\n          });\n          break;\n        }\n        case 'I': {\n          const [x, y] = this.readPoint();\n          const width = this.readFloat();\n          const height = this.readFloat();\n          const path = this.readText();\n          shapes.push({\n            is: 'xdot',\n            type: 'image',\n            pen: Object.assign({}, this.pen),\n            x, y, width, height, path,\n          });\n          break;\n        }\n        default:\n          throw new Error(`Unknown operation code ${op}`);\n      }\n    }\n    return shapes;\n  }\n  private readCode(): string {\n    const pos = this.input.indexOf(' ', this.pos);\n    if (pos === -1) {\n      throw new Error('Unexpected ending of xdot attribute');\n    }\n    const res = this.input.slice(this.pos, pos);\n    this.pos = pos + 1;\n    this.skipSpace();\n    return res;\n  }\n  private skipSpace() {\n    while (this.pos < this.input.length && this.input[this.pos] === ' ') {\n      ++this.pos;\n    }\n  }\n  private readInt(): number {\n    return parseInt(this.readCode(), 10);\n  }\n  private readFloat(): number {\n    return parseFloat(this.readCode());\n  }\n  private readPoint(): [number, number] {\n    const x = this.readFloat();\n    const y = this.readFloat();\n    return [x, y];\n  }\n  private readText(): string {\n    const num = this.readInt();\n    const pos = this.input.indexOf('-', this.pos) + 1;\n    this.pos = pos + num;\n    const res = this.input.slice(pos, this.pos);\n    this.skipSpace();\n    return res;\n  }\n  private readPolygon(): Array<[number, number]> {\n    const n = this.readInt();\n    const p = [];\n    for (let i = 0; i < n; ++i) {\n      p.push(this.readPoint());\n    }\n    return p;\n  }\n  private readColor(): [number, number, number, number] {\n    const c = this.readText();\n    const c1 = c[0];\n    if (c1 === '#') {\n      const r = parseInt(c.slice(1, 3), 16);\n      const g = parseInt(c.slice(3, 5), 16);\n      const b = parseInt(c.slice(5, 7), 16);\n      const a = c.length >= 9 ? parseInt(c.slice(7, 9), 16) / 255.0 : 1.0;\n      return [r, g, b, a];\n    } else if ((c1 >= '0' && c1 <= '9') || c1 === '.') {\n      const hsv = c.replace(/,/g, ' ').split(/\\s+/);\n      if (hsv.length !== 3) {\n        throw new Error('Wrong HSV color');\n      }\n      const [h, s, v] = hsv.map(parseFloat);\n      const [r, g, b] = HSVtoRGB(h, s, v);\n      return [r, g, b, 1.0];\n    } else {\n      throw new Error('Unsupported color');\n    }\n  }\n}\n","export default class BaseParser<T> {\n  protected lookahead: [T, string];\n  private lexer: Generator<[T, string]>;\n  public constructor(lexer: Generator<[T, string]>) {\n    this.lexer = lexer;\n    const lookahead = lexer.next();\n    if (lookahead.done) {\n      throw new Error('Unexpected end of token');\n    }\n    this.lookahead = lookahead.value;\n  }\n  public match(types: T[]) {\n    if (types.indexOf(this.lookahead[0]) === -1) {\n      throw new Error(`Unexpected token ${this.lookahead[1]}`);\n    }\n  }\n  public consume(): [T, string] {\n    const token = this.lookahead;\n    const lookahead = this.lexer.next();\n    if (lookahead.done) {\n      throw new Error('Unexpected end of token');\n    }\n    this.lookahead = lookahead.value;\n    return token;\n  }\n}\n","import {TokenEnum} from '@/graph/dot/DotScanner';\nimport BaseParser from '@/graph/dot/BaseParser';\nimport {DotEdge, DotGraph, DotNode, DotNodeId, DotSubgraph} from '@/graph/base/dataXdot';\n\nexport default class DotParser extends BaseParser<TokenEnum> {\n  public constructor(lexer: Generator<[TokenEnum, string]>) {\n    super(lexer);\n  }\n  // public consume() {\n  //   const token = super.consume();\n  //   // tslint:disable-next-line:no-console\n  //   console.log(`${TokenEnum[token[0]]} ${token[1]}`);\n  //   return token;\n  // }\n  public parse() {\n    const graph = this.parseGraph();\n    this.match([TokenEnum.EOF]);\n    return graph;\n  }\n  public parseGraph(): DotGraph {\n    let strict = false;\n    if (this.lookahead[0] === TokenEnum.STRICT) {\n      strict = true;\n      this.consume();\n    }\n    this.match([TokenEnum.DIGRAPH, TokenEnum.GRAPH]);\n    const directed = this.consume()[0] === TokenEnum.DIGRAPH;\n    let id: string | undefined;\n    if (this.lookahead[0] === TokenEnum.ID) {\n      id = this.consume()[1];\n    }\n    this.match([TokenEnum.LCURLY]);\n    this.consume();\n    const graphAttrs: { [attr: string]: string } = {};\n    const nodeAttrs: { [attr: string]: string } = {};\n    const edgeAttrs: { [attr: string]: string } = {};\n    const children: Array<DotNode | DotEdge | DotSubgraph> = [];\n    while (this.lookahead[0] !== TokenEnum.RCURLY) {\n      const [newGraphAttrs, newNodeAttrs, newEdgeAttrs, newChildren] =\n        this.parseStmt();\n      Object.assign(graphAttrs, newGraphAttrs);\n      Object.assign(nodeAttrs, newNodeAttrs);\n      Object.assign(edgeAttrs, newEdgeAttrs);\n      children.push(...newChildren);\n    }\n    this.consume();\n    return {\n      type: 'graph',\n      strict,\n      directed,\n      id,\n      attrs: graphAttrs,\n      nodeAttrs,\n      edgeAttrs,\n      children,\n    };\n  }\n  public parseStmt(): [\n    { [attr: string]: string },\n    { [attr: string]: string },\n    { [attr: string]: string },\n    Array<DotNode | DotEdge | DotSubgraph>\n  ] {\n    let graphAttrs: { [attr: string]: string } = {};\n    let nodeAttrs: { [attr: string]: string } = {};\n    let edgeAttrs: { [attr: string]: string } = {};\n    let children: Array<DotNode | DotEdge | DotSubgraph> = [];\n    switch (this.lookahead[0]) {\n      case TokenEnum.GRAPH: {\n        this.consume();\n        graphAttrs = this.parseAttrs();\n        break;\n      }\n      case TokenEnum.NODE: {\n        this.consume();\n        nodeAttrs = this.parseAttrs();\n        break;\n      }\n      case TokenEnum.EDGE: {\n        this.consume();\n        edgeAttrs = this.parseAttrs();\n        break;\n      }\n      case TokenEnum.SUBGRAPH:\n      case TokenEnum.LCURLY: {\n        children = [this.parseSubgraph()];\n        break;\n      }\n      default: {\n        const id = this.parseNodeId();\n        switch (this.lookahead[0]) {\n          case TokenEnum.EDGE_OP: {\n            this.consume();\n            const ids = [id, this.parseNodeId()];\n            while (this.lookahead[0] === TokenEnum.EDGE_OP) {\n              this.consume();\n              ids.push(this.parseNodeId());\n            }\n            const attrs = this.parseAttrs();\n            for (let i = 0; i < ids.length - 1; ++i) {\n              children.push({\n                type: 'edge',\n                from: ids[i],\n                to: ids[i + 1],\n                attrs,\n              });\n            }\n            break;\n          }\n          case TokenEnum.EQUAL: {\n            this.consume();\n            this.parseId();\n            break;\n          }\n          default: {\n            const attrs = this.parseAttrs();\n            children.push({\n              type: 'node',\n              id,\n              attrs,\n            });\n          }\n        }\n        break;\n      }\n    }\n    if (this.lookahead[0] === TokenEnum.SEMI) {\n      this.consume();\n    }\n    return [graphAttrs, nodeAttrs, edgeAttrs, children];\n  }\n  public parseAttrs(): { [attr: string]: string } {\n    const attrs: { [attr: string]: string } = {};\n    while (this.lookahead[0] as TokenEnum === TokenEnum.LSQUARE) {\n      this.consume();\n      while (this.lookahead[0] !== TokenEnum.RSQUARE) {\n        const [name, value] = this.parseAttr();\n        attrs[name] = value;\n        if (this.lookahead[0] === TokenEnum.COMMA ||\n            this.lookahead[0] === TokenEnum.SEMI) {\n          this.consume();\n        }\n      }\n      this.consume();\n    }\n    return attrs;\n  }\n  public parseAttr(): [string, string] {\n    const name = this.parseId();\n    let value = 'true';\n    if (this.lookahead[0] === TokenEnum.EQUAL) {\n      this.consume();\n      value = this.parseId();\n    }\n    return [name, value];\n  }\n  public parseSubgraph(): DotSubgraph {\n    let id: string | undefined;\n    const graphAttrs: { [attr: string]: string } = {};\n    const nodeAttrs: { [attr: string]: string } = {};\n    const edgeAttrs: { [attr: string]: string } = {};\n    const children: Array<DotNode | DotEdge | DotSubgraph> = [];\n    if (this.lookahead[0] as TokenEnum === TokenEnum.SUBGRAPH) {\n      this.consume();\n      if (this.lookahead[0] === TokenEnum.ID) {\n        id = this.consume()[1];\n      }\n    }\n    if (this.lookahead[0] as TokenEnum === TokenEnum.LCURLY) {\n      this.consume();\n      while (this.lookahead[0] !== TokenEnum.RCURLY) {\n        const [newGraphAttrs, newNodeAttrs, newEdgeAttrs, newChildren] =\n          this.parseStmt();\n        Object.assign(graphAttrs, newGraphAttrs);\n        Object.assign(nodeAttrs, newNodeAttrs);\n        Object.assign(edgeAttrs, newEdgeAttrs);\n        children.push(...newChildren);\n      }\n      this.consume();\n    }\n    return {\n      type: 'subgraph',\n      id,\n      attrs: graphAttrs,\n      nodeAttrs,\n      edgeAttrs,\n      children,\n    };\n  }\n  public parseNodeId(): DotNodeId {\n    const id = this.parseId();\n    let port: string | undefined;\n    let compass: string | undefined;\n    if (this.lookahead[0] === TokenEnum.COLON) {\n      this.consume();\n      port = this.parseId();\n      if (this.lookahead[0] === TokenEnum.COLON) {\n        this.consume();\n        compass = this.parseId();\n        if (['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw', 'c', '_']\n            .indexOf(compass) === -1) {\n          throw new Error('Error compass');\n        }\n      }\n    }\n    return {\n      id,\n      port,\n      compass: compass as any,\n    };\n  }\n  public parseId(): string {\n    this.match([TokenEnum.ID]);\n    return this.consume()[1];\n  }\n}\n","import XDotAttrParser from '@/graph/dot/XDotAttrParser';\nimport {DotElement, DotGraph} from '@/graph/base/dataXdot';\nimport {RenderableData} from '@/graph/base/dataInput';\n\nexport function xdotAttrPass(graph: DotGraph) {\n  function traversal(element: DotElement) {\n    switch (element.type) {\n      case 'graph':\n      case 'subgraph':\n        for (const attr of ['_draw_', '_ldraw_']) {\n          if (element.attrs[attr]) {\n            const parser = new XDotAttrParser(element.attrs[attr]);\n            const newShapes = parser.parse();\n            element.shapes = element.shapes || {};\n            element.shapes[attr] = newShapes;\n          }\n        }\n        for (const child of element.children) {\n          traversal(child);\n        }\n        break;\n      case 'node':\n        for (const attr of ['_draw_', '_ldraw_']) {\n          if (element.attrs[attr]) {\n            const parser = new XDotAttrParser(element.attrs[attr]);\n            const newShapes = parser.parse();\n            element.shapes = element.shapes || {};\n            element.shapes[attr] = newShapes;\n          }\n        }\n        break;\n      case 'edge':\n        for (const attr of ['_draw_', '_ldraw_', '_hdraw_', '_tdraw_',\n                            '_hldraw_', '_tldraw_']) {\n          if (element.attrs[attr]) {\n            const parser = new XDotAttrParser(element.attrs[attr]);\n            const newShapes = parser.parse();\n            element.shapes = element.shapes || {};\n            element.shapes[attr] = newShapes;\n          }\n        }\n        break;\n      default:\n        throw new Error('Should not reach here');\n    }\n  }\n  traversal(graph);\n}\n\nexport function xdotReverseY(graph: DotGraph) {\n  function convert(element: DotElement) {\n    if (element.shapes) {\n      Object.keys(element.shapes).forEach((draw) => {\n        const shapes = element.shapes![draw];\n        shapes.forEach((shape) => {\n          switch (shape.type) {\n            case 'text':\n            case 'ellipse':\n            case 'image':\n              shape.y *= -1;\n              break;\n            case 'bezier':\n            case 'line':\n            case 'polygon':\n              shape.points.forEach((point) => point[1] *= -1);\n              break;\n            default:\n              throw new Error('Should not reach here');\n          }\n        });\n      });\n    }\n    if (element.type === 'graph' || element.type === 'subgraph') {\n      element.children.forEach((child) => convert(child));\n    }\n  }\n  convert(graph);\n}\n\nexport function xdotToRenderablePass(graph: DotGraph): RenderableData {\n  function convert(element: DotElement): RenderableData {\n    switch (element.type) {\n      case 'node':\n        return {\n          type: 'node',\n          shape: 'xdot',\n          id: element.id.id,\n          xdotId: element.id,\n          attrs: element.attrs,\n          shapes: element.shapes,\n        };\n      case 'edge':\n        return {\n          type: 'edge',\n          shape: 'xdot',\n          from: element.from.port ? `${element.from.id}:${element.from.port}` :\n            element.from.id,\n          to: element.to.port ? `${element.to.id}:${element.to.port}` :\n            element.to.id,\n          xdotFrom: element.from,\n          xdotTo: element.to,\n          attrs: element.attrs,\n          shapes: element.shapes,\n        };\n      case 'graph':\n        return {\n          type: 'graph',\n          id: element.id || '',\n          shape: 'xdot',\n          strict: element.strict,\n          directed: element.directed,\n          children: element.children.map((x) => convert(x)),\n          layout: { type: 'none' },\n          physics: { type: 'none' },\n          component: { type: 'none' },\n          attrs: element.attrs,\n          nodeAttrs: element.nodeAttrs,\n          edgeAttrs: element.edgeAttrs,\n          shapes: element.shapes,\n        };\n      case 'subgraph':\n        return {\n          type: 'graph',\n          id: element.id || '',\n          shape: 'xdot',\n          children: element.children.map((x) => convert(x)),\n          layout: { type: 'none' },\n          physics: { type: 'none' },\n          component: { type: 'none' },\n          attrs: element.attrs,\n          nodeAttrs: element.nodeAttrs,\n          edgeAttrs: element.edgeAttrs,\n          shapes: element.shapes,\n        };\n      default:\n        throw new Error('Should not reach here');\n    }\n  }\n  return convert(graph);\n}\n","import {\n  EdgeData,\n  GraphData,\n  KamadaKawaiGraphLayoutData,\n  LinearComponentLayoutData,\n  NodeData,\n  RenderableData,\n} from '@/graph/base/dataInput';\nimport parser from 'dotparser';\nimport DotScanner from '@/graph/dot/DotScanner';\nimport DotParser from '@/graph/dot/DotParser';\nimport {xdotAttrPass, xdotReverseY, xdotToRenderablePass} from '@/graph/dot/passes';\n\nconst alnumChars: string = '0123456789' +\n  'abcdefghijklmnopqrstuvwxyz' +\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nfunction randomAlnumString(length: number): string {\n  let result = '';\n  for (let i = 0; i < length; ++i) {\n    result += alnumChars[Math.floor(Math.random() * alnumChars.length)];\n  }\n  return result;\n}\n\nfunction generateId(): string {\n  return randomAlnumString(16);\n}\n\nfunction unescapeString(str: string): string {\n  str = str.replace(/\\\\n/g, '\\n');\n  str = str.replace(/\\\\r/g, '\\r');\n  str = str.replace(/\\\\t/g, '\\t');\n  str = str.replace(/\\\\'/g, '\\'');\n  str = str.replace(/\\\\\"/g, '\\\"');\n  str = str.replace(/&gamma;/g, 'γ');\n  return str;\n}\n\nfunction normalizeColor(color: string): string {\n  let end = color.length - 1;\n  while (end >= 0 && (color[end] >= '0' && color[end] <= '9')) {\n    --end;\n  }\n  return color.slice(0, end + 1);\n}\n\nexport interface GraphParserConfig {\n  preferredEdgeDirection?: number | 'any';\n}\n\nexport const graphParsers\n  : { [input: string]: (input: string, config?: GraphParserConfig) =>\n    RenderableData } = {\n  json(input: string): RenderableData {\n    return JSON.parse(input);\n  },\n  graphviz(input: string, config?: GraphParserConfig): RenderableData {\n    const ast = parser(input);\n    if (!ast[0]) {\n      throw new Error('Expect one root element');\n    }\n    // const directed = ast[0].type === 'digraph';\n    function parseNode(data: any): NodeData {\n      const result: NodeData = {\n        type: 'node',\n        shape: 'box',\n        id: generateId(),\n      };\n      if (data.node_id) {\n        result.id = data.node_id.id;\n      }\n      if (data.attr_list) {\n        for (const attr of data.attr_list) {\n          switch (attr.id) {\n            case 'label':\n              // noinspection SuspiciousTypeOfGuard\n              if (typeof attr.eq === 'string') {\n                result.label = unescapeString(attr.eq);\n              } else {\n                result.label = unescapeString(attr.eq.value);\n              }\n              break;\n            case 'style':\n              result.style = attr.eq;\n              break;\n            case 'color':\n              result.strokeColor = normalizeColor(attr.eq);\n              break;\n            case 'fillcolor':\n              result.fillColor = normalizeColor(attr.eq);\n              break;\n            case 'shape':\n              result.shape = attr.eq === 'none' ? 'table' : attr.eq;\n              break;\n            case 'height':\n              // ignore\n              break;\n            case 'width':\n              // ignore\n              break;\n            default:\n              throw new Error(`Unknown node attribute ${attr.id}`);\n          }\n        }\n      }\n      return result;\n    }\n    function parseGraph(data: any): GraphData {\n      let recordHorizontal = true;\n      const result: GraphData = {\n        type: 'graph',\n        shape: 'box',\n        id: generateId(),\n        component: {\n          type: 'linear',\n          direction: 'TD',\n        },\n        layout: {\n          type: 'KamadaKawai',\n          preferredEdgeDirection: 90,\n        },\n        physics: {\n          type: 'BarnesHut',\n        },\n        children: [],\n      };\n      if (config && config.preferredEdgeDirection !== undefined) {\n        (result.layout as KamadaKawaiGraphLayoutData).preferredEdgeDirection =\n          config.preferredEdgeDirection;\n      }\n      if (data.id) {\n        result.id = data.id;\n      }\n      if (data.children) {\n        for (const child of data.children) {\n          switch (child.type) {\n            case 'attr_stmt':\n              if (child.attr_list) {\n                for (const attr of child.attr_list) {\n                  switch (attr.id) {\n                    case 'label':\n                      result.label = attr.eq;\n                      break;\n                    case 'rankdir':\n                      (result.component as LinearComponentLayoutData)\n                        .direction = ({\n                        LR: 'LR',\n                        TB: 'TD',\n                        RL: 'RL',\n                        BT: 'DT',\n                      } as { [dir: string]: string })[attr.eq as string] as any;\n                      (result.layout as KamadaKawaiGraphLayoutData)\n                        .preferredEdgeDirection = ({\n                        LR: 0,\n                        TB: 90,\n                        RL: 180,\n                        BT: 279,\n                      } as { [dir: string]: number })[attr.eq as string];\n                      recordHorizontal = !(attr.eq === 'LR' ||\n                        attr.eq === 'RL');\n                      break;\n                    case 'style':\n                      result.style = attr.eq;\n                      break;\n                    case 'color':\n                      result.strokeColor = normalizeColor(attr.eq);\n                      break;\n                    case 'fillcolor':\n                      result.fillColor = normalizeColor(attr.eq);\n                      break;\n                    default:\n                      throw new Error(`Unknown graph attribute ${attr.id}`);\n                  }\n                }\n              }\n              break;\n            case 'node_stmt': {\n              const element = parseNode(child);\n              if (element.shape === 'record') {\n                element.direction = recordHorizontal ? 'horizontal' :\n                  'vertical';\n              }\n              result.children!.push(element);\n              break;\n            }\n            case 'edge_stmt': {\n              if (!child.edge_list || child.edge_list.length !== 2) {\n                throw new Error('Edge must have two ends');\n              }\n              const element: EdgeData = {\n                type: 'edge',\n                shape: 'quadratic',\n                id: generateId(),\n                from: child.edge_list[0].id + (child.edge_list[0].port ?\n                  ':' + child.edge_list[0].port.id : ''),\n                to: child.edge_list[1].id + (child.edge_list[1].port ?\n                  ':' + child.edge_list[1].port.id : ''),\n              };\n              // TODO: edge attributes\n              result.children!.push(element);\n              break;\n            }\n            case 'subgraph':\n              result.children!.push(parseGraph(child));\n              break;\n            default:\n              throw new Error(`Unknown child type ${child.type}`);\n          }\n        }\n      }\n      return result;\n    }\n    return parseGraph(ast[0]);\n  },\n  xdot(input: string, config?: GraphParserConfig) {\n    const dotScanner = new DotScanner();\n    const dotParser = new DotParser(dotScanner.scan(input));\n    const graph = dotParser.parse();\n    xdotAttrPass(graph);\n    xdotReverseY(graph);\n    // tslint:disable-next-line:no-console\n    // console.log(graph);\n    return xdotToRenderablePass(graph);\n  },\n};\n","export default \"digraph stdThreadJoin {\\nlabel=\\\" VFG of stdThreadJoin\\\"\\ngraph [rankdir=\\\"LR\\\"]\\nsubgraph cluster_input {\\nlabel=\\\"Inputs\\\"\\nstyle=filled\\ncolor=black\\nfillcolor=darkolivegreen1\\nN912 [label=\\\"N912\\\\n[arg:stdThreadJoin_0]\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN913 [label=\\\"N913\\\\n[arg:stdThreadJoin_0]*\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\n} # end of input\\nsubgraph cluster_output {\\nlabel=\\\"Outputs\\\"\\nstyle=filled\\ncolor=black\\nfillcolor=goldenrod1\\nN940 [label=\\\"N940\\\\n_\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\n} # end of output\\n# body nodes\\nN919 [label=\\\"N919\\\\n&dummy\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN925 [label=\\\"N925\\\\n0\\\", style=filled, fillcolor=\\\"lightgrey\\\", shape=box]\\nN926 [label=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>>, shape=none]\\nN927 [label=\\\"N927\\\\nDEREF\\\", style=filled, fillcolor=\\\"gainsboro\\\", shape=box]\\nN928 [label=\\\"N928\\\\nstdThreadJoin::6*\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN930 [label=\\\"N930\\\\n[arg:_pthread_join_0]\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\nN931 [label=\\\"N931\\\\n[arg:_pthread_join_1]\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\nN932 [label=\\\"N932\\\\nstdThreadJoin::8\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN933 [label=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>>, shape=none]\\nN934 [label=\\\"N934\\\\n1\\\", style=filled, fillcolor=\\\"lightgrey\\\", shape=box]\\nN937 [label=\\\"N937\\\\n&gamma;\\\", style=filled, fillcolor=\\\"darksalmon\\\", shape=box]\\n# proxy\\nP595 [label=\\\"\\\",style=filled,color=crimson,fillcolor=crimson,shape=circle,height=0.05,width=0.05]\\nP596 [label=\\\"\\\",style=filled,color=crimson,fillcolor=crimson,shape=circle,height=0.05,width=0.05]\\n# end of body\\nN937 -> N940\\nN912 -> N926:op_1\\nN925 -> N926:op_2\\nN925 -> N926:op_3\\nN926:top -> N927\\nN928 -> N930\\nN919 -> N931\\nN925 -> N933:op_1\\nN932 -> N933:op_2\\nN925 -> P595 [arrowhead=none]\\nP595 -> N937\\nN933:top -> P595 [label=\\\"N933\\\",style=dotted,color=crimson]\\nN934 -> P596 [arrowhead=none]\\nP596 -> N937\\nN933:top -> P596 [label=\\\"!(N933)\\\",style=dotted,color=crimson]\\nCS_31 [shape=record,style=bold,label=\\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\"]\\nN930 -> CS_31:cs_id_in_0\\nN931 -> CS_31:cs_id_in_1\\nCS_31:cs_id_out_0 -> N932\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"stdThreadJoin\\\",\\n  \\\"label\\\": \\\"VFG of stdThreadJoin\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"springLength\\\": 150,\\n    \\\"direction\\\": \\\"LR\\\",\\n    \\\"preferredEdgeDirection\\\": 0\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_input\\\",\\n      \\\"label\\\": \\\"Inputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darkolivegreen\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N912\\\",\\n          \\\"label\\\": \\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N913\\\",\\n          \\\"label\\\": \\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_output\\\",\\n      \\\"label\\\": \\\"Outputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"goldenrod\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N940\\\",\\n          \\\"label\\\": \\\"N940\\\\n_\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N919\\\",\\n      \\\"label\\\": \\\"N919\\\\n&dummy\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N925\\\",\\n      \\\"label\\\": \\\"N925\\\\n0\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"lightgrey\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N926\\\",\\n      \\\"label\\\": \\\"<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>\\\",\\n      \\\"shape\\\": \\\"table\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N927\\\",\\n      \\\"label\\\": \\\"N927\\\\nDEREF\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"gainsboro\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N928\\\",\\n      \\\"label\\\": \\\"N928\\\\nstdThreadJoin::6*\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N930\\\",\\n      \\\"label\\\": \\\"N930\\\\n[arg:_pthread_join_0]\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N931\\\",\\n      \\\"label\\\": \\\"N931\\\\n[arg:_pthread_join_1]\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N932\\\",\\n      \\\"label\\\": \\\"N932\\\\nstdThreadJoin::8\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N933\\\",\\n      \\\"label\\\": \\\"<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>\\\",\\n      \\\"shape\\\": \\\"table\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N934\\\",\\n      \\\"label\\\": \\\"N934\\\\n1\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"lightgrey\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N937\\\",\\n      \\\"label\\\": \\\"N937\\\\n&gamma;\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darksalmon\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"P595\\\",\\n      \\\"label\\\": \\\"\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"color\\\": \\\"crimson\\\",\\n      \\\"fillColor\\\": \\\"crimson\\\",\\n      \\\"shape\\\": \\\"circle\\\",\\n      \\\"radius\\\": 0.025\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"P596\\\",\\n      \\\"label\\\": \\\"\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"color\\\": \\\"crimson\\\",\\n      \\\"fillColor\\\": \\\"crimson\\\",\\n      \\\"shape\\\": \\\"circle\\\",\\n      \\\"radius\\\": 0.025\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N937\\\",\\n      \\\"to\\\": \\\"N940\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N912\\\",\\n      \\\"to\\\": \\\"N926:op_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N926:op_2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N926:op_3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N926:top\\\",\\n      \\\"to\\\": \\\"N927\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N928\\\",\\n      \\\"to\\\": \\\"N930\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N919\\\",\\n      \\\"to\\\": \\\"N931\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N933:op_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N932\\\",\\n      \\\"to\\\": \\\"N933:op_2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"P595\\\",\\n      \\\"arrowHead\\\": \\\"none\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"P595\\\",\\n      \\\"to\\\": \\\"N937\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N933:top\\\",\\n      \\\"to\\\": \\\"P595\\\",\\n      \\\"label\\\": \\\"N933\\\",\\n      \\\"style\\\": \\\"dotted\\\",\\n      \\\"color\\\": \\\"crimson\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N934\\\",\\n      \\\"to\\\": \\\"P596\\\",\\n      \\\"arrowHead\\\": \\\"none\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"P596\\\",\\n      \\\"to\\\": \\\"N937\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N933:top\\\",\\n      \\\"to\\\": \\\"P596\\\",\\n      \\\"label\\\": \\\"!(N933)\\\",\\n      \\\"style\\\": \\\"dotted\\\",\\n      \\\"color\\\": \\\"crimson\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"CS_31\\\",\\n      \\\"shape\\\": \\\"record\\\",\\n      \\\"style\\\": \\\"bold\\\",\\n      \\\"direction\\\": \\\"vertical\\\",\\n      \\\"label\\\": \\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N930\\\",\\n      \\\"to\\\": \\\"CS_31:cs_id_in_0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N931\\\",\\n      \\\"to\\\": \\\"CS_31:cs_id_in_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"CS_31:cs_id_out_0\\\",\\n      \\\"to\\\": \\\"N932\\\"\\n    }\\n  ]\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"node\\\",\\n  \\\"id\\\": \\\"N926\\\",\\n  \\\"label\\\": \\\"hello\\\\\\\\nworld |{ b |{c|<here> d|e}| f}| g | h\\\",\\n  \\\"shape\\\": \\\"record\\\"\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"stdThreadJoin\\\",\\n  \\\"label\\\": \\\"VFG of stdThreadJoin\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"springLength\\\": 150\\n  },\\n  \\\"component\\\": {\\n    \\\"direction\\\": \\\"LR\\\"\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_input\\\",\\n      \\\"component\\\": {\\n        \\\"direction\\\": \\\"TD\\\"\\n      },\\n      \\\"label\\\": \\\"Inputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darkolivegreen\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N921\\\",\\n          \\\"label\\\": \\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N913\\\",\\n          \\\"label\\\": \\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_output\\\",\\n      \\\"label\\\": \\\"Outputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"goldenrod\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N940\\\",\\n          \\\"label\\\": \\\"N940\\\\n_\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"cluster_input\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"direction\\\": \\\"LR\\\"\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"0\\\",\\n      \\\"label\\\": \\\"0\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"label\\\": \\\"1\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"label\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"3\\\",\\n      \\\"label\\\": \\\"3\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"4\\\",\\n      \\\"label\\\": \\\"4\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"5\\\",\\n      \\\"label\\\": \\\"5\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"6\\\",\\n      \\\"label\\\": \\\"6\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"7\\\",\\n      \\\"label\\\": \\\"7\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"8\\\",\\n      \\\"label\\\": \\\"8\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"9\\\",\\n      \\\"label\\\": \\\"9\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"10\\\",\\n      \\\"label\\\": \\\"10\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"11\\\",\\n      \\\"label\\\": \\\"11\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"2\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"4\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"5\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"8\\\",\\n      \\\"to\\\": \\\"5\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"7\\\",\\n      \\\"to\\\": \\\"4\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"6\\\",\\n      \\\"to\\\": \\\"3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"10\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"2\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"9\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"8\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"9\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"10\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"6\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"7\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    }\\n  ]\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"node\\\",\\n  \\\"id\\\": \\\"N926\\\",\\n  \\\"label\\\": \\\"<TABLE BORDER=\\\\\\\"1\\\\\\\" CELLBORDER=\\\\\\\"1\\\\\\\" CELLSPACING=\\\\\\\"2\\\\\\\" CELLPADDING=\\\\\\\"4\\\\\\\"><TR><TD ROWSPAN=\\\\\\\"3\\\\\\\"><FONT COLOR=\\\\\\\"red\\\\\\\">hello</FONT><BR/>world</TD><TD COLSPAN=\\\\\\\"3\\\\\\\">b</TD><TD ROWSPAN=\\\\\\\"3\\\\\\\" BGCOLOR=\\\\\\\"lightgrey\\\\\\\">g</TD><TD ROWSPAN=\\\\\\\"3\\\\\\\">h</TD></TR><TR><TD>c</TD><TD PORT=\\\\\\\"here\\\\\\\">d</TD><TD>e</TD></TR><TR><TD COLSPAN=\\\\\\\"3\\\\\\\">f</TD></TR></TABLE>\\\",\\n  \\\"shape\\\": \\\"table\\\"\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"hello\\\",\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"0\\\",\\n      \\\"label\\\": \\\"0\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"label\\\": \\\"1\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"label\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"1\\\",\\n      \\\"lineWidth\\\": 5,\\n      \\\"pointerWidth\\\": 20,\\n      \\\"pointerHeight\\\": 30\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"straight\\\"\\n    }\\n  ]\\n}\\n\";","export default \"digraph stdThreadJoin {\\n\\tgraph [_draw_=\\\"c 9 -#fffffe00 C 7 -#ffffff P 4 0 0 0 363 1069 363 1069 0 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 534.5 7.8 0 126 21 - VFG of stdThreadJoin \\\",\\n\\t\\tbb=\\\"0,0,1069,363\\\",\\n\\t\\tlabel=\\\" VFG of stdThreadJoin\\\",\\n\\t\\tlheight=0.21,\\n\\t\\tlp=\\\"534.5,11.5\\\",\\n\\t\\tlwidth=1.75,\\n\\t\\trankdir=LR,\\n\\t\\txdotversion=1.7\\n\\t];\\n\\tnode [label=\\\"\\\\N\\\"];\\n\\tsubgraph cluster_input {\\n\\t\\tgraph [_draw_=\\\"c 7 -#000000 C 7 -#caff70 P 4 446 222 446 355 605 355 605 222 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 339.8 0 34 6 -Inputs \\\",\\n\\t\\t\\tbb=\\\"446,222,605,355\\\",\\n\\t\\t\\tcolor=black,\\n\\t\\t\\tfillcolor=darkolivegreen1,\\n\\t\\t\\tlabel=Inputs,\\n\\t\\t\\tlheight=0.21,\\n\\t\\t\\tlp=\\\"525.5,343.5\\\",\\n\\t\\t\\tlwidth=0.47,\\n\\t\\t\\tstyle=filled\\n\\t\\t];\\n\\t\\tN912\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 594 324 457 324 457 286 594 286 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 308.8 0 31 4 -N912 F 14 11 -Times-Roman c 7 -#000000 T 525.5 293.8 0 121 21 -[arg:stdThreadJoin_\\\\\\n0] \\\",\\n\\t\\t\\tfillcolor=cyan3,\\n\\t\\t\\theight=0.52778,\\n\\t\\t\\tlabel=\\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n\\t\\t\\tpos=\\\"525.5,305\\\",\\n\\t\\t\\tshape=box,\\n\\t\\t\\tstyle=filled,\\n\\t\\t\\twidth=1.9028];\\n\\t\\tN913\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 597 268 454 268 454 230 597 230 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 252.8 0 31 4 -N913 F 14 11 -Times-Roman c 7 -#000000 T 525.5 237.8 0 127 22 -[arg:stdThreadJoin_\\\\\\n0]* \\\",\\n\\t\\t\\tfillcolor=cyan3,\\n\\t\\t\\theight=0.52778,\\n\\t\\t\\tlabel=\\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n\\t\\t\\tpos=\\\"525.5,249\\\",\\n\\t\\t\\tshape=box,\\n\\t\\t\\tstyle=filled,\\n\\t\\t\\twidth=1.9861];\\n\\t}\\n\\tsubgraph cluster_output {\\n\\t\\tgraph [_draw_=\\\"c 7 -#000000 C 7 -#ffc125 P 4 991 104 991 181 1061 181 1061 104 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 1026 165.8 0 43 7 -Outputs \\\",\\n\\t\\t\\tbb=\\\"991,104,1061,181\\\",\\n\\t\\t\\tcolor=black,\\n\\t\\t\\tfillcolor=goldenrod1,\\n\\t\\t\\tlabel=Outputs,\\n\\t\\t\\tlheight=0.21,\\n\\t\\t\\tlp=\\\"1026,169.5\\\",\\n\\t\\t\\tlwidth=0.60,\\n\\t\\t\\tstyle=filled\\n\\t\\t];\\n\\t\\tN940\\t[_draw_=\\\"c 7 -#000000 C 7 -#6495ed P 4 1053 150 999 150 999 112 1053 112 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 1026 134.8 0 31 4 -N940 F 14 11 -Times-Roman c 7 -#000000 T 1026 119.8 0 7 1 -_ \\\",\\n\\t\\t\\tfillcolor=cornflowerblue,\\n\\t\\t\\theight=0.52778,\\n\\t\\t\\tlabel=\\\"N940\\\\n_\\\",\\n\\t\\t\\tpos=\\\"1026,131\\\",\\n\\t\\t\\tshape=box,\\n\\t\\t\\tstyle=filled,\\n\\t\\t\\twidth=0.75];\\n\\t}\\n\\tN926\\t[_ldraw_=\\\"S 5 -solid c 9 -#fffffe00 C 7 -#98fb98 P 4 642 288 642 324 724 324 724 288 S 5 -solid c 7 -#000000 p 4 642 288 642 324 724 324 724 \\\\\\n288 F 14 11 -Times-Roman c 7 -#000000 T 654 309.8 -1 58 8 -N926(%6) F 14 11 -Times-Roman c 7 -#000000 T 645 294.8 -1 76 13 -getelementptr \\\\\\nS 5 -solid c 7 -#000000 p 4 642 267 642 288 724 288 724 267 F 14 11 -Times-Roman c 7 -#000000 T 667.5 273.8 -1 31 4 -N912 S 5 -solid \\\\\\nc 7 -#000000 p 4 642 246 642 267 724 267 724 246 F 14 11 -Times-Roman c 7 -#000000 T 667.5 252.8 -1 31 4 -N925 S 5 -solid c 7 -#\\\\\\n000000 p 4 642 225 642 246 724 246 724 225 F 14 11 -Times-Roman c 7 -#000000 T 667.5 231.8 -1 31 4 -N925 \\\",\\n\\t\\theight=1.4861,\\n\\t\\tlabel=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>>,\\n\\t\\tpos=\\\"683,275\\\",\\n\\t\\tshape=none,\\n\\t\\twidth=1.3611];\\n\\tN912 -> N926:op_1\\t[_draw_=\\\"c 7 -#000000 B 4 584.13 285.95 598.9 282.29 615.06 279.28 630.77 278.32 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 631.12 281.81 641 278 630.89 274.82 \\\",\\n\\t\\tpos=\\\"e,641,278 584.13,285.95 598.9,282.29 615.06,279.28 630.77,278.32\\\"];\\n\\tN919\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 92.5 85 21.5 85 21.5 47 92.5 47 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 57 69.8 0 31 4 -N919 F 14 11 -Times-Roman c 7 -#000000 T 57 54.8 0 55 6 -&dummy \\\",\\n\\t\\tfillcolor=cyan3,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N919\\\\n&dummy\\\",\\n\\t\\tpos=\\\"57,66\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.98611];\\n\\tN931\\t[_draw_=\\\"c 7 -#000000 C 7 -#6495ed P 4 286 85 151 85 151 47 286 47 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 218.5 69.8 0 31 4 -N931 F 14 11 -Times-Roman c 7 -#000000 T 218.5 54.8 0 119 21 -[arg:_pthread_\\\\\\njoin_1] \\\",\\n\\t\\tfillcolor=cornflowerblue,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N931\\\\n[arg:_pthread_join_1]\\\",\\n\\t\\tpos=\\\"218.5,66\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=1.875];\\n\\tN919 -> N931\\t[_draw_=\\\"c 7 -#000000 B 4 92.61 66 106.72 66 123.65 66 140.41 66 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 140.81 69.5 150.81 66 140.81 62.5 \\\",\\n\\t\\tpos=\\\"e,150.81,66 92.609,66 106.72,66 123.65,66 140.41,66\\\"];\\n\\tN925\\t[_draw_=\\\"c 7 -#000000 C 7 -#d3d3d3 P 4 552.5 212 498.5 212 498.5 174 552.5 174 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 196.8 0 31 4 -N925 F 14 11 -Times-Roman c 7 -#000000 T 525.5 181.8 0 7 1 -0 \\\",\\n\\t\\tfillcolor=lightgrey,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N925\\\\n0\\\",\\n\\t\\tpos=\\\"525.5,193\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.75];\\n\\tN925 -> N926:op_2\\t[_draw_=\\\"c 7 -#000000 B 10 552.61 196.17 569.18 199.33 590.2 205.6 605 218 612.32 224.13 608.76 229.78 615 237 621.58 244.62 624.68 250.92 \\\\\\n630.92 253.98 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 630.51 257.47 641 256 631.88 250.61 \\\",\\n\\t\\tpos=\\\"e,641,256 552.61,196.17 569.18,199.33 590.2,205.6 605,218 612.32,224.13 608.76,229.78 615,237 621.58,244.62 624.68,250.92 630.92,\\\\\\n253.98\\\"];\\n\\tN925 -> N926:op_3\\t[_draw_=\\\"c 7 -#000000 B 7 552.61 200.37 568.03 204.95 587.83 211.25 605 218 617.74 223.01 621.72 230.44 631.06 233.55 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 630.6 237.02 641 235 631.61 230.09 \\\",\\n\\t\\tpos=\\\"e,641,235 552.61,200.37 568.03,204.95 587.83,211.25 605,218 617.74,223.01 621.72,230.44 631.06,233.55\\\"];\\n\\tN933\\t[_ldraw_=\\\"S 5 -solid c 9 -#fffffe00 C 7 -#98fb98 P 4 651 125 651 161 715 161 715 125 S 5 -solid c 7 -#000000 p 4 651 125 651 161 715 161 715 \\\\\\n125 F 14 11 -Times-Roman c 7 -#000000 T 654 146.8 -1 58 8 -N933(%9) F 14 11 -Times-Roman c 7 -#000000 T 660.5 131.8 -1 45 7 -icmp \\\\\\nne S 5 -solid c 7 -#000000 p 4 651 104 651 125 715 125 715 104 F 14 11 -Times-Roman c 7 -#000000 T 667.5 110.8 -1 31 4 -N925 S 5 \\\\\\n-solid c 7 -#000000 p 4 651 83 651 104 715 104 715 83 F 14 11 -Times-Roman c 7 -#000000 T 667.5 89.8 -1 31 4 -N932 \\\",\\n\\t\\theight=1.1944,\\n\\t\\tlabel=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>>,\\n\\t\\tpos=\\\"683,122\\\",\\n\\t\\tshape=none,\\n\\t\\twidth=1.1111];\\n\\tN925 -> N933:op_1\\t[_draw_=\\\"c 7 -#000000 B 4 542.76 173.88 562.91 152.28 599.56 119.48 639.94 114.61 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 640.23 118.1 650 114 639.81 111.12 \\\",\\n\\t\\tpos=\\\"e,650,114 542.76,173.88 562.91,152.28 599.56,119.48 639.94,114.61\\\"];\\n\\tP595\\t[_draw_=\\\"c 7 -#dc143c C 7 -#dc143c E 841.5 153 2 2 \\\",\\n\\t\\tcolor=crimson,\\n\\t\\tfillcolor=crimson,\\n\\t\\theight=0.055556,\\n\\t\\tlabel=\\\"\\\",\\n\\t\\tpos=\\\"841.5,153\\\",\\n\\t\\tshape=circle,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.055556];\\n\\tN925 -> P595\\t[_draw_=\\\"c 7 -#000000 B 7 552.58 192.1 600.73 190.04 706.63 183.75 794 166 812.4 162.26 834.2 155.11 839.36 153.38 \\\",\\n\\t\\tarrowhead=none,\\n\\t\\tpos=\\\"552.58,192.1 600.73,190.04 706.63,183.75 794,166 812.4,162.26 834.2,155.11 839.36,153.38\\\"];\\n\\tN927\\t[_draw_=\\\"c 7 -#000000 C 7 -#dcdcdc P 4 871 325 812 325 812 287 871 287 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 841.5 309.8 0 31 4 -N927 F 14 11 -Times-Roman c 7 -#000000 T 841.5 294.8 0 43 5 -DEREF \\\",\\n\\t\\tfillcolor=gainsboro,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N927\\\\nDEREF\\\",\\n\\t\\tpos=\\\"841.5,306\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.81944];\\n\\tN926:top -> N927\\t[_draw_=\\\"c 7 -#000000 B 4 725 306 750.45 306 779.05 306 801.42 306 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 801.55 309.5 811.55 306 801.55 302.5 \\\",\\n\\t\\tpos=\\\"e,811.55,306 725,306 750.45,306 779.05,306 801.42,306\\\"];\\n\\tN928\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 114 141 0 141 0 103 114 103 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 57 125.8 0 31 4 -N928 F 14 11 -Times-Roman c 7 -#000000 T 57 110.8 0 98 17 -stdThreadJoin::6* \\\",\\n\\t\\tfillcolor=cyan3,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N928\\\\nstdThreadJoin::6*\\\",\\n\\t\\tpos=\\\"57,122\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=1.5833];\\n\\tN930\\t[_draw_=\\\"c 7 -#000000 C 7 -#6495ed P 4 286 141 151 141 151 103 286 103 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 218.5 125.8 0 31 4 -N930 F 14 11 -Times-Roman c 7 -#000000 T 218.5 110.8 0 119 21 -[arg:_pthread_\\\\\\njoin_0] \\\",\\n\\t\\tfillcolor=cornflowerblue,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N930\\\\n[arg:_pthread_join_0]\\\",\\n\\t\\tpos=\\\"218.5,122\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=1.875];\\n\\tN928 -> N930\\t[_draw_=\\\"c 7 -#000000 B 4 114.23 122 122.84 122 131.84 122 140.79 122 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 140.85 125.5 150.85 122 140.85 118.5 \\\",\\n\\t\\tpos=\\\"e,150.85,122 114.23,122 122.84,122 131.84,122 140.79,122\\\"];\\n\\tCS_31\\t[_draw_=\\\"S 15 -setlinewidth(2) c 7 -#000000 p 4 323 70.5 323 139.5 417 139.5 417 70.5 c 7 -#000000 L 2 323 116.5 417 116.5 c 7 -#000000 L \\\\\\n2 323 93.5 370 93.5 c 7 -#000000 L 2 370 70.5 370 116.5 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 370 124.3 0 76 13 -_pthread_join F 14 11 -Times-Roman c 7 -#000000 T 346.5 101.3 0 31 4 -N930 \\\\\\nF 14 11 -Times-Roman c 7 -#000000 T 346.5 78.3 0 31 4 -N931 F 14 11 -Times-Roman c 7 -#000000 T 393.5 89.8 0 31 4 -N932 \\\",\\n\\t\\theight=0.97222,\\n\\t\\tlabel=\\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\",\\n\\t\\tpos=\\\"370,105\\\",\\n\\t\\trects=\\\"323,116.5,417,139.5 323,93.5,370,116.5 323,70.5,370,93.5 370,70.5,417,116.5\\\",\\n\\t\\tshape=record,\\n\\t\\tstyle=bold,\\n\\t\\twidth=1.3056];\\n\\tN930 -> CS_31:cs_id_in_0\\t[_draw_=\\\"c 7 -#000000 B 4 286.05 107.81 294.84 106.6 303.87 105.68 312.72 105.26 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 313.09 108.75 323 105 312.92 101.75 \\\",\\n\\t\\tpos=\\\"e,323,105 286.05,107.81 294.84,106.6 303.87,105.68 312.72,105.26\\\"];\\n\\tN931 -> CS_31:cs_id_in_1\\t[_draw_=\\\"c 7 -#000000 B 4 286.08 79.36 294.87 80.49 303.9 81.36 312.74 81.76 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 312.92 85.27 323 82 313.08 78.27 \\\",\\n\\t\\tpos=\\\"e,323,82 286.08,79.358 294.87,80.493 303.9,81.361 312.74,81.76\\\"];\\n\\tN932\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 579 112 472 112 472 74 579 74 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 96.8 0 31 4 -N932 F 14 11 -Times-Roman c 7 -#000000 T 525.5 81.8 0 91 16 -stdThreadJoin::\\\\\\n8 \\\",\\n\\t\\tfillcolor=cyan3,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N932\\\\nstdThreadJoin::8\\\",\\n\\t\\tpos=\\\"525.5,93\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=1.4861];\\n\\tN932 -> N933:op_2\\t[_draw_=\\\"c 7 -#000000 B 4 579.08 93 597.84 93 619.38 93 639.78 93 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 640 96.5 650 93 640 89.5 \\\",\\n\\t\\tpos=\\\"e,650,93 579.08,93 597.84,93 619.38,93 639.78,93\\\"];\\n\\tN933:top -> P595\\t[_draw_=\\\"S 6 -dotted c 7 -#dc143c B 4 716 143 757.78 143 807.19 148.66 829.08 151.47 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#dc143c C 7 -#dc143c P 3 828.9 154.97 839.28 152.83 829.83 148.03 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 772 150.8 0 31 4 -N933 \\\",\\n\\t\\tcolor=crimson,\\n\\t\\tlabel=N933,\\n\\t\\tlp=\\\"772,154.5\\\",\\n\\t\\tpos=\\\"e,839.28,152.83 716,143 757.78,143 807.19,148.66 829.08,151.47\\\",\\n\\t\\tstyle=dotted];\\n\\tP596\\t[_draw_=\\\"c 7 -#dc143c C 7 -#dc143c E 841.5 115 2 2 \\\",\\n\\t\\tcolor=crimson,\\n\\t\\tfillcolor=crimson,\\n\\t\\theight=0.055556,\\n\\t\\tlabel=\\\"\\\",\\n\\t\\tpos=\\\"841.5,115\\\",\\n\\t\\tshape=circle,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.055556];\\n\\tN933:top -> P596\\t[_draw_=\\\"S 6 -dotted c 7 -#dc143c B 7 716 143 735.3 143 731.82 122.45 750 116 777.11 106.38 811.72 110.01 829.25 112.85 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#dc143c C 7 -#dc143c P 3 828.7 116.31 839.17 114.7 829.98 109.43 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 772 119.8 0 44 7 -!(N933) \\\",\\n\\t\\tcolor=crimson,\\n\\t\\tlabel=\\\"!(N933)\\\",\\n\\t\\tlp=\\\"772,123.5\\\",\\n\\t\\tpos=\\\"e,839.17,114.7 716,143 735.3,143 731.82,122.45 750,116 777.11,106.38 811.72,110.01 829.25,112.85\\\",\\n\\t\\tstyle=dotted];\\n\\tN934\\t[_draw_=\\\"c 7 -#000000 C 7 -#d3d3d3 P 4 710 61 656 61 656 23 710 23 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 683 45.8 0 31 4 -N934 F 14 11 -Times-Roman c 7 -#000000 T 683 30.8 0 7 1 -1 \\\",\\n\\t\\tfillcolor=lightgrey,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N934\\\\n1\\\",\\n\\t\\tpos=\\\"683,42\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.75];\\n\\tN934 -> P596\\t[_draw_=\\\"c 7 -#000000 B 4 710.19 54.22 751.96 73.7 829.94 110.08 839.53 114.55 \\\",\\n\\t\\tarrowhead=none,\\n\\t\\tpos=\\\"710.19,54.219 751.96,73.701 829.94,110.08 839.53,114.55\\\"];\\n\\tN937\\t[_draw_=\\\"c 7 -#000000 C 7 -#e9967a P 4 962 150 908 150 908 112 962 112 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 935 134.8 0 31 4 -N937 F 14 11 -Times-Roman c 7 -#000000 T 935 119.8 0 7 2 -γ \\\",\\n\\t\\tfillcolor=darksalmon,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N937\\\\n&gamma;\\\",\\n\\t\\tpos=\\\"935,131\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.75];\\n\\tN937 -> N940\\t[_draw_=\\\"c 7 -#000000 B 4 962.22 131 970.55 131 979.91 131 988.82 131 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 988.97 134.5 998.97 131 988.97 127.5 \\\",\\n\\t\\tpos=\\\"e,998.97,131 962.22,131 970.55,131 979.91,131 988.82,131\\\"];\\n\\tP595 -> N937\\t[_draw_=\\\"c 7 -#000000 B 4 843.53 152.75 848.97 151.45 875 145.19 897.76 139.71 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 898.66 143.1 907.57 137.36 897.02 136.29 \\\",\\n\\t\\tpos=\\\"e,907.57,137.36 843.53,152.75 848.97,151.45 875,145.19 897.76,139.71\\\"];\\n\\tP596 -> N937\\t[_draw_=\\\"c 7 -#000000 B 4 843.53 115.18 848.94 116.13 874.77 120.64 897.45 124.61 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 897.11 128.1 907.57 126.38 898.32 121.21 \\\",\\n\\t\\tpos=\\\"e,907.57,126.38 843.53,115.18 848.94,116.13 874.77,120.64 897.45,124.61\\\"];\\n\\tCS_31:cs_id_out_0 -> N932\\t[_draw_=\\\"c 7 -#000000 B 4 417 93 431.34 93 446.76 93 461.32 93 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 461.74 96.5 471.74 93 461.74 89.5 \\\",\\n\\t\\tpos=\\\"e,471.74,93 417,93 431.34,93 446.76,93 461.32,93\\\"];\\n}\\n\";","export default \"digraph hello {\\n\\tgraph [_draw_=\\\"c 9 -#fffffe00 C 7 -#ffffff P 4 0 0 0 108 54 108 54 0 \\\",\\n\\t\\tbb=\\\"0,0,54,108\\\",\\n\\t\\txdotversion=1.7\\n\\t];\\n\\tnode [label=\\\"\\\\N\\\"];\\n\\ta\\t[_draw_=\\\"c 7 -#000000 C 7 -#6495ed E 27 90 27 18 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 27 86.3 0 7 1 -a \\\",\\n\\t\\tfillcolor=cornflowerblue,\\n\\t\\theight=0.5,\\n\\t\\tpos=\\\"27,90\\\",\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.75];\\n\\tb\\t[_draw_=\\\"c 7 -#000000 e 27 18 27 18 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 27 14.3 0 7 1 -b \\\",\\n\\t\\theight=0.5,\\n\\t\\tpos=\\\"27,18\\\",\\n\\t\\twidth=0.75];\\n\\ta -> b\\t[_draw_=\\\"c 7 -#000000 B 4 27 71.7 27 63.98 27 54.71 27 46.11 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 30.5 46.1 27 36.1 23.5 46.1 \\\",\\n\\t\\tpos=\\\"e,27,36.104 27,71.697 27,63.983 27,54.712 27,46.112\\\"];\\n}\\n\";","import stdThreadJoinGv from '!raw-loader!./examples/stdThreadJoin.gv';\nimport stdThreadJoinJson from '!raw-loader!./examples/stdThreadJoin.txt';\nimport recordJson from '!raw-loader!./examples/record.txt';\nimport subgraphJson from '!raw-loader!./examples/subgraph.txt';\nimport icosahedronJson from '!raw-loader!./examples/icosahedron.txt';\nimport tableJson from '!raw-loader!./examples/table.txt';\nimport edgeJson from '!raw-loader!./examples/edge.txt';\nimport stdThreadJoinXdot from '!raw-loader!./examples/stdThreadJoin.xdot.txt';\nimport testXdot from '!raw-loader!./examples/test.xdot.txt';\n\ninterface Example {\n  name: string;\n  parser: string;\n  content: string;\n}\n\nexport const graphExamples: Example[] = [\n  {\n    name: 'stdThreadJoinGv',\n    parser: 'graphviz',\n    content: stdThreadJoinGv,\n  },\n  {\n    name: 'stdThreadJoinJson',\n    parser: 'json',\n    content: stdThreadJoinJson,\n  },\n  {\n    name: 'record',\n    parser: 'json',\n    content: recordJson,\n  },\n  {\n    name: 'subgraph',\n    parser: 'json',\n    content: subgraphJson,\n  },\n  {\n    name: 'icosahedronJson',\n    parser: 'json',\n    content: icosahedronJson,\n  },\n  {\n    name: 'table',\n    parser: 'json',\n    content: tableJson,\n  },\n  {\n    name: 'edge',\n    parser: 'json',\n    content: edgeJson,\n  },\n  {\n    name: 'stdThreadJoinXdot',\n    parser: 'xdot',\n    content: stdThreadJoinXdot,\n  },\n  {\n    name: 'testXdot',\n    parser: 'xdot',\n    content: testXdot,\n  },\n];\n","import { debounce } from 'lodash-es';\n\nexport function Debounce(delay: number) {\n  return (target: any, prop: string) => {\n    return {\n      configurable: true,\n      enumerable: false,\n      value: debounce(target[prop], delay),\n    };\n  };\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Watch } from 'vue-property-decorator';\nimport CollapsiblePane from './components/CollapsiblePane.vue';\nimport Graph from './components/Graph.vue';\nimport 'vue-awesome/icons/upload';\nimport 'vue-awesome/icons/sync';\nimport {throttle} from 'lodash-es';\nimport {globalGraphRoot} from '@/graph/Root';\nimport {graphParsers} from '@/graph/parser';\nimport {graphExamples} from './graph/examples';\nimport {Debounce} from '@/debounce-decorator';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\n@Component({\n  components: {\n    CollapsiblePane,\n    Graph,\n  },\n})\nexport default class App extends Vue {\n  get desktopLayout() {\n    return this.windowWidth > 719;\n  }\n  get realSettingsWidth() {\n    return this.desktopLayout ? this.settingsWidth : this.canvasWidth;\n  }\n  // UI data\n  // noinspection JSUnusedLocalSymbols\n  private settingsOpen = true;\n  private settingsWidth = 300;\n  private minGraphWidth = 150;\n  private minSettingsWidth = 150;\n  private sizerMouseActive = false;\n  private sizerTouchActive = false;\n  private windowWidth = document.documentElement.clientWidth;\n  private windowHeight = document.documentElement.clientHeight;\n  private canvasWidth = 0;\n  private canvasHeight = 0;\n  // Input data\n  private parser = 'json';\n  private rawInput = '';\n  private parseError = null;\n  private parsedInput = '';\n  // noinspection JSUnusedLocalSymbols\n  private examples = graphExamples;\n  // Rendered data\n  // noinspection JSMismatchedCollectionQueryUpdate\n  private rendered: AnyShape[] = [];\n  @Debounce(10000 / 60)\n  public parseInput() {\n    try {\n      if (this.rawInput) {\n        const parsed = graphParsers[this.parser](this.rawInput);\n        this.parsedInput = JSON.stringify(parsed, null, 2);\n        globalGraphRoot.updateData(parsed);\n      } else {\n        this.parsedInput = '';\n      }\n      this.parseError = null;\n    } catch (e) {\n      /* tslint:disable:no-console */\n      console.log(e);\n      this.parseError = e.stack;\n    }\n  }\n  public mounted() {\n    window.addEventListener('resize', this.getSize);\n    this.updateCanvasSize();\n    globalGraphRoot.addEventListener('render', throttle((data: AnyShape[]) => {\n      this.rendered = data;\n    }, 1000 / 60));\n  }\n  public beforeDestroy() {\n    window.removeEventListener('resize', this.getSize);\n  }\n  @Watch('settingsWidth')\n  public onSettingsWidthChanged() {\n    this.updateCanvasSize();\n  }\n  @Watch('parser')\n  public onParserChanged() {\n    this.parseInput();\n  }\n  @Watch('rawInput')\n  public onRawInputChanged() {\n    this.parseInput();\n  }\n  public redraw() {\n    if (this.parsedInput) {\n      globalGraphRoot.fullyUpdateData(JSON.parse(this.parsedInput));\n    }\n  }\n  public selectExample(i: number) {\n    const example = graphExamples[i];\n    this.parser = example.parser;\n    this.rawInput = example.content;\n  }\n  public inputFileChange(e: InputEvent) {\n    const file = (e.target as HTMLInputElement).files![0];\n    if (!file) {\n      return;\n    }\n    switch (file.type) {\n      case 'application/json':\n        this.parser = 'json';\n        break;\n      case 'text/vnd.graphviz':\n        this.parser = 'graphviz';\n        break;\n      default:\n        alert('Unknown file type');\n        return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent<FileReader>) => {\n      this.rawInput = evt.target!.result as string;\n    };\n    reader.readAsText(file);\n  }\n  public getSize() {\n    this.windowWidth = document.documentElement.clientWidth;\n    this.windowHeight = document.documentElement.clientHeight;\n    this.$nextTick(() => this.updateCanvasSize());\n  }\n  public updateCanvasSize() {\n    this.canvasWidth = (this.$refs.canvas as HTMLElement).offsetWidth;\n    this.canvasHeight = (this.$refs.canvas as HTMLElement).offsetHeight;\n    // globalRoot.setViewportSize(this.canvasWidth, this.canvasHeight);\n  }\n  public onMainSizerMouseDown() {\n    this.sizerMouseActive = true;\n  }\n  public onMainSizerMouseUp() {\n    this.sizerMouseActive = false;\n  }\n  public onMainSizerMouseMove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.sizerMouseActive = false;\n    }\n    if (this.sizerMouseActive) {\n      let elementOffsetX = 0;\n      let target = e.currentTarget;\n      while (target) {\n        elementOffsetX += (target as HTMLElement).offsetLeft;\n        target = (target as HTMLElement).offsetParent;\n      }\n      const mouseOffsetX = e.pageX;\n      const width = (e.currentTarget! as HTMLElement).offsetWidth;\n      const offsetX = mouseOffsetX - elementOffsetX;\n      if (offsetX >= this.minGraphWidth &&\n        (width - offsetX) >= this.minSettingsWidth) {\n        this.settingsWidth = Math.round(width - offsetX);\n      }\n    }\n  }\n  public onMainSizerTouchStart() {\n    this.sizerTouchActive = true;\n  }\n  public onMainSizerTouchEnd() {\n    this.sizerTouchActive = false;\n  }\n  public onMainSizerTouchMove(e: TouchEvent) {\n    if (this.sizerTouchActive) {\n      let elementOffsetX = 0;\n      let target = e.currentTarget;\n      while (target) {\n        elementOffsetX += (target as HTMLElement).offsetLeft;\n        target = (target as HTMLElement).offsetParent;\n      }\n      const mouseOffsetX = e.touches[0].pageX;\n      const width = (e.currentTarget! as HTMLElement).offsetWidth;\n      const offsetX = mouseOffsetX - elementOffsetX;\n      if (offsetX >= this.minGraphWidth &&\n        (width - offsetX) >= this.minSettingsWidth) {\n        this.settingsWidth = Math.round(width - offsetX);\n      }\n    }\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2b815e16&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Icon from 'vue-awesome/components/Icon.vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n\nVue.component('v-icon', Icon);\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\""],"sourceRoot":""}