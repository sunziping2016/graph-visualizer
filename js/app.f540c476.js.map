{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Graph.vue?d7c2","webpack:///./src/App.vue?7970","webpack:///./src/App.vue?7f17","webpack:///./src/components/CollapsiblePane.vue?67bd","webpack:///./src/components/CollapsiblePane.vue?1fa9","webpack:///./src/components/CollapsiblePane.vue?0878","webpack:///./src/components/CollapsiblePane.vue","webpack:///./src/components/Graph.vue?4566","webpack:///./src/graph/base/EventEmitter.ts","webpack:///./src/graph/base/Positioned.ts","webpack:///./src/graph/graph/layout/GraphLayout.ts","webpack:///./src/graph/graph/layout/KamadaKawaiGraphLayout.ts","webpack:///./src/graph/graph/layout/graphLayoutFactory.ts","webpack:///./src/graph/graph/component/ComponentLayout.ts","webpack:///./src/graph/graph/component/LinearComponentLayout.ts","webpack:///./src/graph/graph/component/componentLayoutFactory.ts","webpack:///./src/graph/graph/type/GraphType.ts","webpack:///./src/graph/graph/type/BoxGraphType.ts","webpack:///./src/graph/graph/type/graphTypeFactory.ts","webpack:///./src/graph/base/Port.ts","webpack:///./src/graph/graph/physics/GraphPhysics.ts","webpack:///./src/graph/graph/physics/BarnesHutGraphPhysics.ts","webpack:///./src/graph/graph/physics/graphPhysicsFactory.ts","webpack:///./src/graph/graph/Graph.ts","webpack:///./src/graph/edge/type/EdgeType.ts","webpack:///./src/graph/edge/type/StraightEdgeType.ts","webpack:///./src/graph/edge/type/QuadraticEdgeType.ts","webpack:///./src/graph/edge/type/edgeTypeFactory.ts","webpack:///./src/graph/node/type/recordParser.ts","webpack:///./src/graph/node/type/NodeType.ts","webpack:///./src/graph/node/type/BoxNodeType.ts","webpack:///./src/graph/node/type/RecordCell.ts","webpack:///./src/graph/node/type/RecordNodeType.ts","webpack:///./src/graph/node/type/TableCell.ts","webpack:///./src/graph/node/type/TableNodeType.ts","webpack:///./src/graph/node/type/nodeTypeFactory.ts","webpack:///./src/graph/node/Node.ts","webpack:///./src/graph/edge/Edge.ts","webpack:///./src/graph/base/renderableFactory.ts","webpack:///./src/graph/examples/stdThreadJoin.gv","webpack:///./src/graph/examples/stdThreadJoin.txt","webpack:///./src/graph/examples/record.txt","webpack:///./src/graph/examples/subgraph.txt","webpack:///./src/graph/examples/icosahedron.txt","webpack:///./src/graph/examples/table.txt","webpack:///./src/graph/examples/edge.txt","webpack:///./src/graph/Root.ts","webpack:///./src/components/MyCanvas.vue?ed0a","webpack:///./src/components/MyCanvas.vue?e1f3","webpack:///./src/components/MyCanvas.vue?40d2","webpack:///./src/components/MyCanvas.vue","webpack:///./src/components/Graph.vue?b1ea","webpack:///./src/components/Graph.vue?becd","webpack:///./src/components/Graph.vue","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?640d","webpack:///./src/App.vue","webpack:///./src/main.ts","webpack:///./src/components/CollapsiblePane.vue?6677"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","class","settingsOpen","on","$event","_e","_g","desktopLayout","assign","sizerMouseActive","mouseup","onMainSizerMouseUp","mousemove","onMainSizerMouseMove","sizerTouchActive","touchend","onMainSizerTouchEnd","touchmove","onMainSizerTouchMove","style","width","settingsWidth","ref","_s","parseError","canvasWidth","canvasHeight","rendered","left","onMainSizerMouseDown","onMainSizerTouchStart","inputFileChange","directives","rawName","expression","$$selectedVal","Array","filter","target","options","selected","map","val","_value","parser","multiple","redraw","_l","example","selectExample","realSettingsWidth","domProps","composing","rawInput","parsedInput","staticRenderFns","click","title","expand","animationHeight","height","_t","realHeight","content","$refs","paneContent","offsetHeight","addEventListener","transitionEnd","setTimeout","String","mainCanvasData","mousedown","wheel","mouseDragActive","thumbnailWidth","thumbnailHeight","thumbnailCanvasData","thumbnailMousedown","thumbnailMouseDragActive","thumbnailMouseup","thumbnailMousemove","events","event","listener","undefined","index","indexOf","args","parent","fixed","position","x","y","node","Error","graph","ports","edges","children","config","edge","fullyUpdatePosition","contentSize","newConfig","KamadaKawaiGraphLayout","defaultConfig","portToIndex","Map","set","port","initialPlaced","setPosition","springLength","Math","random","distanceMatrix","fill","Infinity","fromBelonging","toBelonging","fromIndex","toIndex","k","dist","lengthMatrix","kMatrix","springConstant","pow","energyMatrix","mPos","getPosition","iPos","denominator","sqrt","energySum","sum","maxEnergy","threshold","maxIterations","max","min","maxInnerIterations","iterations","deDx","deDy","e","delta","subIterations","d2eDx2","d2eDxDy","d2eDy2","factor","dx","dy","sumX","sumY","oldDx","oldDy","deltaX","deltaY","upperLeft","lowerRight","pos","size","getBoundingBoxSize","halfWidth","halfHeight","informAllEdgesFullyUpdatePosition","is","render","layoutFactory","type","LinearComponentLayout","components","layouts","componentsSize","getContentSize","direction","reduce","a","b","spaceBetween","begin","componentFactory","shape","updateData","BoxGraphType","layout","textSizeNeedsUpdate","label","fontSize","fontFamily","lineHeight","ctx","root","font","lines","split","textSize","measureText","layoutContentSize","componentLayout","padding","textPosition","labelPosition","borderSize","strokeWidth","rect","fillColor","stroke","strokeColor","text","align","angle","abs","cos","sin","graphTypeFactory","id","BarnesHutGraphPhysics","layoutData","nodeToIndex","nodes","forces","velocities","controlPoints","getControlPoints","point","minX","maxX","minY","maxY","positioned","sizeDiff","rootSize","halfRootSize","centerX","centerY","tree","centerOfMass","mass","range","splitBranch","placeInTree","that","distance","gravityForce","centralGravity","calculateForces","branch","nodeMass","gravitationalConstant","force","getForceContributions","getForceContribution","NW","NE","SW","SE","theta","formBarnesHutTree","items","item1","item2","edgeLength","springForce","fx","fy","calculateVelocity","velocity","df","damping","maxVelocity","item","updatePosition","containedNode","childSize","updateBranchMass","region","child","totalMass","physicsFactory","parentData","Graph","getId","depth","fullId","parentId","fromEdges","Set","toEdges","oldChildren","subgraphs","renderableFactory","has","newChild","constructor","adjacencyList","edgesData","values","from","findPort","to","findBelongingPort","unvisited","layoutsData","calculateConnectedComponent","delete","component","adjacency","next","portToComponent","edgeData","concat","componentClass","layoutClass","physicsClass","physics","newLayouts","newPhysics","solve","typeClass","graphType","updated","subgraph","step","draggable","distanceToBorder","fromPointerPos","toPointerPos","fromAngle","toAngle","lineFromPos","lineToPos","StraightEdgeType","fromPort","toPort","fromPos","getAbsolutePosition","toPos","atan2","PI","fromDistance","toDistance","realFromPosX","realFromPosY","realToPosX","realToPosY","fromPointer","pointerWidth","toPointer","pointerHeight","pointerColor","unshift","points","lineColor","lineWidth","controlPoint","QuadraticEdgeType","viaPos","edgeTypeFactory","TokenEnum","BoxNodeType","contentSizeNeedsUpdate","borderSizeNeedsUpdate","recordParser","record","buffer","lexer","pop","EOF","VERTICAL_BAR","LEFT_CURLY_BRACE","RIGHT_CURLY_BRACE","LEFT_ANGLE_BRACE","RIGHT_ANGLE_BRACE","STRING","parseRecordLabel","token","parseField","ret","nodeType","isHorizontal","isField","fieldData","getPorts","getConfig","cellSize","recordData","cell","RecordCell","deltaWidth","startX","updateCellSize","deltaHeight","startY","RecordNodeType","contentNeedsUpdate","borderNeedsUpdate","rootCellSize","getCellSize","founded","rowSpan","columnSpan","border","getTableConfig","cellBorder","backgroundColor","attributes","keys","attribute","toLowerCase","parseInt","getText","element","elements","join","parentConfig","tableConfig","cellPadding","rowOffset","columnOffset","TableNodeType","layoutNeedsUpdate","jsonObj","xml2js","tableElement","cellSpacing","table","rows","columns","firstRow","tr","row","td","getPort","cellSizes","cellHeight","cellWidth","rowHeight","columnWidth","accRowHeight","accColumnWidth","upperLeftX","upperLeftY","nodeTypeFactory","Node","Edge","fromNodeOrGraph","toNodeOrGraph","findParentNodeOrGraph","add","edgeType","document","createElement","getContext","stepTimer","setInterval","informRender","idArray","clearFixed","newClass","renderable","emit","globalRoot","globalParsers","json","input","JSON","parse","graphviz","globalExamples","stdThreadJoin","icosahedron","staticStyle","$listeners","context","hitContext","hitColorMap","hitIdMap","canvas","enableHit","hitCanvas","round","g","color","hitCtx","clearRect","updateShape","draggableId","finalDraggable","finalId","save","translate","scale","scaleX","scaleY","childShape","restore","beginPath","fillStyle","strokeStyle","generateHitColor","linesWidth","posY","textBaseline","posX","fillText","moveTo","lineTo","quadraticCurveTo","middleX","middleY","closePath","outerLeft","outerTop","outerRight","outerBottom","innerLeft","innerTop","innerBottom","innerRight","pixel","getImageData","updateCanvas","Number","required","Boolean","draggedId","mouseLastCoords","maxThumbnailLength","minThumbnailLength","thumbnailPadding","thumbnailMouseLastCoords","updateSize","scaleBy","preventDefault","translateMouseEvent","mousePointTo","stageX","stageY","newPos","elementOffsetX","elementOffsetY","currentTarget","offsetLeft","offsetTop","offsetParent","pageX","pageY","mainCanvas","getIdFromHitPoint","setFixed","buttons","newCoords","movePort","thumbnailCanvas","oldCoords","thumbnailFactor","deepCopyAndRemoveDraggable","copy","viewportX","viewportY","viewportWidth","viewportHeight","default","MyCanvas","minGraphWidth","minSettingsWidth","windowWidth","documentElement","clientWidth","windowHeight","clientHeight","examples","parsed","stringify","console","log","stack","getSize","updateCanvasSize","throttle","removeEventListener","parseInput","fullyUpdateData","file","files","alert","reader","FileReader","onload","evt","readAsText","$nextTick","offsetWidth","mouseOffsetX","offsetX","touches","CollapsiblePane","productionTip","Icon","h","$mount"],"mappings":"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","file":"js/app.f540c476.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=style&index=0&id=31f9a6f4&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=style&index=0&id=31f9a6f4&lang=stylus&scoped=true&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=stylus&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=stylus&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('header',{staticClass:\"app-header\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\"Graph Visualizer\")]),_c('div',{staticClass:\"settings\"},[(_vm.desktopLayout)?_c('div',{staticClass:\"settings-item\"},[_c('span',{staticClass:\"settings-item-title\",class:{ 'setting-item-active': _vm.settingsOpen },on:{\"click\":function($event){_vm.settingsOpen = !_vm.settingsOpen}}},[_vm._v(\"\\n          侧栏\\n        \")])]):_vm._e()])]),_c('main',_vm._g({staticClass:\"main-panes\",class:{\n          'main-panes-show-sidebarmain-panes-show-sidebar': _vm.settingsOpen && _vm.desktopLayout\n        }},Object.assign({}, _vm.sizerMouseActive ? {\n          mouseup: _vm.onMainSizerMouseUp,\n          mousemove: _vm.onMainSizerMouseMove\n        } : {}, _vm.sizerTouchActive ? {\n          touchend: _vm.onMainSizerTouchEnd,\n          touchmove: _vm.onMainSizerTouchMove\n        } : {})),[_c('div',{staticClass:\"main-container main-container-graph\",class:{ 'main-container-graph-size-active':\n                    !_vm.sizerMouseActive && !_vm.sizerTouchActive},style:({\n           width: _vm.desktopLayout ? (_vm.settingsOpen ?\n                  (\"calc(100% - \" + _vm.settingsWidth + \"px)\") : '100%') : 'auto'\n         })},[_c('div',{ref:\"canvas\",staticClass:\"main-pane main-pane-graph\"},[(_vm.parseError)?_c('div',{staticClass:\"error-pane\"},[_c('pre',[_c('code',[_vm._v(_vm._s(_vm.parseError))])])]):_vm._e(),_c('Graph',{ref:\"graph\",attrs:{\"width\":_vm.canvasWidth,\"height\":_vm.canvasHeight,\"data\":_vm.rendered}})],1)]),_c('transition',{attrs:{\"name\":\"sizer-slide-x\",\"duration\":300}},[(_vm.settingsOpen && _vm.desktopLayout)?_c('div',{staticClass:\"main-sizer main-client-settings-sizer\",style:({ left: (\"calc(100% - \" + _vm.settingsWidth + \"px)\") }),on:{\"mousedown\":_vm.onMainSizerMouseDown,\"touchstart\":_vm.onMainSizerTouchStart}},[_c('div',{staticClass:\"main-sizer-handlebar\"})]):_vm._e()]),_c('transition',{attrs:{\"name\":\"settings-slide-x\",\"duration\":300}},[(_vm.settingsOpen || !_vm.desktopLayout)?_c('div',{staticClass:\"main-container main-container-settings\",style:({\n             width: _vm.desktopLayout ? (_vm.settingsWidth + \"px\") : 'auto'\n           })},[_c('div',{staticClass:\"main-pane main-pane-settings\"},[_c('CollapsiblePane',{staticClass:\"main-pane-subpane\",attrs:{\"title\":\"输入\"}},[_c('div',{staticClass:\"settings-input-file\"},[_c('label',{attrs:{\"for\":\"input-file\"}},[_c('v-icon',{attrs:{\"name\":\"upload\",\"scale\":\"0.8\"}}),_vm._v(\"打开文件\\n              \")],1),_c('input',{attrs:{\"type\":\"file\",\"id\":\"input-file\"},on:{\"change\":_vm.inputFileChange}})]),_c('div',{staticClass:\"settings-input-format\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.parser),expression:\"parser\"}],attrs:{\"id\":\"input-format\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.parser=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"json\",\"selected\":\"\"}},[_vm._v(\"JSON\")]),_c('option',{attrs:{\"value\":\"graphviz\"}},[_vm._v(\"Graphviz\")])])]),_c('button',{staticClass:\"setting-input-redraw\",on:{\"click\":_vm.redraw}},[_c('v-icon',{attrs:{\"name\":\"sync\",\"scale\":\"0.8\"}}),_vm._v(\"重绘\\n            \")],1),_c('div',{staticClass:\"settings-input-examples\"},[_c('span',{staticClass:\"settings-input-example-label\"},[_vm._v(\"示例：\")]),_vm._l((_vm.examples),function(example,i){return _c('span',{key:example.name,staticClass:\"settings-input-example\",on:{\"click\":function($event){return _vm.selectExample(i)}}},[_vm._v(\"\\n                \"+_vm._s(example.name)+\"\\n              \")])})],2),_c('div',{staticClass:\"settings-input-display\",class:{ 'settings-input-display-two-column':\n                            _vm.realSettingsWidth >= 400 }},[_c('div',{staticClass:\"settings-input-raw\"},[_c('label',{attrs:{\"for\":\"input-raw\"}},[_vm._v(\"输入数据：\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.rawInput),expression:\"rawInput\"}],attrs:{\"id\":\"input-raw\",\"rows\":\"10\"},domProps:{\"value\":(_vm.rawInput)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.rawInput=$event.target.value}}})]),_c('div',{staticClass:\"settings-input-parsed\"},[_c('label',{attrs:{\"for\":\"input-parsed\"}},[_vm._v(\"解析结果（只读）：\")]),_c('textarea',{attrs:{\"id\":\"input-parsed\",\"rows\":\"10\",\"readonly\":\"\"},domProps:{\"value\":_vm.parsedInput}})])])])],1)]):_vm._e()])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',{staticClass:\"pane-title\",on:{\"click\":_vm.click}},[_vm._v(\"\\n    \"+_vm._s(_vm.title)+\"\\n    \"),_c('v-icon',{staticClass:\"pane-arrow\",class:{ 'pane-arrow-expand': _vm.expand },attrs:{\"name\":\"angle-up\"}})],1),_c('div',{ref:\"paneContent\",staticClass:\"pane-content\",style:(_vm.animationHeight !== null ?\n               { height: _vm.animationHeight + 'px' } : {})},[_vm._t(\"default\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport 'vue-awesome/icons/angle-up';\nimport { Vue, Component, Prop } from 'vue-property-decorator';\n\n@Component\nexport default class CollapsiblePane extends Vue {\n  @Prop(String) public readonly title: string | undefined;\n  private expand = true;\n  private realHeight = 0;\n  private animationHeight: number|null = null;\n  public mounted() {\n    const content = this.$refs.paneContent as HTMLElement;\n    this.realHeight = content.offsetHeight;\n    content.addEventListener('transitionend', this.transitionEnd.bind(this));\n  }\n  public click() {\n    this.expand = !this.expand;\n    if (this.expand) {\n      this.animationHeight = 0;\n      setTimeout(() => {\n        this.animationHeight = this.realHeight;\n      });\n    } else {\n      const content = this.$refs.paneContent as HTMLElement;\n      this.realHeight = content.offsetHeight;\n      this.animationHeight = this.realHeight;\n      setTimeout(() => {\n        this.animationHeight = 0;\n      });\n    }\n  }\n  public transitionEnd() {\n    if (this.animationHeight !== 0) {\n      this.animationHeight = null;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CollapsiblePane.vue?vue&type=template&id=08120549&scoped=true&\"\nimport script from \"./CollapsiblePane.vue?vue&type=script&lang=ts&\"\nexport * from \"./CollapsiblePane.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08120549\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"graph-container\"},[_c('my-canvas',_vm._g({ref:\"mainCanvas\",attrs:{\"width\":_vm.width,\"height\":_vm.height,\"data\":_vm.mainCanvasData,\"enable-hit\":true},on:{\"mousedown\":_vm.mousedown,\"wheel\":_vm.wheel}},_vm.mouseDragActive ? { mouseup: _vm.mouseup, mousemove: _vm.mousemove } : {})),_c('div',{staticClass:\"thumbnail\",style:({\n    width: _vm.thumbnailWidth + 'px',\n    height: _vm.thumbnailHeight + 'px',\n  })},[_c('my-canvas',_vm._g({ref:\"thumbnailCanvas\",attrs:{\"width\":_vm.thumbnailWidth,\"height\":_vm.thumbnailHeight,\"data\":_vm.thumbnailCanvasData,\"enable-hit\":true},on:{\"mousedown\":_vm.thumbnailMousedown}},_vm.thumbnailMouseDragActive ? {\n                 mouseup: _vm.thumbnailMouseup,\n                 mousemove: _vm.thumbnailMousemove,\n               } : {}))],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class EventEmitter {\n  private readonly events: { [event: string]: Array<(...args: any[]) => any> } = {};\n\n  public addEventListener(event: string, listener: (...args: any[]) => any) {\n    if (this.events[event] === undefined) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  public removeEventListener(event: string, listener: (...args: any[]) => any) {\n    if (this.events[event] !== undefined) {\n      const index = this.events[event].indexOf(listener);\n      if (index > -1) {\n        this.events[event].splice(index, -1);\n      }\n    }\n  }\n\n  public emit(event: string, ...args: any[]) {\n    if (this.events[event] !== undefined) {\n      for (const listener of this.events[event]) {\n        listener.apply(this, args);\n      }\n    }\n  }\n}\n","import {Position} from '@/graph/base/dataInput';\n\nexport default class Positioned {\n  public parent: Positioned | null;\n  public fixed: boolean;\n  protected position: Position;\n  public constructor(parent: Positioned | null) {\n    this.parent = parent;\n    this.fixed = false;\n    this.position = { x: 0, y: 0 };\n  }\n  public setPosition(position: Position): void {\n    this.position = position;\n  }\n  public getPosition(): Position {\n    return this.position;\n  }\n  public getAbsolutePosition(parent: Positioned): Position {\n    let x = 0;\n    let y = 0;\n    let node: Positioned | null = this;\n    while (node !== parent) {\n      if (node === null) {\n        throw new Error('Incorrect parent parameter');\n      }\n      x += node.position.x;\n      y += node.position.y;\n      node = node.parent;\n    }\n    return {x, y};\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport {GraphLayoutData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport Edge from '@/graph/edge/Edge';\nimport Renderable from '@/graph/base/Renderable';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Node from '@/graph/node/Node';\n\nexport interface LayoutEdgeData {\n  from: Port;\n  to: Port;\n  fromBelonging: Node | Graph;\n  toBelonging: Node | Graph;\n  edge: Edge;\n}\n\nexport interface LayoutData {\n  ports: Array<Node | Graph>;\n  edges: LayoutEdgeData[];\n  children: Renderable[];\n}\n\nexport default abstract class GraphLayout extends Positioned {\n  protected readonly graph: Graph;\n  protected data: LayoutData;\n  protected constructor(graph: Graph, parent: Positioned | null) {\n    super(parent);\n    this.graph = graph;\n    this.data = {\n      ports: [],\n      edges: [],\n      children: [],\n    };\n  }\n  public solve(config: GraphLayoutData | undefined,\n               data: LayoutData,\n               index: number): void {\n    this.data = data;\n  }\n  public informAllEdgesFullyUpdatePosition() {\n    if (this.data) {\n      for (const edge of this.data.edges) {\n        edge.edge.fullyUpdatePosition();\n      }\n    }\n  }\n  public abstract render(): AnyShape;\n  public abstract getContentSize(): Size;\n}\n","import Graph from '@/graph/graph/Graph';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport {KamadaKawaiGraphLayoutData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport Positioned from '@/graph/base/Positioned';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface KamadaKawaiGraphLayoutConfig {\n  springLength: number;\n  springConstant: number;\n}\n\nexport default class KamadaKawaiGraphLayout extends GraphLayout {\n  private static defaultConfig: KamadaKawaiGraphLayoutConfig = {\n    springLength: 150,\n    springConstant: 0.05,\n  };\n  private contentSize: Size;\n  constructor(graph: Graph, parent: Positioned | null) {\n    super(graph, parent);\n    this.contentSize = { width: 0, height: 0 };\n  }\n  public solve(config: KamadaKawaiGraphLayoutData | undefined,\n               data: LayoutData,\n               index: number) {\n    super.solve(config, data, index);\n    const newConfig: KamadaKawaiGraphLayoutConfig = Object.assign({},\n      KamadaKawaiGraphLayout.defaultConfig, config);\n    const portToIndex: Map<Port, number> = new Map();\n    for (let i = 0; i < data.ports.length; ++i) {\n      portToIndex.set(data.ports[i], i);\n    }\n    // Initial random placement\n    for (const port of data.ports) {\n      if (!port.initialPlaced) {\n        port.setPosition({\n          x: newConfig.springLength * ( Math.random() - 0.5),\n          y: newConfig.springLength * ( Math.random() - 0.5),\n        });\n        port.initialPlaced = true;\n      }\n    }\n      // Compute distance matrix by Floyd Warshall\n    const distanceMatrix: number[][] = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      distanceMatrix.push(Array(data.ports.length).fill(Infinity));\n      distanceMatrix[distanceMatrix.length - 1][i] = 0;\n    }\n    for (const {fromBelonging, toBelonging} of data.edges) {\n      const fromIndex = portToIndex.get(fromBelonging)!;\n      const toIndex = portToIndex.get(toBelonging)!;\n      distanceMatrix[fromIndex][toIndex] = 1;\n      distanceMatrix[toIndex][fromIndex] = 1;\n    }\n    for (let k = 0; k < data.ports.length; ++k) {\n      for (let i = 0; i < data.ports.length; ++i) {\n        for (let j = 0; j < data.ports.length; ++j) {\n          const dist = distanceMatrix[i][k] + distanceMatrix[k][j];\n          if (distanceMatrix[i][j] > dist) {\n            distanceMatrix[i][j] = dist;\n          }\n        }\n      }\n    }\n    // Place ports using Kamada Kawai\n    // Compute length matrix\n    const lengthMatrix = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const length = [];\n      for (let j = 0; j < data.ports.length; ++j) {\n        length.push(newConfig.springLength * distanceMatrix[i][j]);\n      }\n      lengthMatrix.push(length);\n    }\n    // Compute k matrix\n    const kMatrix = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const k = [];\n      for (let j = 0; j < data.ports.length; ++j) {\n        k.push(newConfig.springConstant *\n          Math.pow(distanceMatrix[i][j], -2));\n      }\n      kMatrix.push(k);\n    }\n    // Compute energy matrix\n    const energyMatrix = [];\n    for (const port of data.ports) {\n      energyMatrix.push(Array(data.ports.length));\n    }\n    for (let m = 0; m < data.ports.length; ++m) {\n      const mPos = data.ports[m].getPosition();\n      energyMatrix[m][m] = [0, 0];\n      for (let i = m + 1; i < data.ports.length; ++i) {\n        const iPos = data.ports[i].getPosition();\n        const denominator = 1.0 / Math.sqrt(\n          Math.pow(mPos.x - iPos.x, 2) + Math.pow(mPos.y - iPos.y, 2));\n        energyMatrix[m][i] = [\n          kMatrix[m][i] * (mPos.x - iPos.x) *\n            (1 - lengthMatrix[m][i] * denominator),\n          kMatrix[m][i] * (mPos.y - iPos.y) *\n            (1 - lengthMatrix[m][i] * denominator),\n        ];\n        energyMatrix[i][m] = [\n          -energyMatrix[m][i][0],\n          -energyMatrix[m][i][1],\n        ];\n      }\n    }\n    const energySum = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const sum = [0, 0];\n      for (let j = 0; j < data.ports.length; ++j) {\n        sum[0] += energyMatrix[i][j][0];\n        sum[1] += energyMatrix[i][j][1];\n      }\n      energySum.push(sum);\n    }\n    // Compute position\n    const threshold = 0.01;\n    const maxIterations = Math.max(1000,\n      Math.min(10 * data.ports.length, 6000));\n    const maxInnerIterations = 5;\n    let iterations = 0;\n    let maxEnergy;\n    while (iterations < maxIterations) {\n      iterations += 1;\n      // Get port with highest energy\n      let m = 0;\n      let deDx = 0;\n      let deDy = 0;\n      maxEnergy = -1;\n      for (let i = 0; i < data.ports.length; ++i) {\n        const e = Math.sqrt(Math.pow(energySum[i][0], 2) +\n          Math.pow(energySum[i][1], 2));\n        if (e > maxEnergy) {\n          m = i;\n          deDx = energySum[i][0];\n          deDy = energySum[i][1];\n          maxEnergy = e;\n        }\n      }\n      if (maxEnergy <= threshold) {\n        break;\n      }\n      const mPos = data.ports[m].getPosition();\n      let delta = maxEnergy;\n      let subIterations = 0;\n      while (delta > threshold && subIterations < maxInnerIterations) {\n        subIterations += 1;\n        // Move port\n        let d2eDx2 = 0;\n        let d2eDxDy = 0;\n        let d2eDy2 = 0;\n        for (let i = 0; i < data.ports.length; ++i) {\n          if (i !== m) {\n            const iPos = data.ports[i].getPosition();\n            const factor = 1.0 / Math.pow(Math.pow(mPos.x - iPos.x, 2) +\n              Math.pow(mPos.y - iPos.y, 2), 1.5);\n            const k = kMatrix[m][i];\n            const l = lengthMatrix[m][i];\n            d2eDx2 += k * (1 - l * Math.pow(mPos.y - iPos.y, 2) * factor);\n            d2eDxDy += k * l * (mPos.x - iPos.x) * (mPos.y - iPos.y) *\n              factor;\n            d2eDy2 += k * (1 - l * Math.pow(mPos.x - iPos.x, 2) * factor);\n          }\n        }\n        // Solve equation using Cramer's rule\n        const denominator = d2eDx2 * d2eDy2 - Math.pow(d2eDxDy, 2);\n        const dx = (d2eDxDy * deDy - d2eDy2 * deDx) / denominator;\n        const dy = (d2eDxDy * deDx - d2eDx2 * deDy) / denominator;\n        mPos.x += dx;\n        mPos.y += dy;\n        // Recalculate energy matrix\n        let sumX = 0;\n        let sumY = 0;\n        for (let i = 0; i < data.ports.length; ++i) {\n          if (i !== m) {\n            const [oldDx, oldDy] = energyMatrix[m][i];\n            const iPos = data.ports[i].getPosition();\n            const factor = 1.0 / Math.sqrt(\n              Math.pow(mPos.x - iPos.x, 2) + Math.pow(mPos.y - iPos.y, 2));\n            const deltaX = kMatrix[m][i] * (mPos.x - iPos.x) *\n              (1 - lengthMatrix[m][i] * factor);\n            const deltaY = kMatrix[m][i] * (mPos.y - iPos.y) *\n              (1 - lengthMatrix[m][i] * factor);\n            energyMatrix[m][i] = [deltaX, deltaY];\n            energyMatrix[i][m] = [-deltaX, -deltaY];\n            energySum[i][0] += oldDx - deltaX;\n            energySum[i][1] += oldDy - deltaY;\n            sumX += deltaX;\n            sumY += deltaY;\n          }\n        }\n        energySum[m] = [sumX, sumY];\n        // Update\n        delta = Math.sqrt(Math.pow(energySum[m][0], 2) +\n          Math.pow(energySum[m][1], 2));\n        deDx = energySum[m][0];\n        deDy = energySum[m][1];\n      } // for kamada kawai inner iteration\n    } // for kamada kawai outer iteration\n    // Save results for further evaluation\n    // Calculate component size and position\n    const upperLeft = [Infinity, Infinity];\n    const lowerRight = [-Infinity, -Infinity];\n    for (const port of data.ports) {\n      const pos = port.getPosition();\n      const size = port.getBoundingBoxSize();\n      const halfWidth = size.width / 2;\n      const halfHeight = size.height / 2;\n      if (pos.x - halfWidth < upperLeft[0]) {\n        upperLeft[0] = pos.x - halfWidth;\n      }\n      if (pos.x + halfWidth > lowerRight[0]) {\n        lowerRight[0] = pos.x + halfWidth;\n      }\n      if (pos.y - halfHeight < upperLeft[1]) {\n        upperLeft[1] = pos.y - halfHeight;\n      }\n      if (pos.y + halfHeight > lowerRight[1]) {\n        lowerRight[1] = pos.y + halfHeight;\n      }\n    }\n    const position = {\n      x: (upperLeft[0] + lowerRight[0]) / 2,\n      y: (upperLeft[1] + lowerRight[1]) / 2,\n    };\n    this.contentSize = {\n      width: lowerRight[0] - upperLeft[0],\n      height: lowerRight[1] - upperLeft[1],\n    };\n    // Move ports to center\n    for (const port of data.ports) {\n      port.getPosition().x -= position.x;\n      port.getPosition().y -= position.y;\n    }\n    this.informAllEdgesFullyUpdatePosition();\n  } // solve method\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: this.data.children.map((x) => x.render()),\n    };\n  }\n  public getContentSize() {\n    return this.contentSize;\n  }\n}\n","import KamadaKawaiGraphLayout from './KamadaKawaiGraphLayout';\nimport {GraphLayoutData} from '@/graph/base/dataInput';\nimport GraphLayout from '@/graph/graph/layout/GraphLayout';\nimport Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\n\nexport default function layoutFactory(data: GraphLayoutData | undefined)\n    : new (graph: Graph, parent: Positioned | null) => GraphLayout {\n  switch (data && data.type) {\n    default:\n      return KamadaKawaiGraphLayout;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport {ComponentLayoutData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class ComponentLayout extends Positioned {\n  protected readonly graph: Graph;\n  protected constructor(graph: Graph, parent: Positioned | null) {\n    super(parent);\n    this.graph = graph;\n  }\n  public abstract updateData(config: ComponentLayoutData | undefined): void;\n  public abstract render(): AnyShape;\n  public abstract getContentSize(): Size | undefined;\n}\n","import ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport Graph from '@/graph/graph/Graph';\nimport {LinearComponentLayoutData, Size} from '@/graph/base/dataInput';\nimport Positioned from '@/graph/base/Positioned';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface LinearComponentLayoutConfig {\n  direction: 'TD' | 'DT' | 'LR' | 'RL';\n  spaceBetween: number;\n}\n\nexport default class LinearComponentLayout extends ComponentLayout {\n  private static defaultConfig = {\n    direction: 'TD',\n    spaceBetween: 12,\n  };\n  private contentSize: Size;\n  constructor(graph: Graph, parent: Positioned | null) {\n    super(graph, parent);\n    this.contentSize = { width: 0, height: 0 };\n  }\n  public updateData(config: LinearComponentLayoutData | undefined) {\n    const newConfig: LinearComponentLayoutConfig = Object.assign({},\n      LinearComponentLayout.defaultConfig, config);\n    const components = this.graph.layouts;\n    const componentsSize = components.map((x) => x.getContentSize()!);\n    if (newConfig.direction === 'LR' || newConfig.direction === 'RL') {\n      this.contentSize = {\n        width: componentsSize.map((x) => x.width).reduce((a, b) => a + b, 0) +\n          Math.max(components.length - 1, 0) * newConfig.spaceBetween,\n        height: Math.max(...componentsSize.map((x) => x.height), 0),\n      };\n      let begin = newConfig.direction === 'LR' ?\n        -this.contentSize.width / 2 : this.contentSize.width / 2;\n      for (let i = 0; i < components.length; ++i) {\n        const deltaX = (newConfig.direction === 'LR' ?\n          componentsSize[i].width / 2 : -componentsSize[i].width / 2) +\n          begin;\n        components[i].setPosition({ x: deltaX, y: 0 });\n        if (newConfig.direction === 'LR') {\n          begin += componentsSize[i].width + newConfig.spaceBetween;\n        } else {\n          begin -= componentsSize[i].width + newConfig.spaceBetween;\n        }\n      }\n    } else {\n      this.contentSize = {\n        width: Math.max(...componentsSize.map((x) => x.width), 0),\n        height: componentsSize.map((x) => x.height).reduce((a, b) => a + b, 0) +\n          Math.max(components.length - 1, 0) * newConfig.spaceBetween,\n      };\n      let begin = newConfig.direction === 'DT' ?\n        this.contentSize.height / 2 : -this.contentSize.height / 2;\n      for (let i = 0; i < components.length; ++i) {\n        const deltaY = (newConfig.direction === 'DT' ?\n          -componentsSize[i].height / 2 : componentsSize[i].height / 2) +\n          begin;\n        components[i].setPosition({ x: 0, y: deltaY });\n        if (newConfig.direction === 'DT') {\n          begin -= componentsSize[i].height + newConfig.spaceBetween;\n        } else {\n          begin += componentsSize[i].height + newConfig.spaceBetween;\n        }\n      }\n    } // position calculation\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: this.graph.layouts.map((x) => x.render()),\n    };\n  }\n  public getContentSize() {\n    return this.contentSize;\n  }\n}\n","import {ComponentLayoutData} from '@/graph/base/dataInput';\nimport Graph from '@/graph/graph/Graph';\nimport ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport LinearComponentLayout from '@/graph/graph/component/LinearComponentLayout';\nimport Positioned from '@/graph/base/Positioned';\n\nexport default function componentFactory(data: ComponentLayoutData | undefined)\n  : new (graph: Graph, parent: Positioned | null) => ComponentLayout {\n  switch (data && data.type) {\n    default:\n      return LinearComponentLayout;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport {GraphData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class GraphType {\n  protected parent: Graph;\n  protected constructor(parent: Graph) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: GraphData): void;\n  public abstract render(): AnyShape[];\n  public abstract getBoundingBoxSize(): Size;\n  public abstract distanceToBorder(angle: number): number;\n}\n","import GraphType from '@/graph/graph/type/GraphType';\nimport Graph from '@/graph/graph/Graph';\nimport {BoxGraphData, GraphData, Position, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface BoxGraphConfig {\n  label: string | null;\n  labelPosition: 'top' | 'right' | 'bottom' | 'left';\n  style: 'solid' | 'filled' | 'none';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n  spaceBetween: number;\n}\n\nexport default class BoxGraphType extends GraphType {\n  public static defaultConfig = {\n    label: null,\n    labelPosition: 'top', // or 'right', 'bottom', 'left'\n    style: 'none',  // or 'filled'\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 0,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 6,\n    align: 'center',\n    spaceBetween: 12,\n  };\n  private config!: BoxGraphConfig;\n  private textSize!: Size;\n  private contentSize!: Size;\n  private textPosition!: Position;\n  private borderSize!: Size;\n  constructor(parent: Graph, data: GraphData) {\n    if (data.shape !== 'box') {\n      throw new Error('Expect box shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: BoxGraphData) {\n    const newConfig = Object.assign({}, BoxGraphType.defaultConfig, data);\n    delete newConfig.layout;\n    delete newConfig.children;\n    const textSizeNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    if (textSizeNeedsUpdate) {\n      const ctx = this.parent.root.ctx;\n      ctx.font = `${newConfig.fontSize}px ${newConfig.fontFamily}`;\n      const lines = newConfig.label ? (newConfig.label as string)\n        .split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * newConfig.fontSize * newConfig.lineHeight,\n      };\n    }\n    const layoutContentSize = this.parent.componentLayout.getContentSize()!;\n    this.contentSize = {\n      width: layoutContentSize.width + 2 * newConfig.padding,\n      height: layoutContentSize.height + 2 * newConfig.padding,\n    };\n    this.parent.componentLayout.setPosition({ x: 0, y: 0 });\n    this.textPosition = { x: 0, y: 0 };\n    if (newConfig.label) {\n      if (newConfig.labelPosition === 'left' ||\n          newConfig.labelPosition === 'right') {\n        this.contentSize.width += this.textSize.width + newConfig.spaceBetween;\n        if (this.textSize.height > layoutContentSize.height) {\n          this.contentSize.height = this.textSize.height +\n            2 * newConfig.padding;\n        }\n        if (newConfig.labelPosition === 'left') {\n          this.parent.componentLayout.getPosition().x = (this.textSize.width +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.x = -(layoutContentSize.width +\n            newConfig.spaceBetween) / 2;\n        } else {\n          this.parent.componentLayout.getPosition().x = -(this.textSize.width +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.x = (layoutContentSize.width +\n            newConfig.spaceBetween) / 2;\n        }\n      } else {\n        this.contentSize.height += this.textSize.height +\n          newConfig.spaceBetween;\n        if (this.textSize.width > layoutContentSize.width) {\n          this.contentSize.width = this.textSize.width + 2 * newConfig.padding;\n        }\n        if (newConfig.labelPosition === 'bottom') {\n          this.parent.componentLayout.getPosition().y = -(this.textSize.height +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.y = (layoutContentSize.height +\n            newConfig.spaceBetween) / 2;\n        } else {\n          this.parent.componentLayout.getPosition().y = (this.textSize.height +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.y = -(layoutContentSize.height +\n            newConfig.spaceBetween) / 2;\n        }\n      }\n    }\n    this.borderSize = {\n      width: this.contentSize.width + newConfig.strokeWidth,\n      height: this.contentSize.height + newConfig.strokeWidth,\n    };\n    this.config = newConfig;\n  }\n  public render(): AnyShape[] {\n    const rendered: AnyShape[] = [];\n    if (this.config.style && this.config.style !== 'none') {\n      const rect: AnyShape = {\n        is: 'rect',\n        x: -this.contentSize.width / 2,\n        y: -this.contentSize.height / 2,\n        width: this.contentSize.width,\n        height: this.contentSize.height,\n        fill: this.config.style === 'filled' ?\n          this.config.fillColor : undefined,\n        stroke: this.config.strokeWidth > 0 ?\n          this.config.strokeColor : undefined,\n        strokeWidth: this.config.strokeWidth,\n      };\n      rendered.push(rect);\n    }\n    if (this.config.label) {\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.textSize.width / 2,\n        y: this.textPosition.y - this.textSize.height / 2,\n        text: this.config.label,\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        lineHeight: this.config.lineHeight,\n        align: this.config.align,\n      };\n      rendered.push(text);\n    }\n    rendered.push(this.parent.componentLayout.render());\n    return rendered;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import BoxGraphType from '@/graph/graph/type/BoxGraphType';\nimport GraphType from '@/graph/graph/type/GraphType';\nimport Graph from '@/graph/graph/Graph';\nimport {GraphData} from '@/graph/base/dataInput';\n\n// noinspection JSUnusedLocalSymbols\nexport default function graphTypeFactory(data: GraphData)\n    : new (parent: Graph, data: GraphData) => GraphType {\n  data.shape = 'box';\n  return BoxGraphType;\n}\n","import Positioned from '@/graph/base/Positioned';\nimport {Size} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\n\nexport default abstract class Port extends Positioned {\n  public readonly root: Root;\n  public initialPlaced: boolean; // for graph layout\n  public id: string;\n  protected constructor(root: Root, parent: Positioned | null = null) {\n    super(parent);\n    this.root = root;\n    this.initialPlaced = false;\n    this.id = '';\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    return null;\n  }\n  public abstract getBoundingBoxSize(): Size;\n  public abstract distanceToBorder(angle: number): number;\n}\n","import Graph from '@/graph/graph/Graph';\nimport {GraphPhysicsData} from '@/graph/base/dataInput';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\n\nexport default abstract class GraphPhysics {\n  protected readonly graph: Graph;\n  protected readonly layout: GraphLayout;\n  public constructor(graph: Graph, layout: GraphLayout) {\n    this.graph = graph;\n    this.layout = layout;\n  }\n  public abstract solve(config: GraphPhysicsData | undefined,\n                        data: LayoutData): void;\n  public abstract step(): boolean;\n}\n","import GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport {BarnesHutGraphPhysicsData, Position, Vector} from '@/graph/base/dataInput';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface BarnesHutGraphPhysicsConfig {\n  theta: number;\n  gravitationalConstant: number;\n  centralGravity: number;\n  springLength: number;\n  springConstant: number;\n  damping: number;\n  maxVelocity: number;\n}\n\ninterface BarnesHutTree {\n  centerOfMass: Position;\n  mass: number;\n  range: {\n    minX: number;\n    maxX: number;\n    minY: number;\n    maxY: number;\n  };\n  children?: {\n    NW: BarnesHutTree;\n    NE: BarnesHutTree;\n    SW: BarnesHutTree;\n    SE: BarnesHutTree;\n  };\n  data?: Positioned;\n  size: number;\n}\n\nexport default class BarnesHutGraphPhysics extends GraphPhysics {\n  private static defaultConfig: BarnesHutGraphPhysicsConfig = {\n    theta: 0,\n    gravitationalConstant: -2000,\n    centralGravity: 0.05,\n    springLength: 150,\n    springConstant: 0.04,\n    damping: 0.09,\n    maxVelocity: 50,\n  };\n  private static splitBranch(branch: BarnesHutTree) {\n    if (branch.children) {\n      throw new Error('Cannot split branch on an already split branch');\n    }\n    const containedNode: Positioned | undefined = branch.data;\n    if (containedNode) {\n      branch.mass = 0;\n      branch.centerOfMass.x = 0;\n      branch.centerOfMass.y = 0;\n    }\n    delete branch.data;\n    const childSize = 0.5 * branch.size;\n    branch.children = {\n      NW: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX, maxX: branch.range.minX + childSize,\n          minY: branch.range.minY, maxY: branch.range.minY + childSize,\n        },\n        size: childSize,\n      },\n      NE: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX + childSize, maxX: branch.range.maxX,\n          minY: branch.range.minY, maxY: branch.range.minY + childSize,\n        },\n        size: childSize,\n      },\n      SW: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX, maxX: branch.range.minX + childSize,\n          minY: branch.range.minY + childSize, maxY: branch.range.maxY,\n        },\n        size: childSize,\n      },\n      SE: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX + childSize, maxX: branch.range.maxX,\n          minY: branch.range.minY + childSize, maxY: branch.range.maxY,\n        },\n        size: childSize,\n      },\n    };\n    if (containedNode) {\n      this.placeInTree(branch, containedNode);\n    }\n  }\n  private static placeInTree(branch: BarnesHutTree,\n                             node: Positioned): void {\n    if (!branch.children) {\n      throw new Error('Place in tree can be only called on a split branch');\n    }\n    this.updateBranchMass(branch, node);\n    const range = branch.children.NW.range;\n    const pos = node.getPosition();\n    let region: 'NW' | 'SW' | 'NE' | 'SE';\n    if (range.maxX > pos.x) {\n      if (range.maxY > pos.y) {\n        region = 'NW';\n      } else {\n        region = 'SW';\n      }\n    } else {\n      if (range.maxY > pos.y) {\n        region = 'NE';\n      } else {\n        region = 'SE';\n      }\n    }\n    const child = branch.children[region];\n    if (child.children) {\n      this.placeInTree(child, node);\n    } else if (child.data) {\n      // ignore overlapping node\n      if (child.data.getPosition().x === pos.x &&\n          child.data.getPosition().y === pos.y ) {\n        pos.x += Math.random() - 0.5;\n        pos.y += Math.random() - 0.5;\n      } else {\n        this.splitBranch(child);\n        this.placeInTree(child, node);\n      }\n    } else {\n      child.data = node;\n      this.updateBranchMass(child, node);\n    }\n  }\n  private static updateBranchMass(branch: BarnesHutTree,\n                                  node: Positioned) {\n    const nodeMass = 1;\n    const totalMass = branch.mass + nodeMass;\n    branch.centerOfMass.x = (branch.centerOfMass.x * branch.mass +\n      node.getPosition().x * nodeMass) / totalMass;\n    branch.centerOfMass.y = (branch.centerOfMass.y * branch.mass +\n      node.getPosition().y * nodeMass) / totalMass;\n    branch.mass = totalMass;\n  }\n  private config: BarnesHutGraphPhysicsConfig;\n  private layoutData: LayoutData;\n  private nodeToIndex: Map<Positioned, number>;\n  private nodes: Positioned[];\n  private forces: Vector[];\n  private velocities: Vector[];\n  public constructor(graph: Graph, layout: GraphLayout) {\n    super(graph, layout);\n    this.config = BarnesHutGraphPhysics.defaultConfig;\n    this.layoutData = {\n      ports: [],\n      edges: [],\n      children: [],\n    };\n    this.nodeToIndex = new Map();\n    this.nodes = [];\n    this.forces = [];\n    this.velocities = [];\n  }\n  public solve(config: BarnesHutGraphPhysicsData | undefined,\n               data: LayoutData) {\n    this.config = Object.assign({},\n      BarnesHutGraphPhysics.defaultConfig, config);\n    this.layoutData = data;\n    this.nodeToIndex = new Map();\n    this.nodes = [];\n    // Create Index\n    let i = 0;\n    for (; i < this.layoutData.ports.length; ++i) {\n      this.nodeToIndex.set(this.layoutData.ports[i], i);\n      this.nodes.push(this.layoutData.ports[i]);\n    }\n    for (const edge of this.layoutData.edges) {\n      const controlPoints = edge.edge.getControlPoints();\n      for (const point of controlPoints) {\n        this.nodeToIndex.set(point, i);\n        this.nodes.push(point);\n        ++i;\n      }\n    }\n    this.forces = [];\n    this.velocities = [];\n    for (i = 0; i < this.nodeToIndex.size; ++i) {\n      this.forces.push({ x: 0, y: 0 });\n      this.velocities.push({ x: 0, y: 0 });\n    }\n  }\n  public formBarnesHutTree(): BarnesHutTree {\n    if (this.nodes.length < 1) {\n      throw new Error('Expect at least one node to form Barnes Hut tree');\n    }\n    let minX = this.nodes[0].getPosition().x;\n    let maxX = this.nodes[0].getPosition().x;\n    let minY = this.nodes[0].getPosition().y;\n    let maxY = this.nodes[0].getPosition().y;\n    for (let i = 1; i < this.nodes.length; ++i) {\n      const positioned = this.nodes[i];\n      const pos = positioned.getPosition();\n      if (pos.x < minX) {\n        minX = pos.x;\n      }\n      if (pos.x > maxX) {\n        maxX = pos.x;\n      }\n      if (pos.y < minY) {\n        minY = pos.y;\n      }\n      if (pos.y > maxY)  {\n        maxY = pos.y;\n      }\n    }\n    const sizeDiff = Math.abs(maxX - minX) - Math.abs(maxY - minY);\n    if (sizeDiff > 0) {\n      minY -= 0.5 * sizeDiff;\n      maxY += 0.5 * sizeDiff;\n    } else {\n      minX += 0.5 * sizeDiff;\n      maxX -= 0.5 * sizeDiff;\n    }\n    const rootSize = Math.abs(maxX - minX);\n    const halfRootSize = 0.5 * rootSize;\n    const centerX = 0.5 * (minX + maxX);\n    const centerY = 0.5 * (minY + maxY);\n    const tree: BarnesHutTree = {\n      centerOfMass: { x: 0, y: 0},\n      mass: 0,\n      range: {\n        minX: centerX - halfRootSize, maxX: centerX + halfRootSize,\n        minY: centerY - halfRootSize, maxY: centerY + halfRootSize,\n      },\n      size: rootSize,\n    };\n    BarnesHutGraphPhysics.splitBranch(tree);\n    for (const node of this.nodes) {\n      BarnesHutGraphPhysics.placeInTree(tree, node);\n    }\n    return tree;\n  }\n  public step(): boolean {\n    for (const force of this.forces) {\n      force.x = 0;\n      force.y = 0;\n    }\n    const that = this;\n    // Calculate central gravity\n    for (let i = 0; i < this.nodes.length; ++i) {\n      const node = this.nodes[i];\n      const dx = -node.getPosition().x;\n      const dy = -node.getPosition().y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      const gravityForce = (distance === 0) ? 0 :\n        (this.config.centralGravity / distance);\n      this.forces[i].x = dx * gravityForce;\n      this.forces[i].y = dy * gravityForce;\n    }\n    // Calculate node repulsive force\n    if (this.nodes.length) {\n      function calculateForces(dx: number, dy: number,\n                               node: Positioned,\n                               branch: BarnesHutTree) {\n        if (dx === 0 && dy === 0) {\n          dx = 0.1;\n        }\n        const nodeMass = 1;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const gravityForce = that.config.gravitationalConstant * branch.mass *\n          nodeMass / Math.pow(distance, 3);\n        const force = that.forces[that.nodeToIndex.get(node)!];\n        force.x += dx * gravityForce;\n        force.y += dy * gravityForce;\n      }\n      function getForceContributions(branch: BarnesHutTree, node: Positioned) {\n        if (!branch.children) {\n          throw new Error('Get force contributions ' +\n            'can be only called on a split branch');\n        }\n        getForceContribution(branch.children.NW, node);\n        getForceContribution(branch.children.NE, node);\n        getForceContribution(branch.children.SW, node);\n        getForceContribution(branch.children.SE, node);\n      }\n      function getForceContribution(branch: BarnesHutTree, node: Positioned) {\n        if (!branch.children && !branch.data) {\n          return;\n        }\n        const dx = branch.centerOfMass.x - node.getPosition().x;\n        const dy = branch.centerOfMass.y - node.getPosition().y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (branch.size / distance < that.config.theta) {\n          calculateForces(dx, dy, node, branch);\n        } else if (branch.children) {\n          getForceContributions(branch, node);\n        } else if (branch.data !== node) {\n          calculateForces(dx, dy, node, branch);\n        }\n      }\n      const tree = this.formBarnesHutTree();\n      for (const node of this.nodes) {\n        getForceContributions(tree, node);\n      }\n      // Naive method\n      // for (let i = 0; i < this.nodes.length - 1; ++i) {\n      //   const node1 = this.nodes[i];\n      //   const pos1 = node1.getPosition();\n      //   for (let j = i + 1; j < this.nodes.length; ++j) {\n      //     const node2 = this.nodes[j];\n      //     const pos2 = node2.getPosition();\n      //     const dx = pos1.x - pos2.x;\n      //     const dy = pos1.y - pos2.y;\n      //     const distance = Math.sqrt(dx * dx + dy * dy);\n      //     const gravityForce = -2000 / Math.pow(distance + 1e-3, 3);\n      //     this.forces[i].x -= dx * gravityForce;\n      //     this.forces[i].y -= dy * gravityForce;\n      //     this.forces[j].x += dx * gravityForce;\n      //     this.forces[j].y += dy * gravityForce;\n      //   }\n      // }\n    }\n    // Calculate spring force\n    for (const edge of this.layoutData.edges) {\n      if (edge.fromBelonging !== edge.toBelonging) {\n        const items = [\n          edge.fromBelonging,\n          ...edge.edge.getControlPoints(),\n          edge.toBelonging,\n        ];\n        for (let i = 0; i < items.length - 1; ++i) {\n          const item1 = items[i];\n          const item2 = items[i + 1];\n          const edgeLength = this.config.springLength / (items.length - 1);\n          const dx = item1.getPosition().x - item2.getPosition().x;\n          const dy = item1.getPosition().y - item2.getPosition().y;\n          const distance = Math.max(Math.sqrt(dx * dx + dy * dy), 0.01);\n          const springForce = this.config.springConstant *\n            (edgeLength - distance) / distance;\n          const fx = dx * springForce;\n          const fy = dy * springForce;\n          this.forces[this.nodeToIndex.get(item1)!].x += fx;\n          this.forces[this.nodeToIndex.get(item1)!].y += fy;\n          this.forces[this.nodeToIndex.get(item2)!].x -= fx;\n          this.forces[this.nodeToIndex.get(item2)!].y -= fy;\n        }\n      }\n    }\n    // Move nodes\n    function calculateVelocity(velocity: number,\n                               force: number,\n                               mass: number): number {\n      const df = that.config.damping * velocity;\n      const a = (force - df) / mass;\n      velocity += a; // * time;\n      if (Math.abs(velocity) > that.config.maxVelocity) {\n        velocity = velocity > 0 ? that.config.maxVelocity :\n          -that.config.maxVelocity;\n      }\n      return velocity;\n    }\n    for (let i = 0; i < this.nodes.length; ++i) {\n      const item = this.nodes[i];\n      const pos = item.getPosition();\n      const force = this.forces[i];\n      const velocity = this.velocities[i];\n      if (item.fixed) {\n        velocity.x = 0;\n        velocity.y = 0;\n      } else {\n        velocity.x = calculateVelocity(velocity.x, force.x, 1);\n        velocity.y = calculateVelocity(velocity.y, force.y, 1);\n      }\n      item.setPosition({\n        x: pos.x + velocity.x, // * time\n        y: pos.y + velocity.y, // * time\n      });\n    }\n    for (const edge of this.layoutData.edges) {\n      edge.edge.updatePosition();\n    }\n    return true;\n  }\n}\n","import {GraphPhysicsData} from '@/graph/base/dataInput';\nimport Graph from '@/graph/graph/Graph';\nimport GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport BarnesHutGraphPhysics from '@/graph/graph/physics/BarnesHutGraphPhysics';\nimport GraphLayout from '@/graph/graph/layout/GraphLayout';\n\nexport default function physicsFactory(data: GraphPhysicsData | undefined)\n    : new (graph: Graph, layout: GraphLayout) => GraphPhysics {\n  switch (data && data.type) {\n    default:\n      return BarnesHutGraphPhysics;\n  }\n}\n","import {GraphData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport renderableFactory from '@/graph/base/renderableFactory';\nimport Edge from '@/graph/edge/Edge';\nimport layoutFactory from '@/graph/graph/layout/graphLayoutFactory';\nimport componentFactory from '@/graph/graph/component/componentLayoutFactory';\nimport graphTypeFactory from '@/graph/graph/type/graphTypeFactory';\nimport Port from '@/graph/base/Port';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\nimport GraphLayout, {LayoutData, LayoutEdgeData} from '@/graph/graph/layout/GraphLayout';\nimport ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport GraphType from '@/graph/graph/type/GraphType';\nimport GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport physicsFactory from '@/graph/graph/physics/graphPhysicsFactory';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Node from '@/graph/node/Node';\n\nexport default class Graph extends Port implements Renderable {\n  public static getId(data: GraphData) {\n    if (!data.id) {\n      throw new Error('Missing id field for graph');\n    }\n    return data.id;\n  }\n  public readonly graph: Graph | null;\n  public fullId!: string;\n  public depth!: number;\n  public fromEdges!: Set<Edge>;\n  public toEdges!: Set<Edge>;\n  public children!: Map<string, Renderable>;\n  public ports!: Map<string, Node | Graph>;\n  public edges!: Map<string, Edge>;\n  public subgraphs!: Map<string, Graph>;\n  public layouts!: GraphLayout[];\n  public physics!: GraphPhysics[];\n  public layoutsData!: LayoutData[];\n  public componentLayout!: ComponentLayout;\n  private graphType!: GraphType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'graph') {\n      throw new Error('Expect node type');\n    }\n    super(root, parent);\n    this.graph = graph;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: GraphData, parentData: ParentData | null) {\n    this.id = Graph.getId(data);\n    const newChildren = new Map();\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    this.fromEdges = new Set();\n    this.toEdges = new Set();\n    const oldChildren = this.children;\n    this.children = new Map();\n    this.edges = new Map();\n    this.ports = new Map();\n    this.subgraphs = new Map();\n    if (data.children) {\n      for (const child of data.children) {\n        const type = renderableFactory(child);\n        const id = type.getId(child);\n        if (this.children.has(id)) {\n          throw new Error('Duplicated id');\n        }\n        let newChild: Renderable;\n        if (oldChildren && oldChildren.has(id) &&\n            oldChildren.get(id)!.constructor === type) {\n          newChild = oldChildren.get(id)!;\n          newChild.updateData(child, {\n            parentId: this.fullId,\n            depth: this.depth,\n          });\n        } else {\n          newChild = new type(this.root, this, null, child, {\n            parentId: this.fullId,\n            depth: this.depth,\n          });\n        }\n        this.children.set(id, newChild);\n        if (newChild instanceof Edge) {\n          this.edges.set(id, newChild);\n        } else {\n          this.ports.set(id, newChild as any);\n          if (newChild instanceof Graph) {\n            this.subgraphs.set(id, newChild);\n          }\n        }\n      }\n    }\n    // Create adjacency list\n    const adjacencyList: Map<Node | Graph, Array<Node | Graph>> = new Map();\n    const edgesData: LayoutEdgeData[] = [];\n    for (const edge of this.edges.values()) {\n      const from = this.findPort(edge.from.split(':'));\n      const to = this.findPort(edge.to.split(':'));\n      const fromBelonging = this.findBelongingPort(edge.from);\n      const toBelonging = this.findBelongingPort(edge.to);\n      if (from && to && fromBelonging && toBelonging) {\n        if (!adjacencyList.has(fromBelonging)) {\n          adjacencyList.set(fromBelonging, []);\n        }\n        if (!adjacencyList.has(toBelonging)) {\n          adjacencyList.set(toBelonging, []);\n        }\n        adjacencyList.get(fromBelonging)!.push(toBelonging);\n        adjacencyList.get(toBelonging)!.push(fromBelonging);\n        edgesData.push({ from, to, fromBelonging, toBelonging, edge });\n      } else {\n        throw new Error('Cannot find starting or ending port of edge');\n      }\n    }\n    // Compute connected components by DFS\n    const unvisited: Set<Node | Graph> = new Set(this.ports.values());\n    this.layoutsData = [];\n    const calculateConnectedComponent = (from: Node | Graph) => {\n      unvisited.delete(from);\n      const component = this.layoutsData[this.layoutsData.length - 1];\n      component.ports.push(from);\n      const adjacency = adjacencyList.get(from);\n      if (adjacency) {\n        for (const to of adjacency) {\n          if (unvisited.has(to)) {\n            calculateConnectedComponent(to);\n          }\n        }\n      }\n    };\n    while (unvisited.size) {\n      const node = unvisited.values().next().value;\n      const component: LayoutData = {\n        ports: [],\n        edges: [],\n        children: [],\n      };\n      this.layoutsData.push(component);\n      calculateConnectedComponent(node);\n    }\n    // Classify edges to belonging component\n    const portToComponent: Map<Port, LayoutData> = new Map();\n    for (const component of this.layoutsData) {\n      for (const port of component.ports) {\n        portToComponent.set(port, component);\n      }\n    }\n    for (const edgeData of edgesData) {\n      const {fromBelonging} = edgeData;\n      portToComponent.get(fromBelonging)!.edges.push(edgeData);\n    }\n    // Add children\n    for (const component of this.layoutsData) {\n      component.children = (component.ports as any[])\n        .concat(component.edges.map((x) => x.edge));\n    }\n    // Create layout\n    const componentClass = componentFactory(data.component);\n    if (!this.componentLayout ||\n        this.componentLayout.constructor !== componentClass) {\n      this.componentLayout = new componentClass(this, this);\n    }\n    const layoutClass = layoutFactory(data.layout);\n    const physicsClass = physicsFactory(data.physics);\n    const newLayouts: GraphLayout[] = [];\n    const newPhysics: GraphPhysics[] = [];\n    for (let i = 0; i < this.layoutsData.length; ++i) {\n      const layout = this.layouts && i < this.layouts.length &&\n        this.layouts[i].constructor === layoutClass ?\n        this.layouts[i] : new layoutClass(this, this.componentLayout);\n      const physics = this.physics && i < this.physics.length &&\n        this.physics[i].constructor === physicsClass ?\n        this.physics[i] : new physicsClass(this, layout);\n      for (const child of this.layoutsData[i].children) {\n        (child as any).parent = layout;\n      }\n      layout.solve(data.layout, this.layoutsData[i], i);\n      physics.solve(data.physics, this.layoutsData[i]);\n      newLayouts.push(layout);\n      newPhysics.push(physics);\n    }\n    this.layouts = newLayouts;\n    this.physics = newPhysics;\n    this.componentLayout.updateData(data.component);\n    const typeClass = graphTypeFactory(data);\n    if (!this.graphType || this.graphType.constructor !== typeClass) {\n      this.graphType = new typeClass(this, data);\n    } else {\n      this.graphType.updateData(data);\n    }\n  }\n  public step(): boolean {\n    let updated = false;\n    if (this.subgraphs) {\n      for (const subgraph of this.subgraphs.values()) {\n        if (subgraph.step()) {\n          updated = true;\n        }\n      }\n    }\n    if (this.physics) {\n      for (const physics of this.physics) {\n        if (physics.step()) {\n          updated = true;\n        }\n      }\n    }\n    return updated;\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      draggable: true,\n      id: this.fullId,\n      x: this.position.x,\n      y: this.position.y,\n      children: this.graphType.render(),\n    };\n  }\n  public findBelongingPort(id: string): Node | Graph | null {\n    id = id.split(':')[0];\n    if (this.ports.has(id)) {\n      return this.ports.get(id)!;\n    }\n    for (const graph of this.subgraphs.values()) {\n      if (graph.findBelongingPort(id)) {\n        return graph;\n      }\n    }\n    return null;\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    if (this.ports.has(id[0])) {\n      const node = this.ports.get(id[0])!;\n      return node.findPort(id.slice(1));\n    }\n    for (const graph of this.subgraphs.values()) {\n      const node = graph.findPort(id);\n      if (node) {\n        return node;\n      }\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.graphType.getBoundingBoxSize();\n  }\n  public distanceToBorder(angle: number) {\n    return this.graphType.distanceToBorder(angle);\n  }\n}\n","import Edge from '@/graph/edge/Edge';\nimport {EdgeData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Positioned from '@/graph/base/Positioned';\n\nexport default abstract class EdgeType {\n  public readonly parent: Edge;\n  protected constructor(parent: Edge) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: EdgeData): void;\n  public abstract fullyUpdatePosition(): void;\n  public abstract updatePosition(): void;\n  public getControlPoints(): Positioned[] {\n    return [];\n  }\n  public abstract render(): AnyShape;\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, Position, StraightEdgeData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport interface StraightEdgeConfig {\n  fromPointer: boolean;\n  toPointer: boolean;\n  lineColor: string;\n  lineWidth: number;\n  pointerColor: string;\n  pointerWidth: number;\n  pointerHeight: number;\n}\n\nexport default class StraightEdgeType extends EdgeType {\n  private static defaultConfig: StraightEdgeConfig = {\n    fromPointer: false,\n    toPointer: true,\n    lineColor: 'black',\n    lineWidth: 1,\n    pointerColor: 'black',\n    pointerWidth: 10,\n    pointerHeight: 15,\n  };\n  private config!: StraightEdgeConfig;\n  private fromPointerPos: Position;\n  private toPointerPos: Position;\n  private fromAngle: number;\n  private toAngle: number;\n  private lineFromPos: Position;\n  private lineToPos: Position;\n  public constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'straight') {\n      throw new Error('Expect straight shape');\n    }\n    super(parent);\n    this.updateData(data);\n    this.fromPointerPos = { x: 0, y: 0 };\n    this.toPointerPos = { x: 0, y: 0 };\n    this.fromAngle = this.toAngle = 0;\n    this.lineFromPos = { x: 0, y: 0 };\n    this.lineToPos = { x: 0, y: 0 };\n  }\n  public updateData(data: StraightEdgeData): void {\n    this.config = Object.assign({}, StraightEdgeType.defaultConfig, data);\n  }\n  public fullyUpdatePosition(): void {\n    this.updatePosition();\n  }\n  public updatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    this.fromAngle = Math.atan2(toPos.y - fromPos.y, toPos.x - fromPos.x);\n    this.toAngle = Math.PI + this.fromAngle;\n    const fromDistance = fromPort.distanceToBorder(this.fromAngle);\n    const toDistance = toPort.distanceToBorder(this.toAngle);\n    let realFromPosX = fromPos.x + fromDistance * Math.cos(this.fromAngle);\n    let realFromPosY = fromPos.y + fromDistance * Math.sin(this.fromAngle);\n    let realToPosX = toPos.x + toDistance * Math.cos(this.toAngle);\n    let realToPosY = toPos.y + toDistance * Math.sin(this.toAngle);\n    this.fromPointerPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    if (this.config.fromPointer) {\n      realFromPosX += this.config.pointerWidth * Math.cos(this.fromAngle);\n      realFromPosY += this.config.pointerWidth * Math.sin(this.fromAngle);\n    }\n    this.lineFromPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    this.toPointerPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n    if (this.config.toPointer) {\n      realToPosX += this.config.pointerWidth * Math.cos(this.toAngle);\n      realToPosY += this.config.pointerWidth * Math.sin(this.toAngle);\n    }\n    this.lineToPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n  }\n\n  public render(): AnyShape {\n    const children: AnyShape[] = [];\n    if (this.config.fromPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.fromPointerPos.x,\n        y: this.fromPointerPos.y,\n        angle: this.fromAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    if (this.config.toPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.toPointerPos.x,\n        y: this.toPointerPos.y,\n        angle: this.toAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    children.unshift({\n      is: 'line',\n      points: [\n        this.lineFromPos.x, this.lineFromPos.y,\n        this.lineToPos.x, this.lineToPos.y,\n      ],\n      stroke: this.config.lineColor,\n      strokeWidth: this.config.lineWidth,\n    });\n    return {\n      is: 'group',\n      children,\n    };\n  }\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, Position, QuadraticEdgeData} from '@/graph/base/dataInput';\nimport Positioned from '@/graph/base/Positioned';\nimport Edge from '@/graph/edge/Edge';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport interface QuadraticEdgeConfig {\n  fromPointer: boolean;\n  toPointer: boolean;\n  lineColor: string;\n  lineWidth: number;\n  pointerColor: string;\n  pointerWidth: number;\n  pointerHeight: number;\n}\n\nexport default class QuadraticEdgeType extends EdgeType {\n  private static defaultConfig: QuadraticEdgeConfig = {\n    fromPointer: false,\n    toPointer: true,\n    lineColor: 'black',\n    lineWidth: 1,\n    pointerColor: 'black',\n    pointerWidth: 10,\n    pointerHeight: 15,\n  };\n  private config!: QuadraticEdgeConfig;\n  private controlPoint!: Positioned;\n  private fromPointerPos: Position;\n  private toPointerPos: Position;\n  private fromAngle: number;\n  private toAngle: number;\n  private lineFromPos: Position;\n  private lineToPos: Position;\n  public constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'quadratic') {\n      throw new Error('Expect quadratic shape');\n    }\n    super(parent);\n    this.updateData(data);\n    this.controlPoint = new Positioned(this.parent.parent);\n    this.fromPointerPos = { x: 0, y: 0 };\n    this.toPointerPos = { x: 0, y: 0 };\n    this.fromAngle = this.toAngle = 0;\n    this.lineFromPos = { x: 0, y: 0 };\n    this.lineToPos = { x: 0, y: 0 };\n  }\n  public updateData(data: QuadraticEdgeData): void {\n    this.config = Object.assign({}, QuadraticEdgeType.defaultConfig, data);\n  }\n  public fullyUpdatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    this.controlPoint.setPosition({\n      x: 0.5 * (fromPos.x + toPos.x),\n      y: 0.5 * (fromPos.y + toPos.y),\n    });\n    this.updatePosition();\n  }\n  public updatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    const viaPos = this.controlPoint.getPosition();\n    this.fromAngle = Math.atan2(viaPos.y - fromPos.y, viaPos.x - fromPos.x);\n    this.toAngle = Math.PI + Math.atan2(toPos.y - viaPos.y, toPos.x - viaPos.x);\n    const fromDistance = fromPort.distanceToBorder(this.fromAngle);\n    const toDistance = toPort.distanceToBorder(this.toAngle);\n    let realFromPosX = fromPos.x + fromDistance * Math.cos(this.fromAngle);\n    let realFromPosY = fromPos.y + fromDistance * Math.sin(this.fromAngle);\n    let realToPosX = toPos.x + toDistance * Math.cos(this.toAngle);\n    let realToPosY = toPos.y + toDistance * Math.sin(this.toAngle);\n    this.fromPointerPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    if (this.config.fromPointer) {\n      realFromPosX += this.config.pointerWidth * Math.cos(this.fromAngle);\n      realFromPosY += this.config.pointerWidth * Math.sin(this.fromAngle);\n    }\n    this.lineFromPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    this.toPointerPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n    if (this.config.toPointer) {\n      realToPosX += this.config.pointerWidth * Math.cos(this.toAngle);\n      realToPosY += this.config.pointerWidth * Math.sin(this.toAngle);\n    }\n    this.lineToPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n  }\n  public getControlPoints(): Positioned[] {\n    return [this.controlPoint];\n  }\n  public render(): AnyShape {\n    const children: AnyShape[] = [];\n    if (this.config.fromPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.fromPointerPos.x,\n        y: this.fromPointerPos.y,\n        angle: this.fromAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    if (this.config.toPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.toPointerPos.x,\n        y: this.toPointerPos.y,\n        angle: this.toAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    children.unshift({\n      is: 'quadraticLine',\n      points: [\n        this.lineFromPos.x, this.lineFromPos.y,\n        this.controlPoint.getPosition().x,\n        this.controlPoint.getPosition().y,\n        this.lineToPos.x, this.lineToPos.y,\n      ],\n      stroke: this.config.lineColor,\n      strokeWidth: this.config.lineWidth,\n    });\n    return {\n      is: 'group',\n      children,\n    };\n  }\n}\n","import {EdgeData} from '@/graph/base/dataInput';\nimport Edge from '@/graph/edge/Edge';\nimport StraightEdgeType from '@/graph/edge/type/StraightEdgeType';\nimport EdgeType from '@/graph/edge/type/EdgeType';\nimport QuadraticEdgeType from '@/graph/edge/type/QuadraticEdgeType';\n\nexport default function edgeTypeFactory(data: EdgeData)\n    : new (parent: Edge, data: EdgeData) => EdgeType {\n  switch (data.shape) {\n    case 'straight':\n      return StraightEdgeType;\n    default:\n      data.shape = 'quadratic';\n      return QuadraticEdgeType;\n  }\n}\n","/*\n * recordLabel\n *   : field ('|' field )*\n *   ;\n * field\n *   : (’<’ string ’>’)? string?\n *   | '{' recordLabel '}'\n *   ;\n */\n\nenum TokenEnum {\n  EOF,\n  VERTICAL_BAR,\n  LEFT_CURLY_BRACE,\n  RIGHT_CURLY_BRACE,\n  LEFT_ANGLE_BRACE,\n  RIGHT_ANGLE_BRACE,\n  STRING,\n}\n\ninterface Token {\n  type: TokenEnum;\n  text?: string;\n}\n\nexport interface Record {\n  type: 'record';\n  children: RecordData[];\n}\n\nexport interface Field {\n  type: 'field';\n  port?: string;\n  text?: string;\n}\n\nexport type RecordData = Record | Field;\n\nexport default function recordParser(record: string): RecordData {\n  let position = 0;\n  const buffer: Token[] = [];\n  function lexer(): Token {\n    if (buffer.length) {\n      return buffer.pop()!;\n    }\n    while (position < record.length &&\n           ' \\t\\n\\r\\v'.indexOf(record[position]) > -1) {\n      ++position;\n    }\n    if (position >= record.length) {\n      return { type: TokenEnum.EOF };\n    }\n    switch (record[position]) {\n      case '|':\n        ++position;\n        return { type: TokenEnum.VERTICAL_BAR };\n      case '{':\n        ++position;\n        return { type: TokenEnum.LEFT_CURLY_BRACE };\n      case '}':\n        ++position;\n        return { type: TokenEnum.RIGHT_CURLY_BRACE };\n      case '<':\n        ++position;\n        return { type: TokenEnum.LEFT_ANGLE_BRACE };\n      case '>':\n        ++position;\n        return { type: TokenEnum.RIGHT_ANGLE_BRACE };\n      default: {\n        let text = '';\n        while (position < record.length &&\n               ' \\t\\n\\r\\v|{}<>'.indexOf(record[position]) === -1) {\n          if (record[position] === '\\\\') {\n            ++position;\n            if (position === record.length) {\n              throw new Error('Unexpected end of escape sequence');\n            }\n            switch (record[position]) {\n              case 'n':\n                text += '\\n';\n                break;\n              default:\n                text += record[position];\n            }\n          } else {\n            text += record[position];\n          }\n          ++position;\n        }\n        return { type: TokenEnum.STRING, text };\n      }\n    }\n  }\n  function parseRecordLabel(): Record {\n    const children = [parseField()];\n    let token;\n    while ((token = lexer())!.type === TokenEnum.VERTICAL_BAR) {\n      children.push(parseField());\n    }\n    buffer.push(token);\n    return { type: 'record', children };\n  }\n  function parseField(): RecordData {\n    let token = lexer();\n    if (token.type === TokenEnum.LEFT_CURLY_BRACE) {\n      const ret = parseRecordLabel();\n      if (lexer().type !== TokenEnum.RIGHT_CURLY_BRACE) {\n        throw new Error('Expect \\'}\\'');\n      }\n      return ret;\n    }\n    const result: Field = { type: 'field' };\n    if (token.type === TokenEnum.LEFT_ANGLE_BRACE) {\n      token = lexer();\n      if (token.type === TokenEnum.STRING) {\n        let port = token.text;\n        while ((token = lexer()).type === TokenEnum.STRING) {\n          port += ' ' + token.text;\n        }\n        result.port = port;\n      }\n      if (token.type !== TokenEnum.RIGHT_ANGLE_BRACE) {\n        throw new Error('Expect \\'>\\'');\n      }\n      token = lexer();\n    }\n    if (token.type === TokenEnum.STRING) {\n      let text = token.text;\n      while ((token = lexer()).type === TokenEnum.STRING) {\n        text += ' ' + token.text;\n      }\n      result.text = text;\n    }\n    buffer.push(token);\n    return result;\n  }\n  const tree = parseRecordLabel();\n  if (lexer().type !== TokenEnum.EOF) {\n    throw new Error('Unexpected token');\n  }\n  return tree;\n}\n","import Node from '@/graph/node/Node';\nimport {NodeData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class NodeType {\n  public readonly parent: Node;\n  protected constructor(parent: Node) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: NodeData): void;\n  public abstract render(): AnyShape[];\n  public findPort(id: string[]): Port | null {\n    return null;\n  }\n  public abstract getBoundingBoxSize(): Size;\n  public abstract distanceToBorder(angle: number): number;\n}\n","import NodeType from '@/graph/node/type/NodeType';\nimport Node from '@/graph/node/Node';\nimport {BoxNodeData, NodeData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface BoxNodeConfig {\n  label: string | null;\n  style: 'solid' | 'filled';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n}\n\nexport default class BoxNodeType extends NodeType {\n  private static defaultConfig: BoxNodeConfig = {\n    label: null,\n    style: 'solid',  // or 'filled'\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 4,\n    align: 'center',\n  };\n  private config!: BoxNodeConfig;\n  private textSize!: Size;\n  private contentSize!: Size;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'box') {\n      throw new Error('Expect box shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: BoxNodeData) {\n    const newConfig = Object.assign({}, BoxNodeType.defaultConfig, data);\n    const textSizeNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    const contentSizeNeedsUpdate = textSizeNeedsUpdate ||\n      this.config.padding !== newConfig.padding;\n    const borderSizeNeedsUpdate = contentSizeNeedsUpdate ||\n      this.config.strokeWidth !== newConfig.strokeWidth;\n    this.config = newConfig;\n    if (textSizeNeedsUpdate) {\n      const ctx = this.parent.root.ctx;\n      ctx.font = `${newConfig.fontSize}px ${newConfig.fontFamily}`;\n      const lines = newConfig.label ? newConfig.label.split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * newConfig.fontSize * newConfig.lineHeight,\n      };\n    }\n    if (contentSizeNeedsUpdate) {\n      this.contentSize = {\n        width: this.textSize.width + 2 * newConfig.padding,\n        height: this.textSize.height + 2 * newConfig.padding,\n      };\n    }\n    if (borderSizeNeedsUpdate) {\n      // Konva's border extends towards both inner and outer\n      this.borderSize = {\n        width: this.contentSize.width + newConfig.strokeWidth,\n        height: this.contentSize.height + newConfig.strokeWidth,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    const rect: AnyShape = {\n      is: 'rect',\n      x: -this.contentSize.width / 2,\n      y: -this.contentSize.height / 2,\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n      fill: this.config.style === 'filled' ?\n        this.config.fillColor : undefined,\n      stroke: this.config.strokeWidth > 0 ?\n        this.config.strokeColor : undefined,\n      strokeWidth: this.config.strokeWidth,\n    };\n    const rendered: AnyShape[] = [rect];\n    if (this.config.label) {\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.contentSize.width / 2,\n        y: -this.contentSize.height / 2,\n        text: this.config.label,\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        lineHeight: this.config.lineHeight,\n        padding: this.config.padding,\n        align: this.config.align,\n      };\n      rendered.push(text);\n    }\n    return rendered;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import RecordNodeType from '@/graph/node/type/RecordNodeType';\nimport {Field, Record, RecordData} from '@/graph/node/type/recordParser';\nimport {Size} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default class RecordCell extends Port {\n  private readonly nodeType: RecordNodeType;\n  private isField!: boolean;\n  private isHorizontal!: boolean;\n  private label?: string;\n  private children?: RecordCell[];\n  private textSize?: Size;\n  private contentSize?: Size;\n  private cellSize!: Size;\n  constructor(root: Root, parent: Port, nodeType: RecordNodeType,\n              data: RecordData, isHorizontal = true) {\n    super(root, parent);\n    this.nodeType = nodeType;\n    this.updateData(data, isHorizontal);\n  }\n  public updateData(data: RecordData, isHorizontal = true) {\n    this.isField = data.type === 'field';\n    this.isHorizontal = isHorizontal;\n    if (this.isField) {\n      const fieldData = data as Field;\n      if (fieldData.port) {\n        this.nodeType.getPorts()!.set(fieldData.port, this);\n      }\n      const ctx = this.root.ctx;\n      const config = this.nodeType.getConfig()!;\n      this.label = fieldData.text || '';\n      ctx.font = `${config.fontSize}px ${config.fontFamily}`;\n      const lines =  this.label ?  this.label.split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * config.fontSize * config.lineHeight,\n      };\n      this.contentSize = {\n        width: this.textSize.width + 2 * config.padding,\n        height: this.textSize.height + 2 * config.padding,\n      };\n      this.cellSize = {\n        width: this.contentSize.width,\n        height: this.contentSize.height,\n      };\n    } else {\n      const recordData = data as Record;\n      this.children = [];\n      for (const child of recordData.children) {\n        const cell = new RecordCell(this.root, this, this.nodeType,\n          child, !isHorizontal);\n        this.children.push(cell);\n      }\n      if (isHorizontal) {\n        this.cellSize = {\n          width: this.children.map((x: RecordCell) => x.cellSize.width)\n            .reduce((a, b) => a + b, 0),\n          height: Math.max(...this.children.map(\n            (x: RecordCell) => x.cellSize.height)),\n        };\n      } else {\n        this.cellSize = {\n          width: Math.max(...this.children.map(\n            (x: RecordCell) => x.cellSize.width)),\n          height: this.children.map((x: RecordCell) => x.cellSize.height)\n            .reduce((a, b) => a + b, 0),\n        };\n      }\n    }\n  }\n  public updateCellSize(width: number, height: number) {\n    if (!this.isField) {\n      if (!this.children) {\n        throw new Error('Non-field record should have children');\n      }\n      if (this.isHorizontal) {\n        const deltaWidth = (width - this.cellSize.width) / this.children.length;\n        let startX = -width / 2;\n        for (const child of this.children) {\n          child.updateCellSize(child.cellSize.width + deltaWidth, height);\n          child.position = {\n            x: startX + child.cellSize.width / 2,\n            y: 0,\n          };\n          startX += child.cellSize.width;\n        }\n      } else {\n        const deltaHeight = (height - this.cellSize.height) /\n          this.children.length;\n        let startY = -height / 2;\n        for (const child of this.children) {\n          child.updateCellSize(width, child.cellSize.height + deltaHeight);\n          child.position = {\n            x: 0,\n            y: startY + child.cellSize.height / 2,\n          };\n          startY += child.cellSize.height;\n        }\n      }\n    }\n    this.cellSize = { width, height };\n  }\n  public getCellSize(): Size | undefined {\n    return this.cellSize;\n  }\n  public render(): AnyShape[] {\n    let rendered: AnyShape[];\n    if (this.isField) {\n      const config = this.nodeType.getConfig()!;\n      rendered = [\n        {\n          is: 'rect',\n          x: -this.cellSize.width / 2,\n          y: -this.cellSize.height / 2,\n          width: this.cellSize.width,\n          height: this.cellSize.height,\n          fill: config.style === 'filled' ? config.fillColor : undefined,\n          stroke: config.strokeWidth > 0 ? config.strokeColor : undefined,\n          strokeWidth: config.strokeWidth,\n        },\n      ];\n      if (this.label) {\n        if (!this.contentSize) {\n          throw new Error('Field record should have content size');\n        }\n        rendered.push({\n          is: 'text',\n          x: -this.contentSize.width / 2,\n          y: -this.contentSize.height / 2,\n          text: this.label,\n          fontSize: config.fontSize,\n          fontFamily: config.fontFamily,\n          lineHeight: config.lineHeight,\n          padding: config.padding,\n          align: config.align,\n        });\n      }\n    } else {\n      if (!this.children) {\n        throw new Error('Non-field record should have children');\n      }\n      rendered = this.children.map((x) => {\n        const position = x.getPosition();\n        return {\n          is: 'group',\n          x: position.x,\n          y: position.y,\n          children: x.render(),\n        };\n      });\n    }\n    return rendered;\n  }\n  public getBoundingBoxSize(): Size {\n    const config = this.nodeType.getConfig()!;\n    return {\n      width: this.cellSize.width + config.strokeWidth,\n      height: this.cellSize.height + config.strokeWidth,\n    };\n  }\n  public distanceToBorder(angle: number): number {\n    const borderSize = this.getBoundingBoxSize();\n    return Math.min(\n      Math.abs(borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import NodeType from './NodeType';\nimport Node from '@/graph/node/Node';\nimport recordParser from './recordParser';\nimport RecordCell from './RecordCell';\nimport {NodeData, RecordNodeData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface RecordNodeConfig {\n  label: string;\n  direction: 'horizontal' | 'vertical';\n  style: 'solid' | 'filled';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n}\n\nexport default class RecordNodeType extends NodeType {\n  public static defaultConfig: RecordNodeConfig = {\n    label: '',\n    direction: 'horizontal', // or 'vertical'\n    style: 'solid',\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 4,\n    align: 'center',\n  };\n  private config!: RecordNodeConfig;\n  private ports!: Map<string, Port>;\n  private root!: RecordCell;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'record') {\n      throw new Error('Expect record shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public getConfig(): RecordNodeConfig | undefined {\n    return this.config;\n  }\n  public getPorts(): Map<string, Port> | undefined {\n    return this.ports;\n  }\n  public updateData(data: RecordNodeData) {\n    const newConfig = Object.assign({}, RecordNodeType.defaultConfig, data);\n    const contentNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.direction !== newConfig.direction ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight ||\n      this.config.padding !== newConfig.padding;\n    const borderNeedsUpdate = contentNeedsUpdate ||\n      this.config.strokeWidth !== newConfig.strokeWidth;\n    this.config = newConfig;\n    if (contentNeedsUpdate) {\n      const record = recordParser(data.label);\n      this.ports = new Map();\n      this.root = new RecordCell(this.parent.root, this.parent, this,\n        record, this.config.direction === 'horizontal');\n      const rootCellSize = this.root.getCellSize()!;\n      this.root.updateCellSize(rootCellSize.width, rootCellSize.height);\n    }\n    if (borderNeedsUpdate) {\n      const rootCellSize = this.root.getCellSize()!;\n      this.borderSize = {\n        width: rootCellSize.width + this.config.strokeWidth,\n        height: rootCellSize.height + this.config.strokeWidth,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    return this.root.render();\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 1) {\n      const founded = this.ports.get(id[0]);\n      if (founded) {\n        return founded;\n      }\n      return null;\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import TableNodeType from '@/graph/node/type/TableNodeType';\nimport Root from '@/graph/Root';\nimport {Element} from 'xml-js';\nimport {Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface TableCellConfig {\n  rowSpan: number;\n  columnSpan: number;\n  border: number;\n  backgroundColor: string;\n}\n\nexport default class TableCell extends Port {\n  public rowOffset!: number;\n  public columnOffset!: number;\n  public contentSize!: Size;\n  public cellSize!: Size;\n  private readonly nodeType: TableNodeType;\n  private config!: TableCellConfig;\n  private port?: string;\n  private label!: string;\n  private textSize!: Size;\n  constructor(root: Root, parent: Port, nodeType: TableNodeType, data: any) {\n     super(root, parent);\n     this.nodeType = nodeType;\n     this.updateData(data);\n  }\n  public updateData(data: any) {\n    this.config = {\n      rowSpan: 1,\n      columnSpan: 1,\n      border: this.nodeType.getTableConfig()!.cellBorder,\n      backgroundColor: 'white',\n    };\n    if (data.attributes) {\n      for (const attribute of Object.keys(data.attributes)) {\n        const value = data.attributes[attribute];\n        switch (attribute.toLowerCase()) {\n          case 'rowspan':\n            this.config.rowSpan = parseInt(value, 10);\n            break;\n          case 'colspan':\n            this.config.columnSpan = parseInt(value, 10);\n            break;\n          case 'border':\n            this.config.border = parseInt(value, 10);\n            break;\n          case 'bgcolor':\n            this.config.backgroundColor = value;\n            break;\n          case 'port':\n            this.port = value;\n            break;\n          default:\n            throw new Error('Unknown attribute for table cell');\n        }\n      }\n    }\n    function getText(element: Element): string {\n      switch (element.type) {\n        case 'text':\n          if (typeof element.text === 'string') {\n            return element.text;\n          }\n          return '';\n        case 'element':\n          if (element.name && element.name.toLowerCase() === 'br') {\n            return '\\n';\n          }\n          if (element.elements) {\n            return element.elements.map(getText).join('');\n          } else {\n            return '';\n          }\n        default:\n          throw new Error('Unknown element type');\n      }\n    }\n    this.label = getText(data);\n    const parentConfig = this.nodeType.getConfig()!;\n    const tableConfig = this.nodeType.getTableConfig()!;\n    const ctx = this.root.ctx;\n    ctx.font = `${parentConfig.fontSize}px ${parentConfig.fontFamily}`;\n    const lines = this.label ? this.label.split('\\n') : [];\n    this.textSize = {\n      width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n      height: lines.length * parentConfig.fontSize * parentConfig.lineHeight,\n    };\n    this.contentSize = {\n      width: this.textSize.width + 2 * tableConfig.cellPadding,\n      height: this.textSize.height + 2 * tableConfig.cellPadding,\n    };\n    this.cellSize = {\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n    };\n    this.rowOffset = 0;\n    this.columnOffset = 0;\n  }\n  public render(): AnyShape {\n    const rect: AnyShape = {\n      is: 'rect',\n      x: -this.cellSize!.width / 2,\n      y: -this.cellSize!.height / 2,\n      width: this.cellSize!.width,\n      height: this.cellSize!.height,\n      fill: this.config!.backgroundColor,\n      stroke: this.config!.border > 0 ? 'black' : undefined,\n      strokeWidth: this.config!.border,\n    };\n    const rendered: AnyShape[] = [rect];\n    if (this.label) {\n      const parentConfig = this.nodeType.getConfig()!;\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.contentSize!.width / 2,\n        y: -this.contentSize!.height / 2,\n        text: this.label,\n        fontSize: parentConfig.fontSize,\n        fontFamily: parentConfig.fontFamily,\n        lineHeight: parentConfig.lineHeight,\n        padding: this.nodeType.getTableConfig()!.cellPadding,\n        align: 'center',\n      };\n      rendered.push(text);\n    }\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: rendered,\n    };\n  }\n  public getConfig(): TableCellConfig | undefined {\n    return this.config;\n  }\n  public getPort(): string | undefined {\n    return this.port;\n  }\n  public getBoundingBoxSize() {\n    return {\n      width: this.cellSize!.width + this.config!.border,\n      height: this.cellSize!.height + this.config!.border,\n    };\n  }\n  public distanceToBorder(angle: number) {\n    const borderSize = this.getBoundingBoxSize();\n    return Math.min(\n      Math.abs(borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import convert, {Element} from 'xml-js';\nimport NodeType from './NodeType';\nimport TableCell from './TableCell';\nimport Node from '@/graph/node/Node';\nimport {NodeData, Size, TableNodeData} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface TableNodeConfig {\n  label: string;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n}\n\ninterface TableConfig {\n  border: number;\n  cellBorder: number;\n  cellSpacing: number;\n  cellPadding: number;\n}\n\nexport default class TableNodeType extends NodeType {\n  public static defaultConfig: TableNodeConfig = {\n    label: '',\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n  };\n  private config!: TableNodeConfig;\n  private tableConfig!: TableConfig;\n  private table!: TableCell[][];\n  private ports!: Map<string, Port>;\n  private contentSize!: Size;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'table') {\n      throw new Error('Expect record shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: TableNodeData) {\n    const newConfig = Object.assign({}, TableNodeType.defaultConfig, data);\n    const layoutNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    this.config = newConfig;\n    if (layoutNeedsUpdate) {\n      const jsonObj = convert.xml2js(this.config.label) as Element;\n      if (!jsonObj.elements || !jsonObj.elements[0] ||\n          !jsonObj.elements[0].name ||\n          jsonObj.elements[0].name.toLowerCase() !== 'table') {\n        throw new Error('Expect table element');\n      }\n      const tableElement = jsonObj.elements[0];\n      this.tableConfig = {\n        border: 0,\n        cellBorder: 1,\n        cellSpacing: 0,\n        cellPadding: 4,\n      };\n      if (tableElement.attributes) {\n        for (const attribute of Object.keys(tableElement.attributes)) {\n          const value = tableElement.attributes[attribute] as string;\n          switch (attribute.toLowerCase()) {\n            case 'border':\n              this.tableConfig.border = parseInt(value, 10);\n              break;\n            case 'cellborder':\n              this.tableConfig.cellBorder = parseInt(value, 10);\n              break;\n            case 'cellspacing':\n              this.tableConfig.cellSpacing = parseInt(value, 10);\n              break;\n            case 'cellpadding':\n              this.tableConfig.cellPadding = parseInt(value, 10);\n              break;\n            default:\n              throw new Error('Unknown attribute for table');\n          }\n        }\n      }\n      // Parse table and get numbers of rows and columns\n      this.table = [];\n      this.ports = new Map();\n      let rows = 0;\n      let columns = 0;\n      let firstRow = true;\n      if (tableElement.elements) {\n        for (const tr of tableElement.elements) {\n          if (!tr.name || tr.name.toLowerCase() !== 'tr') {\n            throw new Error('Expect tr element');\n          }\n          const row = [];\n          if (tr.elements) {\n            for (const td of tr.elements) {\n              if (!td.name || td.name.toLowerCase() !== 'td') {\n                throw new Error('Expect td element');\n              }\n              const cell = new TableCell(this.parent.root, this.parent,\n                this, td);\n              const port = cell.getPort();\n              if (port) {\n                this.ports.set(port, cell);\n              }\n              if (firstRow) {\n                columns += cell.getConfig()!.columnSpan;\n              }\n              row.push(cell);\n            }\n          }\n          ++rows;\n          if (firstRow) {\n            firstRow = false;\n          }\n          this.table.push(row);\n        }\n      }\n      // Create empty cell size table\n      const cellSizes = [];\n      for (let i = 0; i < rows; ++i) {\n        cellSizes.push(Array(columns).fill(null));\n      }\n      // Fill size table with minimum required size\n      for (let rowOffset = 0; rowOffset < rows; ++rowOffset) {\n        let columnOffset = 0;\n        for (const cell of this.table[rowOffset]) {\n          while (columnOffset < columns && cellSizes[rowOffset][columnOffset]) {\n            ++columnOffset;\n          }\n          cell.rowOffset = rowOffset;\n          cell.columnOffset = columnOffset;\n          const {rowSpan, columnSpan} = cell.getConfig()!;\n          const cellHeight = (cell.contentSize.height -\n            (rowSpan - 1) * this.tableConfig.cellSpacing) / rowSpan;\n          const cellWidth = (cell.contentSize.width -\n            (columnSpan - 1) * this.tableConfig.cellSpacing) / columnSpan;\n          for (let i = 0; i < rowSpan; ++i) {\n            for (let j = 0; j < columnSpan; ++j) {\n              cellSizes[rowOffset + i][columnOffset + j] = {\n                width: cellWidth,\n                height: cellHeight,\n              };\n            }\n          }\n          columnOffset += columnSpan;\n        }\n      }\n      // Get height of rows and width of columns\n      const rowHeight = [];\n      const columnWidth = [];\n      for (let i = 0; i < rows; ++i) {\n        let max = -Infinity;\n        for (let j = 0; j < columns; ++j) {\n          if (cellSizes[i][j].height > max) {\n            max = cellSizes[i][j].height;\n          }\n        }\n        rowHeight.push(max);\n      }\n      for (let j = 0; j < columns; ++j) {\n        let max = -Infinity;\n        for (let i = 0; i < rows; ++i) {\n          if (cellSizes[i][j].width > max) {\n            max = cellSizes[i][j].width;\n          }\n        }\n        columnWidth.push(max);\n      }\n      // Get accumulated height and width\n      const accRowHeight = [0];\n      const accColumnWidth = [0];\n      for (let i = 0; i < rows; ++i) {\n        accRowHeight.push(accRowHeight[i] + rowHeight[i] +\n          this.tableConfig.cellSpacing);\n      }\n      for (let i = 0; i < columns; ++i) {\n        accColumnWidth.push(accColumnWidth[i] + columnWidth[i] +\n          this.tableConfig.cellSpacing);\n      }\n      this.contentSize = {\n        width: accColumnWidth[accColumnWidth.length - 1] -\n          this.tableConfig.cellSpacing,\n        height: accRowHeight[accRowHeight.length - 1] -\n          this.tableConfig.cellSpacing,\n      };\n      // Set size and position to cells\n      for (const row of this.table) {\n        for (const cell of row) {\n          const {rowSpan, columnSpan} = cell.getConfig()!;\n          const {rowOffset, columnOffset} = cell;\n          const upperLeftX = accColumnWidth[columnOffset];\n          const upperLeftY = accRowHeight[rowOffset];\n          const width = accColumnWidth[columnOffset + columnSpan] -\n            upperLeftX - this.tableConfig.cellSpacing;\n          const height = accRowHeight[rowOffset + rowSpan] -\n            upperLeftY - this.tableConfig.cellSpacing;\n          cell.setPosition({\n            x: upperLeftX + width / 2 - this.contentSize.width / 2,\n            y: upperLeftY + height / 2 - this.contentSize.height / 2,\n          });\n          cell.cellSize = { width, height };\n        }\n      }\n      this.borderSize = {\n        width: this.contentSize.width + this.tableConfig.border +\n          2 * this.tableConfig.cellSpacing,\n        height: this.contentSize.height + this.tableConfig.border +\n          2 * this.tableConfig.cellSpacing,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    const rendered: AnyShape[] = [];\n    rendered.push({\n      is: 'rect',\n      x: -this.contentSize.width / 2 - this.tableConfig.cellSpacing,\n      y: -this.contentSize.height / 2 - this.tableConfig.cellSpacing,\n      width: this.contentSize.width + 2 * this.tableConfig.cellSpacing,\n      height: this.contentSize.height + 2 * this.tableConfig.cellSpacing,\n      fill: 'white',\n      stroke: this.tableConfig.border > 0 ? 'black' : undefined,\n      strokeWidth: this.tableConfig.border,\n    });\n    for (const row of this.table) {\n      for (const cell of row) {\n        rendered.push(cell.render());\n      }\n    }\n    return rendered;\n  }\n  public getConfig(): TableNodeConfig | undefined {\n    return this.config;\n  }\n  public getTableConfig(): TableConfig | undefined {\n    return this.tableConfig;\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 1) {\n      const founded = this.ports.get(id[0]);\n      if (founded) {\n        return founded;\n      }\n      return null;\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import BoxNodeType from '@/graph/node/type/BoxNodeType';\nimport NodeType from '@/graph/node/type/NodeType';\nimport {NodeData} from '@/graph/base/dataInput';\nimport Node from '@/graph/node/Node';\nimport RecordNodeType from '@/graph/node/type/RecordNodeType';\nimport TableNodeType from '@/graph/node/type/TableNodeType';\n\nexport default function nodeTypeFactory(data: NodeData)\n    : new (parent: Node, data: NodeData) => NodeType {\n  switch (data.shape) {\n    case 'table':\n      return TableNodeType;\n    case 'record':\n      return RecordNodeType;\n    default:\n      data.shape = 'box';\n      return BoxNodeType;\n  }\n}\n","import {NodeData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport nodeTypeFactory from '@/graph/node/type/nodeTypeFactory';\nimport NodeType from '@/graph/node/type/NodeType';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Port from '@/graph/base/Port';\nimport Positioned from '@/graph/base/Positioned';\nimport Graph from '@/graph/graph/Graph';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport default class Node extends Port implements Renderable {\n  public static getId(data: NodeData) {\n    if (!data.id) {\n      throw new Error('Missing id field for node');\n    }\n    return data.id;\n  }\n  public readonly graph: Graph | null;\n  public depth!: number;\n  public fullId!: string;\n  public fromEdges!: Set<Edge>;\n  public toEdges!: Set<Edge>;\n  private nodeType!: NodeType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'node') {\n      throw new Error('Expect node type');\n    }\n    super(root, parent);\n    this.graph = graph;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: NodeData, parentData: ParentData | null) {\n    this.id = Node.getId(data);\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    this.fromEdges = new Set();\n    this.toEdges = new Set();\n    const typeClass = nodeTypeFactory(data);\n    if (!this.nodeType || this.nodeType.constructor !== typeClass) {\n      this.nodeType = new typeClass(this, data);\n    } else {\n      this.nodeType.updateData(data);\n    }\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      draggable: true,\n      id: this.fullId,\n      x: this.position.x,\n      y: this.position.y,\n      children: this.nodeType.render(),\n    };\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    return this.nodeType.findPort(id);\n  }\n  public getBoundingBoxSize() {\n    return this.nodeType.getBoundingBoxSize();\n  }\n  public distanceToBorder(angle: number) {\n    return this.nodeType.distanceToBorder(angle);\n  }\n}\n","import {EdgeData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\nimport Graph from '@/graph/graph/Graph';\nimport EdgeType from '@/graph/edge/type/EdgeType';\nimport edgeTypeFactory from '@/graph/edge/type/edgeTypeFactory';\nimport Port from '@/graph/base/Port';\nimport Node from '@/graph/node/Node';\n\nexport default class Edge implements Renderable {\n  public static getId(data: EdgeData) {\n    return data.id || `${data.from}-${data.to}`;\n  }\n  private static findParentNodeOrGraph(node: Positioned | null)\n    : Node | Graph | null {\n    while (node && !(node instanceof Graph || node instanceof Node)) {\n      node = node.parent;\n    }\n    return node;\n  }\n  public from!: string;\n  public to!: string;\n  public depth!: number;\n  public fullId!: string;\n  public readonly root: Root;\n  public readonly graph: Graph | null;\n  public readonly parent: Positioned | null;\n  public id!: string;\n  public fromPort!: Port;\n  public toPort!: Port;\n  public fromNodeOrGraph!: Node | Graph;\n  public toNodeOrGraph!: Node | Graph;\n  private edgeType!: EdgeType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'edge') {\n      throw new Error('Expect edge type');\n    }\n    this.root = root;\n    this.graph = graph;\n    this.parent = parent;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: EdgeData, parentData: ParentData | null) {\n    this.id = Edge.getId(data);\n    this.from = data.from;\n    this.to = data.to;\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    if (!this.graph) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.graph.findPort(this.from.split(':'));\n    const toPort = this.graph.findPort(this.to.split(':'));\n    if (!fromPort || !toPort) {\n      throw new Error('Unknown start or end port for edge');\n    }\n    this.fromPort = fromPort;\n    this.toPort = toPort;\n    if (this.fromNodeOrGraph) {\n      this.fromNodeOrGraph.fromEdges.delete(this);\n    }\n    if (this.toNodeOrGraph) {\n      this.toNodeOrGraph.toEdges.delete(this);\n    }\n    const fromNodeOrGraph = Edge.findParentNodeOrGraph(fromPort);\n    const toNodeOrGraph = Edge.findParentNodeOrGraph(toPort);\n    if (!fromNodeOrGraph || !toNodeOrGraph) {\n      throw new Error('Unknown start or end node for edge');\n    }\n    fromNodeOrGraph.fromEdges.add(this);\n    toNodeOrGraph.toEdges.add(this);\n    this.fromNodeOrGraph = fromNodeOrGraph;\n    this.toNodeOrGraph = toNodeOrGraph;\n    const typeClass = edgeTypeFactory(data);\n    if (!this.edgeType || this.edgeType.constructor !== typeClass) {\n      this.edgeType = new typeClass(this, data);\n    } else {\n      this.edgeType.updateData(data);\n    }\n  }\n  public fullyUpdatePosition() {\n    this.edgeType.fullyUpdatePosition();\n  }\n  public updatePosition() {\n    this.edgeType.updatePosition();\n  }\n  public getControlPoints(): Positioned[] {\n    return this.edgeType.getControlPoints();\n  }\n  public render() {\n    return this.edgeType.render();\n  }\n}\n","import Root from '@/graph/Root';\nimport Edge from '@/graph/edge/Edge';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\nimport {RenderableData} from '@/graph/base/dataInput';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface RenderableConstructor {\n  new (root: Root,\n       graph: Graph | null,\n       parent: Positioned | null,\n       data: RenderableData,\n       parentData: ParentData | null): Renderable;\n  getId(data: RenderableData): string;\n}\n\nexport default function renderableFactory(data: RenderableData)\n    : RenderableConstructor {\n  switch (data.type) {\n    case 'node':\n      return Node;\n    case 'edge':\n      return Edge;\n    case 'graph':\n      return Graph;\n    default:\n      throw new Error('Unknown renderable object');\n  }\n}\n","export default \"digraph stdThreadJoin {\\nlabel=\\\" VFG of stdThreadJoin\\\"\\ngraph [rankdir=\\\"LR\\\"]\\nsubgraph cluster_input {\\nlabel=\\\"Inputs\\\"\\nstyle=filled\\ncolor=black\\nfillcolor=darkolivegreen1\\nN912 [label=\\\"N912\\\\n[arg:stdThreadJoin_0]\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN913 [label=\\\"N913\\\\n[arg:stdThreadJoin_0]*\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\n} # end of input\\nsubgraph cluster_output {\\nlabel=\\\"Outputs\\\"\\nstyle=filled\\ncolor=black\\nfillcolor=goldenrod1\\nN940 [label=\\\"N940\\\\n_\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\n} # end of output\\n# body nodes\\nN919 [label=\\\"N919\\\\n&dummy\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN925 [label=\\\"N925\\\\n0\\\", style=filled, fillcolor=\\\"lightgrey\\\", shape=box]\\nN926 [label=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>>, shape=none]\\nN927 [label=\\\"N927\\\\nDEREF\\\", style=filled, fillcolor=\\\"gainsboro\\\", shape=box]\\nN928 [label=\\\"N928\\\\nstdThreadJoin::6*\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN930 [label=\\\"N930\\\\n[arg:_pthread_join_0]\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\nN931 [label=\\\"N931\\\\n[arg:_pthread_join_1]\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\nN932 [label=\\\"N932\\\\nstdThreadJoin::8\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN933 [label=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>>, shape=none]\\nN934 [label=\\\"N934\\\\n1\\\", style=filled, fillcolor=\\\"lightgrey\\\", shape=box]\\nN937 [label=\\\"N937\\\\n&gamma;\\\", style=filled, fillcolor=\\\"darksalmon\\\", shape=box]\\n# proxy\\nP595 [label=\\\"\\\",style=filled,color=crimson,fillcolor=crimson,shape=circle,height=0.05,width=0.05]\\nP596 [label=\\\"\\\",style=filled,color=crimson,fillcolor=crimson,shape=circle,height=0.05,width=0.05]\\n# end of body\\nN937 -> N940\\nN912 -> N926:op_1\\nN925 -> N926:op_2\\nN925 -> N926:op_3\\nN926:top -> N927\\nN928 -> N930\\nN919 -> N931\\nN925 -> N933:op_1\\nN932 -> N933:op_2\\nN925 -> P595 [arrowhead=none]\\nP595 -> N937\\nN933:top -> P595 [label=\\\"N933\\\",style=dotted,color=crimson]\\nN934 -> P596 [arrowhead=none]\\nP596 -> N937\\nN933:top -> P596 [label=\\\"!(N933)\\\",style=dotted,color=crimson]\\nCS_31 [shape=record,style=bold,label=\\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\"]\\nN930 -> CS_31:cs_id_in_0\\nN931 -> CS_31:cs_id_in_1\\nCS_31:cs_id_out_0 -> N932\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"stdThreadJoin\\\",\\n  \\\"label\\\": \\\"VFG of stdThreadJoin\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"springLength\\\": 150,\\n    \\\"direction\\\": \\\"LR\\\"\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_input\\\",\\n      \\\"label\\\": \\\"Inputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darkolivegreen\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N912\\\",\\n          \\\"label\\\": \\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N913\\\",\\n          \\\"label\\\": \\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_output\\\",\\n      \\\"label\\\": \\\"Outputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"goldenrod\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N940\\\",\\n          \\\"label\\\": \\\"N940\\\\n_\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N919\\\",\\n      \\\"label\\\": \\\"N919\\\\n&dummy\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N925\\\",\\n      \\\"label\\\": \\\"N925\\\\n0\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"lightgrey\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N926\\\",\\n      \\\"label\\\": \\\"<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>\\\",\\n      \\\"shape\\\": \\\"table\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N927\\\",\\n      \\\"label\\\": \\\"N927\\\\nDEREF\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"gainsboro\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N928\\\",\\n      \\\"label\\\": \\\"N928\\\\nstdThreadJoin::6*\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N930\\\",\\n      \\\"label\\\": \\\"N930\\\\n[arg:_pthread_join_0]\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N931\\\",\\n      \\\"label\\\": \\\"N931\\\\n[arg:_pthread_join_1]\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N932\\\",\\n      \\\"label\\\": \\\"N932\\\\nstdThreadJoin::8\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N933\\\",\\n      \\\"label\\\": \\\"<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>\\\",\\n      \\\"shape\\\": \\\"table\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N934\\\",\\n      \\\"label\\\": \\\"N934\\\\n1\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"lightgrey\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N937\\\",\\n      \\\"label\\\": \\\"N937\\\\n&gamma;\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darksalmon\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"P595\\\",\\n      \\\"label\\\": \\\"\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"color\\\": \\\"crimson\\\",\\n      \\\"fillColor\\\": \\\"crimson\\\",\\n      \\\"shape\\\": \\\"circle\\\",\\n      \\\"radius\\\": 0.025\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"P596\\\",\\n      \\\"label\\\": \\\"\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"color\\\": \\\"crimson\\\",\\n      \\\"fillColor\\\": \\\"crimson\\\",\\n      \\\"shape\\\": \\\"circle\\\",\\n      \\\"radius\\\": 0.025\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N937\\\",\\n      \\\"to\\\": \\\"N940\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N912\\\",\\n      \\\"to\\\": \\\"N926:op_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N926:op_2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N926:op_3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N926:top\\\",\\n      \\\"to\\\": \\\"N927\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N928\\\",\\n      \\\"to\\\": \\\"N930\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N919\\\",\\n      \\\"to\\\": \\\"N931\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N933:op_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N932\\\",\\n      \\\"to\\\": \\\"N933:op_2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"P595\\\",\\n      \\\"arrowHead\\\": \\\"none\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"P595\\\",\\n      \\\"to\\\": \\\"N937\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N933:top\\\",\\n      \\\"to\\\": \\\"P595\\\",\\n      \\\"label\\\": \\\"N933\\\",\\n      \\\"style\\\": \\\"dotted\\\",\\n      \\\"color\\\": \\\"crimson\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N934\\\",\\n      \\\"to\\\": \\\"P596\\\",\\n      \\\"arrowHead\\\": \\\"none\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"P596\\\",\\n      \\\"to\\\": \\\"N937\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N933:top\\\",\\n      \\\"to\\\": \\\"P596\\\",\\n      \\\"label\\\": \\\"!(N933)\\\",\\n      \\\"style\\\": \\\"dotted\\\",\\n      \\\"color\\\": \\\"crimson\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"CS_31\\\",\\n      \\\"shape\\\": \\\"record\\\",\\n      \\\"style\\\": \\\"bold\\\",\\n      \\\"direction\\\": \\\"vertical\\\",\\n      \\\"label\\\": \\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N930\\\",\\n      \\\"to\\\": \\\"CS_31:cs_id_in_0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N931\\\",\\n      \\\"to\\\": \\\"CS_31:cs_id_in_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"CS_31:cs_id_out_0\\\",\\n      \\\"to\\\": \\\"N932\\\"\\n    }\\n  ]\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"node\\\",\\n  \\\"id\\\": \\\"N926\\\",\\n  \\\"label\\\": \\\"hello\\\\\\\\nworld |{ b |{c|<here> d|e}| f}| g | h\\\",\\n  \\\"shape\\\": \\\"record\\\"\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"stdThreadJoin\\\",\\n  \\\"label\\\": \\\"VFG of stdThreadJoin\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"springLength\\\": 150\\n  },\\n  \\\"component\\\": {\\n    \\\"direction\\\": \\\"LR\\\"\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_input\\\",\\n      \\\"component\\\": {\\n        \\\"direction\\\": \\\"TD\\\"\\n      },\\n      \\\"label\\\": \\\"Inputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darkolivegreen\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N921\\\",\\n          \\\"label\\\": \\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N913\\\",\\n          \\\"label\\\": \\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_output\\\",\\n      \\\"label\\\": \\\"Outputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"goldenrod\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N940\\\",\\n          \\\"label\\\": \\\"N940\\\\n_\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"cluster_input\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"direction\\\": \\\"LR\\\"\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"0\\\",\\n      \\\"label\\\": \\\"0\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"label\\\": \\\"1\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"label\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"3\\\",\\n      \\\"label\\\": \\\"3\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"4\\\",\\n      \\\"label\\\": \\\"4\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"5\\\",\\n      \\\"label\\\": \\\"5\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"6\\\",\\n      \\\"label\\\": \\\"6\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"7\\\",\\n      \\\"label\\\": \\\"7\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"8\\\",\\n      \\\"label\\\": \\\"8\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"9\\\",\\n      \\\"label\\\": \\\"9\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"10\\\",\\n      \\\"label\\\": \\\"10\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"11\\\",\\n      \\\"label\\\": \\\"11\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"2\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"4\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"5\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"8\\\",\\n      \\\"to\\\": \\\"5\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"7\\\",\\n      \\\"to\\\": \\\"4\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"6\\\",\\n      \\\"to\\\": \\\"3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"10\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"2\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"9\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"8\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"9\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"10\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"6\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"7\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    }\\n  ]\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"node\\\",\\n  \\\"id\\\": \\\"N926\\\",\\n  \\\"label\\\": \\\"<TABLE BORDER=\\\\\\\"1\\\\\\\" CELLBORDER=\\\\\\\"1\\\\\\\" CELLSPACING=\\\\\\\"2\\\\\\\" CELLPADDING=\\\\\\\"4\\\\\\\"><TR><TD ROWSPAN=\\\\\\\"3\\\\\\\"><FONT COLOR=\\\\\\\"red\\\\\\\">hello</FONT><BR/>world</TD><TD COLSPAN=\\\\\\\"3\\\\\\\">b</TD><TD ROWSPAN=\\\\\\\"3\\\\\\\" BGCOLOR=\\\\\\\"lightgrey\\\\\\\">g</TD><TD ROWSPAN=\\\\\\\"3\\\\\\\">h</TD></TR><TR><TD>c</TD><TD PORT=\\\\\\\"here\\\\\\\">d</TD><TD>e</TD></TR><TR><TD COLSPAN=\\\\\\\"3\\\\\\\">f</TD></TR></TABLE>\\\",\\n  \\\"shape\\\": \\\"table\\\"\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"hello\\\",\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"0\\\",\\n      \\\"label\\\": \\\"0\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"label\\\": \\\"1\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"label\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"1\\\",\\n      \\\"lineWidth\\\": 5,\\n      \\\"pointerWidth\\\": 20,\\n      \\\"pointerHeight\\\": 30\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"straight\\\"\\n    }\\n  ]\\n}\\n\"","import EventEmitter from '@/graph/base/EventEmitter';\nimport { RenderableData } from '@/graph/base/dataInput';\nimport renderableFactory from '@/graph/base/renderableFactory';\n\nexport default class Root extends EventEmitter {\n  public ctx: CanvasRenderingContext2D;\n  public child: (Renderable & Port) | null;\n  private stepTimer: number;\n  private fixed: Port[];\n  public constructor() {\n    super();\n    this.ctx = document.createElement('canvas').getContext('2d')!;\n    this.child = null;\n    this.stepTimer = setInterval(() => {\n      if (this.child instanceof Graph) {\n        if (this.child.step()) {\n          this.informRender();\n        }\n      }\n    }, 1000 / 60);\n    this.fixed = [];\n  }\n  public findPort(id: string) {\n    const idArray = id.split(':');\n    if (this.child) {\n      if (this.child.id !== idArray[0]) {\n        return null;\n      }\n      return this.child.findPort(idArray.slice(1));\n    }\n    return null;\n  }\n  public setFixed(fixed: string[]) {\n    this.clearFixed();\n    this.fixed = fixed.map((id) => {\n      const port = this.findPort(id);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      if (!(port instanceof Graph || port instanceof Node)) {\n        throw new Error('Wrong type of port');\n      }\n      port.fixed = true;\n      return port;\n    });\n  }\n  public clearFixed() {\n    for (const port of this.fixed) {\n      port.fixed = false;\n    }\n  }\n  public movePort(id: string,\n                  delta: { deltaX: number, deltaY: number }) {\n    const port = this.findPort(id);\n    if (port === null) {\n      throw new Error('Cannot find the port');\n    }\n    if (!(port instanceof Graph || port instanceof Node)) {\n      throw new Error('Wrong type of port');\n    }\n    port.getPosition().x += delta.deltaX;\n    port.getPosition().y += delta.deltaY;\n    for (const edge of [...port.fromEdges, ...port.toEdges]) {\n      edge.updatePosition();\n    }\n    this.informRender();\n  }\n  public updateData(data: RenderableData) {\n    const newClass = renderableFactory(data);\n    if (!this.child || this.child.constructor !== newClass) {\n      const renderable = new newClass(this, null, null, data, null);\n      // noinspection SuspiciousTypeOfGuard\n      if (!(renderable instanceof Port)) {\n        throw new Error('Root element must be renderable port');\n      }\n      this.child = renderable;\n    } else {\n      this.child.updateData(data, null);\n    }\n    this.informRender();\n  }\n  public fullyUpdateData(data: RenderableData) {\n    const renderable = new (renderableFactory(data))(\n      this, null, null, data, null);\n    // noinspection SuspiciousTypeOfGuard\n    if (!(renderable instanceof Port)) {\n      throw new Error('Root element must be renderable port');\n    }\n    this.child = renderable;\n    this.informRender();\n  }\n  public informRender() {\n    if (this.child) {\n      this.emit('render', [this.child.render()]);\n    }\n  }\n}\n\nexport const globalRoot = new Root();\n// @ts-ignore\nwindow.globalRoot = globalRoot;\nexport const globalParsers\n    : { [input: string]: (input: string) => RenderableData } = {\n  json(input: string): RenderableData { return JSON.parse(input); },\n  graphviz(/* input: string */): RenderableData { throw new Error('Not implemented'); },\n};\n\n// Examples\nimport stdThreadJoinGv from '!raw-loader!./examples/stdThreadJoin.gv';\nimport stdThreadJoinJson from '!raw-loader!./examples/stdThreadJoin.txt';\nimport recordJson from '!raw-loader!./examples/record.txt';\nimport subgraphJson from '!raw-loader!./examples/subgraph.txt';\nimport icosahedronJson from '!raw-loader!./examples/icosahedron.txt';\nimport tableJson from '!raw-loader!./examples/table.txt';\nimport edgeJson from '!raw-loader!./examples/edge.txt';\nimport Renderable from '@/graph/base/Renderable';\nimport Port from '@/graph/base/Port';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\n\ninterface Example {\n  name: string;\n  parser: string;\n  content: string;\n}\n\nexport const globalExamples: Example[] = [\n  {\n    name: 'stdThreadJoinGv',\n    parser: 'graphviz',\n    content: stdThreadJoinGv,\n  },\n  {\n    name: 'stdThreadJoinJson',\n    parser: 'json',\n    content: stdThreadJoinJson,\n  },\n  {\n    name: 'record',\n    parser: 'json',\n    content: recordJson,\n  },\n  {\n    name: 'subgraph',\n    parser: 'json',\n    content: subgraphJson,\n  },\n  {\n    name: 'icosahedronJson',\n    parser: 'json',\n    content: icosahedronJson,\n  },\n  {\n    name: 'table',\n    parser: 'json',\n    content: tableJson,\n  },\n  {\n    name: 'edge',\n    parser: 'json',\n    content: edgeJson,\n  },\n];\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({ width: _vm.width, height: _vm.height, position: 'relative' })},[(_vm.enableHit)?_c('canvas',{ref:\"hitCanvas\",staticStyle:{\"position\":\"absolute\",\"display\":\"none\"}}):_vm._e(),_c('canvas',_vm._g({ref:\"canvas\",staticStyle:{\"position\":\"absolute\"}},_vm.$listeners))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Provide, Prop, Watch} from 'vue-property-decorator';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\n@Component\nexport default class MyCanvas extends Vue {\n  @Prop({ type: Number, required: true }) public readonly width!: number;\n  @Prop({ type: Number, required: true }) public readonly height!: number;\n  @Prop(Boolean) public readonly enableHit: boolean | undefined;\n  @Prop(Object) public readonly data: AnyShape | undefined;\n  private context: CanvasRenderingContext2D | null = null;\n  private hitContext: CanvasRenderingContext2D | null = null;\n  private hitColorMap: { [color: string]: string } = {};\n  private hitIdMap: { [id: string]: string } = {};\n  public mounted() {\n    this.context = (this.$refs.canvas as HTMLCanvasElement)\n      .getContext('2d');\n    (this.$refs.canvas as HTMLCanvasElement).width = this.width;\n    (this.$refs.canvas as HTMLCanvasElement).height = this.height;\n    if (this.enableHit) {\n      this.hitContext = (this.$refs.hitCanvas as HTMLCanvasElement)\n        .getContext('2d');\n      (this.$refs.hitCanvas as HTMLCanvasElement).width = this.width;\n      (this.$refs.hitCanvas as HTMLCanvasElement).height = this.height;\n    }\n  }\n  @Provide()\n  public generateHitColor(id: string): string {\n    if (this.hitIdMap[id]) {\n      return this.hitIdMap[id];\n    }\n    while (true) {\n      const r = Math.round(Math.random() * 255);\n      const g = Math.round(Math.random() * 255);\n      const b = Math.round(Math.random() * 255);\n      const color = `rgb(${r},${g},${b})`;\n      if (!this.hitColorMap[color]) {\n        this.hitColorMap[color] = id;\n        this.hitIdMap[id] = color;\n        return color;\n      }\n    }\n  }\n  public updateCanvas() {\n    if (!this.context) {\n      return;\n    }\n    const ctx: CanvasRenderingContext2D = this.context;\n    const hitCtx = this.hitContext;\n    ctx.clearRect(0, 0, this.width, this.height);\n    if (hitCtx) {\n      hitCtx.clearRect(0, 0, this.width, this.height);\n      this.hitColorMap = {};\n      this.hitIdMap = {};\n    }\n    const updateShape = (shape: AnyShape,\n                         draggable: boolean,\n                         draggableId: string) => {\n      const finalDraggable = shape.draggable || draggable;\n      const finalId = shape.id || draggableId;\n      switch (shape.is) {\n        case 'group': {\n          ctx.save();\n          ctx.translate(shape.x || 0, shape.y || 0);\n          ctx.scale(shape.scaleX || 1, shape.scaleY || 1);\n          if (hitCtx) {\n            hitCtx.save();\n            hitCtx.translate(shape.x || 0, shape.y || 0);\n            hitCtx.scale(shape.scaleX || 1, shape.scaleY || 1);\n          }\n          if (shape.children) {\n            for (const childShape of shape.children) {\n              updateShape(childShape, shape.draggable || draggable,\n                shape.id || draggableId);\n            }\n          }\n          ctx.restore();\n          if (hitCtx) {\n            hitCtx.restore();\n          }\n          break;\n        }\n        case 'rect': {\n          ctx.beginPath();\n          ctx.rect(shape.x || 0, shape.y || 0,\n            shape.width || 0, shape.height || 0);\n          if (shape.fill) {\n            ctx.fillStyle = shape.fill;\n            ctx.fill();\n          }\n          if (shape.stroke) {\n            ctx.lineWidth = shape.strokeWidth || 1;\n            ctx.strokeStyle = shape.stroke;\n            ctx.stroke();\n          }\n          if (hitCtx && finalDraggable && finalId) {\n            const color = this.generateHitColor(finalId);\n            hitCtx.beginPath();\n            hitCtx.rect(shape.x || 0, shape.y || 0,\n              shape.width || 0, shape.height || 0);\n            hitCtx.fillStyle = color;\n            hitCtx.fill();\n            if (shape.stroke) {\n              hitCtx.lineWidth = shape.strokeWidth || 1;\n              hitCtx.strokeStyle = color;\n              hitCtx.stroke();\n            }\n          }\n          break;\n        }\n        case 'text': {\n          const fontSize = shape.fontSize || 12;\n          const lineHeight = shape.lineHeight || 1.2;\n          const padding = shape.padding || 4;\n          ctx.font = `${fontSize}px ${shape.fontFamily || 'sans-serif'}`;\n          const lines = shape.text ? shape.text.split('\\n') : [];\n          const linesWidth = lines.map((x: string) => ctx.measureText(x).width);\n          const width = Math.max(...linesWidth, 0);\n          let posY = (shape.y || 0) + padding;\n          ctx.textBaseline = 'top';\n          ctx.fillStyle = shape.fill || 'black';\n          for (let i = 0; i < lines.length; ++i) {\n            let posX = (shape.x || 0) + padding;\n            if (shape.align === 'left') {\n              // do nothing\n            } else if (shape.align === 'right') {\n              posX += width - linesWidth[i];\n            } else {\n              posX += (width - linesWidth[i]) / 2;\n            }\n            ctx.fillText(lines[i], posX,\n              posY + 0.5 * (lineHeight - 1) * fontSize);\n            posY += lineHeight * fontSize;\n          }\n          break;\n        }\n        case 'line': {\n          const points = shape.points || [];\n          ctx.strokeStyle = shape.stroke || 'black';\n          ctx.lineWidth = shape.strokeWidth || 1;\n          ctx.beginPath();\n          ctx.moveTo(points[0] || 0, points[1] || 0);\n          ctx.lineTo(points[2] || 0, points[3] || 0);\n          ctx.stroke();\n          break;\n        }\n        case 'quadraticLine': {\n          const points = shape.points || [];\n          ctx.strokeStyle = shape.stroke || 'black';\n          ctx.lineWidth = shape.strokeWidth || 1;\n          ctx.beginPath();\n          ctx.moveTo(points[0] || 0, points[1] || 0);\n          ctx.quadraticCurveTo(points[2] || 0, points[3] || 0,\n            points[4] || 0, points[5] || 0);\n          ctx.stroke();\n          break;\n        }\n        case 'pointer': {\n          const x = shape.x || 0;\n          const y = shape.y || 0;\n          const angle = shape.angle || 0;\n          const width = shape.width || 10;\n          const height = shape.height || 15;\n          const middleX = x + height * Math.cos(angle);\n          const middleY = y + height * Math.sin(angle);\n          const deltaX = width / 2 * Math.sin(angle);\n          const deltaY = -width / 2 * Math.cos(angle);\n          ctx.fillStyle = shape.fill || 'black';\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          ctx.lineTo(middleX + deltaX, middleY + deltaY);\n          ctx.lineTo(middleX - deltaX, middleY - deltaY);\n          ctx.closePath();\n          ctx.fill();\n          break;\n        }\n        case 'rectWithWhole': {\n          ctx.beginPath();\n          ctx.moveTo(shape.outerLeft || 0, shape.outerTop || 0);\n          ctx.lineTo(shape.outerRight || 0, shape.outerTop || 0);\n          ctx.lineTo(shape.outerRight || 0, shape.outerBottom || 0);\n          ctx.lineTo(shape.outerLeft || 0, shape.outerBottom || 0);\n          ctx.lineTo(shape.outerLeft || 0, shape.outerTop || 0);\n          ctx.moveTo(shape.innerLeft || 0, shape.innerTop || 0);\n          ctx.lineTo(shape.innerLeft || 0, shape.innerBottom || 0);\n          ctx.lineTo(shape.innerRight || 0, shape.innerBottom || 0);\n          ctx.lineTo(shape.innerRight || 0, shape.innerTop || 0);\n          ctx.lineTo(shape.innerLeft || 0, shape.innerTop || 0);\n          ctx.fillStyle = shape.fill || 'white';\n          ctx.fill();\n          break;\n        }\n        default:\n          throw new Error(`Unknown shape`);\n      }\n    };\n    if (this.data) {\n      updateShape(this.data, false, '');\n    }\n  }\n  public getIdFromHitPoint(x: number, y: number): string | undefined {\n    if (this.hitContext) {\n      const pixel = this.hitContext.getImageData(x, y, 1, 1).data;\n      const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\n      return this.hitColorMap[color];\n    }\n  }\n  @Watch('width')\n  public onWidthChanged() {\n    (this.$refs.canvas as HTMLCanvasElement).width = this.width;\n    if (this.enableHit) {\n      (this.$refs.hitCanvas as HTMLCanvasElement).width = this.width;\n    }\n    this.updateCanvas();\n  }\n  @Watch('height')\n  public onHeightChanged() {\n    (this.$refs.canvas as HTMLCanvasElement).height = this.height;\n    if (this.enableHit) {\n      (this.$refs.hitCanvas as HTMLCanvasElement).height = this.height;\n    }\n    this.updateCanvas();\n  }\n  @Watch('data')\n  public onDataChanged() {\n    this.updateCanvas();\n  }\n}\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MyCanvas.vue?vue&type=template&id=5d5105f1&\"\nimport script from \"./MyCanvas.vue?vue&type=script&lang=ts&\"\nexport * from \"./MyCanvas.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\nimport {globalRoot} from '@/graph/Root';\nimport MyCanvas from '@/components/MyCanvas.vue';\nimport Port from '@/graph/base/Port';\n\n@Component({\n  components: {\n    MyCanvas,\n  },\n})\nexport default class Graph extends Vue {\n  @Prop({ type: Number, required: true }) public readonly width!: number;\n  @Prop({ type: Number, required: true }) public readonly height!: number;\n  @Prop({ type: Array, default() { return []; }})\n  public readonly data!: object[];\n  private x = 0;\n  private y = 0;\n  private scale = 1;\n  private size = { width: 0, height: 0 };\n  private draggedId: null | string = null;\n  private mouseDragActive = false;\n  private mouseLastCoords = {\n    x: 0,\n    y: 0,\n  };\n  private maxThumbnailLength = 160;\n  private minThumbnailLength = 100;\n  private thumbnailPadding = 10;\n  private thumbnailMouseDragActive = false;\n  private thumbnailMouseLastCoords = {\n    x: 0,\n    y: 0,\n  };\n  get stageX() {\n    return this.width / 2 + this.x;\n  }\n  get stageY() {\n    return this.height / 2 + this.y;\n  }\n  public mounted() {\n    this.updateSize();\n  }\n  @Watch('data')\n  public onDataChanged() {\n    this.updateSize();\n  }\n  public updateSize() {\n    // noinspection SuspiciousTypeOfGuard\n    if (globalRoot.child instanceof Port) {\n      this.size = globalRoot.child.getBoundingBoxSize();\n    }\n  }\n  get mainCanvasData() {\n    return {\n      is: 'group',\n      x: this.stageX,\n      y: this.stageY,\n      scaleX: this.scale,\n      scaleY: this.scale,\n      children: this.data,\n    };\n  }\n  get thumbnailCanvasData() {\n    const scale = 1 / this.thumbnailFactor;\n    function deepCopyAndRemoveDraggable(shape: any) {\n      const copy = Object.assign({}, shape);\n      if (copy.draggable) {\n        delete copy.draggable;\n      }\n      if (copy.children) {\n        copy.children = copy.children.map((x: any) =>\n          deepCopyAndRemoveDraggable(x));\n      }\n      return copy;\n    }\n    const data = this.data.map((x: any) => deepCopyAndRemoveDraggable(x));\n    const viewportX = (-this.width / 2 - this.x) / this.scale;\n    const viewportY = (-this.height / 2 - this.y) / this.scale;\n    const viewportWidth = this.width / this.scale;\n    const viewportHeight = this.height / this.scale;\n    data.push({\n      is: 'rectWithWhole',\n      id: 'mask',\n      fill: 'rgba(0,0,0,0.2)',\n      outerLeft: -this.thumbnailWidth * this.thumbnailFactor / 2,\n      outerRight: this.thumbnailWidth * this.thumbnailFactor / 2,\n      outerTop: -this.thumbnailHeight * this.thumbnailFactor / 2,\n      outerBottom: this.thumbnailHeight * this.thumbnailFactor / 2,\n      innerLeft: viewportX,\n      innerRight: viewportX + viewportWidth,\n      innerTop: viewportY,\n      innerBottom: viewportY + viewportHeight,\n    });\n    data.push({\n      is: 'rect',\n      id: 'viewport',\n      draggable: true,\n      x: viewportX,\n      y: viewportY,\n      width: viewportWidth,\n      height: viewportHeight,\n      stroke: '#3eaf7c',\n      strokeWidth: this.thumbnailFactor,\n    });\n    return {\n      is: 'group',\n      x: this.thumbnailWidth / 2,\n      y: this.thumbnailHeight / 2,\n      scaleX: scale,\n      scaleY: scale,\n      children: data,\n    };\n  }\n  get thumbnailFactor() {\n    return Math.max(this.size.width / this.maxThumbnailLength,\n      this.size.height / this.maxThumbnailLength, 1);\n  }\n  get thumbnailWidth() {\n    return Math.max(this.size.width / this.thumbnailFactor,\n      this.minThumbnailLength) + 2 * this.thumbnailPadding;\n  }\n  get thumbnailHeight() {\n    return Math.max(this.size.height / this.thumbnailFactor,\n      this.minThumbnailLength) + 2 * this.thumbnailPadding;\n  }\n  public wheel(e: WheelEvent) {\n    const scaleBy = 1.1;\n    e.preventDefault();\n    const pos = this.translateMouseEvent(e);\n    const mousePointTo = {\n      x: (pos.x - this.stageX) / this.scale,\n      y: (pos.y - this.stageY) / this.scale,\n    };\n    this.scale = e.deltaY < 0 ? this.scale * scaleBy : this.scale / scaleBy;\n    const newPos = {\n      x: -(mousePointTo.x - pos.x / this.scale) *\n        this.scale,\n      y: -(mousePointTo.y - pos.y / this.scale) *\n        this.scale,\n    };\n    this.x = newPos.x - this.width / 2;\n    this.y = newPos.y - this.height / 2;\n  }\n  public translateMouseEvent(e: MouseEvent): {x: number, y: number} {\n    let elementOffsetX = 0;\n    let elementOffsetY = 0;\n    let target = e.currentTarget;\n    while (target) {\n      elementOffsetX += (target as HTMLElement).offsetLeft;\n      elementOffsetY += (target as HTMLElement).offsetTop;\n      target = (target as HTMLElement).offsetParent;\n    }\n    return {\n      x: e.pageX - elementOffsetX,\n      y: e.pageY - elementOffsetY,\n    };\n  }\n  public mousedown(e: MouseEvent) {\n    this.mouseDragActive = true;\n    this.mouseLastCoords = {\n      x: e.pageX,\n      y: e.pageY,\n    };\n    const pos = this.translateMouseEvent(e);\n    const id = (this.$refs.mainCanvas as any).getIdFromHitPoint(pos.x, pos.y);\n    if (id) {\n      this.draggedId = id;\n      globalRoot.setFixed([id]);\n    }\n  }\n  public mouseup() {\n    this.mouseDragActive = false;\n    this.draggedId = null;\n    globalRoot.clearFixed();\n  }\n  public mousemove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.mouseDragActive = false;\n    }\n    if (this.mouseDragActive || this.draggedId) {\n      const newCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      const deltaX = newCoords.x - this.mouseLastCoords.x;\n      const deltaY = newCoords.y - this.mouseLastCoords.y;\n      if (this.draggedId) {\n          globalRoot.movePort(this.draggedId, {\n              deltaX: deltaX / this.scale,\n              deltaY: deltaY / this.scale,\n          });\n      } else {\n        this.x += deltaX;\n        this.y += deltaY;\n      }\n      this.mouseLastCoords = newCoords;\n    }\n  }\n  public thumbnailMousedown(e: MouseEvent) {\n    const pos = this.translateMouseEvent(e);\n    const id = (this.$refs.thumbnailCanvas as any)\n      .getIdFromHitPoint(pos.x, pos.y);\n    if (id === 'viewport') {\n      this.thumbnailMouseDragActive = true;\n      this.thumbnailMouseLastCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n    }\n  }\n  public thumbnailMouseup() {\n    this.thumbnailMouseDragActive = false;\n  }\n  public thumbnailMousemove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.thumbnailMouseDragActive = false;\n    }\n    if (this.thumbnailMouseDragActive) {\n      const newCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      const oldCoords = this.thumbnailMouseLastCoords;\n      const scale = this.thumbnailFactor * this.scale;\n      this.x -= (newCoords.x - oldCoords.x) * scale;\n      this.y -= (newCoords.y - oldCoords.y) * scale;\n      this.thumbnailMouseLastCoords = newCoords;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Graph.vue?vue&type=template&id=31f9a6f4&scoped=true&\"\nimport script from \"./Graph.vue?vue&type=script&lang=ts&\"\nexport * from \"./Graph.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Graph.vue?vue&type=style&index=0&id=31f9a6f4&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"31f9a6f4\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Watch } from 'vue-property-decorator';\nimport CollapsiblePane from './components/CollapsiblePane.vue';\nimport Graph from './components/Graph.vue';\nimport {\n  globalRoot,\n  globalParsers,\n  globalExamples,\n} from './graph/Root';\nimport 'vue-awesome/icons/upload';\nimport 'vue-awesome/icons/sync';\nimport _ from 'lodash';\n\n@Component({\n  components: {\n    CollapsiblePane,\n    Graph,\n  },\n})\nexport default class App extends Vue {\n  get desktopLayout() {\n    return this.windowWidth > 719;\n  }\n  get realSettingsWidth() {\n    return this.desktopLayout ? this.settingsWidth : this.canvasWidth;\n  }\n  // UI data\n  // noinspection JSUnusedLocalSymbols\n  private settingsOpen = true;\n  private settingsWidth = 300;\n  private minGraphWidth = 150;\n  private minSettingsWidth = 150;\n  private sizerMouseActive = false;\n  private sizerTouchActive = false;\n  private windowWidth = document.documentElement.clientWidth;\n  private windowHeight = document.documentElement.clientHeight;\n  private canvasWidth = 0;\n  private canvasHeight = 0;\n  // Input data\n  private parser = 'json';\n  private rawInput = '';\n  private parseError = null;\n  private parsedInput = '';\n  // noinspection JSUnusedLocalSymbols\n  private examples = globalExamples;\n  // Rendered data\n  // noinspection JSMismatchedCollectionQueryUpdate\n  private rendered: object[] = [];\n  public parseInput() {\n    try {\n      if (this.rawInput) {\n        const parsed = globalParsers[this.parser](this.rawInput);\n        this.parsedInput = JSON.stringify(parsed, null, 2);\n        globalRoot.updateData(parsed);\n      } else {\n        this.parsedInput = '';\n      }\n      this.parseError = null;\n    } catch (e) {\n      /* tslint:disable:no-console */\n      console.log(e);\n      this.parseError = e.stack;\n    }\n  }\n  public mounted() {\n    window.addEventListener('resize', this.getSize);\n    this.updateCanvasSize();\n    globalRoot.addEventListener('render', _.throttle((data: object[]) => {\n      this.rendered = data;\n      /* tslint:disable:no-console */\n      // console.log(JSON.stringify(data, null, 2));\n    }, 1000 / 60));\n  }\n  public beforeDestroy() {\n    window.removeEventListener('resize', this.getSize);\n  }\n  @Watch('settingsWidth')\n  public onSettingsWidthChanged() {\n    this.updateCanvasSize();\n  }\n  @Watch('parser')\n  public onParserChanged() {\n    this.parseInput();\n  }\n  @Watch('rawInput')\n  public onRawInputChanged() {\n    this.parseInput();\n  }\n  public redraw() {\n    globalRoot.fullyUpdateData(JSON.parse(this.parsedInput));\n  }\n  public selectExample(i: number) {\n    const example = globalExamples[i];\n    this.parser = example.parser;\n    this.rawInput = example.content;\n  }\n  public inputFileChange(e: InputEvent) {\n    const file = (e.target as HTMLInputElement).files![0];\n    if (!file) {\n      return;\n    }\n    switch (file.type) {\n      case 'application/json':\n        this.parser = 'json';\n        break;\n      case 'text/vnd.graphviz':\n        this.parser = 'graphviz';\n        break;\n      default:\n        alert('Unknown file type');\n        return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent<FileReader>) => {\n      this.rawInput = evt.target!.result as string;\n    };\n    reader.readAsText(file);\n  }\n  public getSize() {\n    this.windowWidth = document.documentElement.clientWidth;\n    this.windowHeight = document.documentElement.clientHeight;\n    this.$nextTick(() => this.updateCanvasSize());\n  }\n  public updateCanvasSize() {\n    this.canvasWidth = (this.$refs.canvas as HTMLElement).offsetWidth;\n    this.canvasHeight = (this.$refs.canvas as HTMLElement).offsetHeight;\n    // globalRoot.setViewportSize(this.canvasWidth, this.canvasHeight);\n  }\n  public onMainSizerMouseDown() {\n    this.sizerMouseActive = true;\n  }\n  public onMainSizerMouseUp() {\n    this.sizerMouseActive = false;\n  }\n  public onMainSizerMouseMove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.sizerMouseActive = false;\n    }\n    if (this.sizerMouseActive) {\n      let elementOffsetX = 0;\n      let target = e.currentTarget;\n      while (target) {\n        elementOffsetX += (target as HTMLElement).offsetLeft;\n        target = (target as HTMLElement).offsetParent;\n      }\n      const mouseOffsetX = e.pageX;\n      const width = (e.currentTarget! as HTMLElement).offsetWidth;\n      const offsetX = mouseOffsetX - elementOffsetX;\n      if (offsetX >= this.minGraphWidth &&\n        (width - offsetX) >= this.minSettingsWidth) {\n        this.settingsWidth = Math.round(width - offsetX);\n      }\n    }\n  }\n  public onMainSizerTouchStart() {\n    this.sizerTouchActive = true;\n  }\n  public onMainSizerTouchEnd() {\n    this.sizerTouchActive = false;\n  }\n  public onMainSizerTouchMove(e: TouchEvent) {\n    if (this.sizerTouchActive) {\n      let elementOffsetX = 0;\n      let target = e.currentTarget;\n      while (target) {\n        elementOffsetX += (target as HTMLElement).offsetLeft;\n        target = (target as HTMLElement).offsetParent;\n      }\n      const mouseOffsetX = e.touches[0].pageX;\n      const width = (e.currentTarget! as HTMLElement).offsetWidth;\n      const offsetX = mouseOffsetX - elementOffsetX;\n      if (offsetX >= this.minGraphWidth &&\n        (width - offsetX) >= this.minSettingsWidth) {\n        this.settingsWidth = Math.round(width - offsetX);\n      }\n    }\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=fc50fb16&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Icon from 'vue-awesome/components/Icon.vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n\nVue.component('v-icon', Icon);\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\""],"sourceRoot":""}