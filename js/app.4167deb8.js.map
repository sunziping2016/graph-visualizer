{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Graph.vue?be80","webpack:///./src/App.vue?7970","webpack:///./src/App.vue?b757","webpack:///./src/components/CollapsiblePane.vue?52ca","webpack:///./src/components/CollapsiblePane.vue?1fa9","webpack:///./src/components/CollapsiblePane.vue?0878","webpack:///./src/components/CollapsiblePane.vue","webpack:///./src/components/Graph.vue?9476","webpack:///./src/graph/base/EventEmitter.ts","webpack:///./src/graph/base/Positioned.ts","webpack:///./src/graph/graph/layout/GraphLayout.ts","webpack:///./src/graph/graph/layout/KamadaKawaiGraphLayout.ts","webpack:///./src/graph/graph/layout/graphLayoutFactory.ts","webpack:///./src/graph/graph/component/ComponentLayout.ts","webpack:///./src/graph/graph/component/LinearComponentLayout.ts","webpack:///./src/graph/graph/component/componentLayoutFactory.ts","webpack:///./src/graph/graph/type/GraphType.ts","webpack:///./src/graph/graph/type/BoxGraphType.ts","webpack:///./src/graph/graph/type/graphTypeFactory.ts","webpack:///./src/graph/base/Port.ts","webpack:///./src/graph/graph/physics/GraphPhysics.ts","webpack:///./src/graph/graph/physics/BarnesHutGraphPhysics.ts","webpack:///./src/graph/graph/physics/graphPhysicsFactory.ts","webpack:///./src/graph/graph/Graph.ts","webpack:///./src/graph/edge/type/EdgeType.ts","webpack:///./src/graph/edge/type/StraightEdgeType.ts","webpack:///./src/graph/edge/type/QuadraticEdgeType.ts","webpack:///./src/graph/edge/type/edgeTypeFactory.ts","webpack:///./src/graph/node/type/recordParser.ts","webpack:///./src/graph/node/type/NodeType.ts","webpack:///./src/graph/node/type/BoxNodeType.ts","webpack:///./src/graph/node/type/RecordCell.ts","webpack:///./src/graph/node/type/RecordNodeType.ts","webpack:///./src/graph/node/type/TableCell.ts","webpack:///./src/graph/node/type/TableNodeType.ts","webpack:///./src/graph/node/type/nodeTypeFactory.ts","webpack:///./src/graph/node/Node.ts","webpack:///./src/graph/edge/Edge.ts","webpack:///./src/graph/base/renderableFactory.ts","webpack:///./src/graph/Root.ts","webpack:///./src/components/MyCanvas.vue?8787","webpack:///./src/components/MyCanvas.vue?e1f3","webpack:///./src/components/MyCanvas.vue?40d2","webpack:///./src/components/MyCanvas.vue","webpack:///./src/components/Graph.vue?b1ea","webpack:///./src/components/Graph.vue?becd","webpack:///./src/components/Graph.vue","webpack:///./src/graph/parser.ts","webpack:///./src/graph/examples/stdThreadJoin.gv","webpack:///./src/graph/examples/stdThreadJoin.txt","webpack:///./src/graph/examples/record.txt","webpack:///./src/graph/examples/subgraph.txt","webpack:///./src/graph/examples/icosahedron.txt","webpack:///./src/graph/examples/table.txt","webpack:///./src/graph/examples/edge.txt","webpack:///./src/graph/examples.ts","webpack:///./src/debounce-decorator.ts","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?640d","webpack:///./src/App.vue","webpack:///./src/main.ts","webpack:///./src/components/CollapsiblePane.vue?6677"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","class","settingsOpen","on","$event","_e","_g","desktopLayout","assign","sizerMouseActive","mouseup","onMainSizerMouseUp","mousemove","onMainSizerMouseMove","sizerTouchActive","touchend","onMainSizerTouchEnd","touchmove","onMainSizerTouchMove","style","width","settingsWidth","ref","_s","parseError","canvasWidth","canvasHeight","rendered","left","onMainSizerMouseDown","onMainSizerTouchStart","inputFileChange","directives","rawName","expression","$$selectedVal","Array","filter","target","options","selected","map","val","_value","parser","multiple","redraw","_l","example","selectExample","realSettingsWidth","domProps","composing","rawInput","parsedInput","staticRenderFns","click","title","expand","animationHeight","height","_t","realHeight","content","$refs","paneContent","offsetHeight","addEventListener","transitionEnd","setTimeout","String","mainCanvasData","mousedown","wheel","mouseDragActive","thumbnailWidth","thumbnailHeight","thumbnailCanvasData","thumbnailMousedown","thumbnailMouseDragActive","thumbnailMouseup","thumbnailMousemove","events","event","listener","undefined","index","indexOf","args","parent","fixed","position","x","y","node","Error","graph","ports","edges","children","config","edge","fullyUpdatePosition","contentSize","newConfig","KamadaKawaiGraphLayout","defaultConfig","portToIndex","Map","set","port","initialPlaced","springLength","Math","random","distanceMatrix","fill","Infinity","fromBelonging","toBelonging","fromIndex","toIndex","k","dist","lengthMatrix","kMatrix","springConstant","pow","energyMatrix","mPos","iPos","denominator","sqrt","energySum","sum","maxEnergy","threshold","maxIterations","max","min","maxInnerIterations","iterations","deDx","deDy","e","delta","subIterations","d2eDx2","d2eDxDy","d2eDy2","factor","dx","dy","sumX","sumY","oldDx","oldDy","deltaX","deltaY","preferredEdgeDirection","PI","totalX","totalY","currentAngle","atan2","rotateAngle","rotateMatrix","cos","sin","upperLeft","lowerRight","pos","size","getBoundingBoxSize","halfWidth","halfHeight","informAllEdgesFullyUpdatePosition","is","render","layoutFactory","type","LinearComponentLayout","components","layouts","componentsSize","getContentSize","direction","reduce","a","b","spaceBetween","begin","componentFactory","shape","updateData","BoxGraphType","layout","textSizeNeedsUpdate","label","fontSize","fontFamily","lineHeight","ctx","root","font","lines","split","textSize","measureText","layoutContentSize","componentLayout","padding","textPosition","labelPosition","borderSize","strokeWidth","rect","fillColor","stroke","strokeColor","text","align","angle","abs","graphTypeFactory","id","BarnesHutGraphPhysics","layoutData","nodeToIndex","nodes","forces","velocities","controlPoints","getControlPoints","point","minX","maxX","minY","maxY","positioned","sizeDiff","rootSize","halfRootSize","centerX","centerY","tree","centerOfMass","mass","range","splitBranch","placeInTree","that","distance","gravityForce","centralGravity","calculateForces","branch","nodeMass","gravitationalConstant","force","getForceContributions","getForceContribution","NW","NE","SW","SE","theta","formBarnesHutTree","items","item1","item2","edgeLength","springForce","fx","fy","calculateVelocity","velocity","df","damping","maxVelocity","item","updatePosition","containedNode","childSize","updateBranchMass","region","child","totalMass","physicsFactory","parentData","Graph","getId","depth","fullId","parentId","fromEdges","Set","toEdges","oldChildren","subgraphs","renderableFactory","has","newChild","constructor","adjacencyList","edgesData","values","from","findPort","to","findBelongingPort","unvisited","layoutsData","calculateConnectedComponent","delete","component","adjacency","next","portToComponent","edgeData","concat","componentClass","layoutClass","physicsClass","physics","newLayouts","newPhysics","solve","typeClass","graphType","updated","subgraph","step","draggable","distanceToBorder","fromPointerPos","toPointerPos","fromAngle","toAngle","lineFromPos","lineToPos","StraightEdgeType","fromPort","toPort","fromPos","getAbsolutePosition","toPos","fromDistance","toDistance","realFromPosX","realFromPosY","realToPosX","realToPosY","fromPointer","pointerWidth","toPointer","pointerHeight","pointerColor","unshift","points","lineColor","lineWidth","controlPoint","QuadraticEdgeType","viaPos","edgeTypeFactory","TokenEnum","BoxNodeType","contentSizeNeedsUpdate","borderSizeNeedsUpdate","recordParser","record","buffer","lexer","pop","EOF","VERTICAL_BAR","LEFT_CURLY_BRACE","RIGHT_CURLY_BRACE","LEFT_ANGLE_BRACE","RIGHT_ANGLE_BRACE","STRING","parseRecordLabel","token","parseField","ret","nodeType","isHorizontal","isField","fieldData","getPorts","getConfig","cellSize","recordData","cell","RecordCell","deltaWidth","startX","updateCellSize","deltaHeight","startY","RecordNodeType","contentNeedsUpdate","borderNeedsUpdate","rootCellSize","getCellSize","founded","rowSpan","columnSpan","border","getTableConfig","cellBorder","backgroundColor","attributes","keys","attribute","toLowerCase","parseInt","getText","element","elements","join","parentConfig","tableConfig","cellPadding","rowOffset","columnOffset","TableNodeType","layoutNeedsUpdate","jsonObj","xml2js","tableElement","cellSpacing","table","rows","columns","firstRow","tr","row","td","getPort","cellSizes","cellHeight","cellWidth","rowHeight","columnWidth","accRowHeight","accColumnWidth","upperLeftX","upperLeftY","nodeTypeFactory","Node","Edge","fromNodeOrGraph","toNodeOrGraph","findParentNodeOrGraph","add","edgeType","document","createElement","getContext","stepTimer","setInterval","informRender","idArray","clearFixed","newClass","renderable","freeze","emit","globalGraphRoot","staticStyle","$listeners","context","hitContext","hitColorMap","hitIdMap","canvas","enableHit","hitCanvas","round","g","color","hitCtx","clearRect","updateShape","draggableId","finalDraggable","finalId","save","translate","scale","scaleX","scaleY","childShape","restore","beginPath","fillStyle","strokeStyle","generateHitColor","linesWidth","posY","textBaseline","posX","fillText","moveTo","lineTo","quadraticCurveTo","middleX","middleY","closePath","outerLeft","outerTop","outerRight","outerBottom","innerLeft","innerTop","innerBottom","innerRight","pixel","getImageData","updateCanvas","Number","required","Boolean","draggedId","mouseLastCoords","maxThumbnailLength","minThumbnailLength","thumbnailPadding","thumbnailMouseLastCoords","updateSize","scaleBy","preventDefault","translateMouseEvent","mousePointTo","stageX","stageY","newPos","elementOffsetX","elementOffsetY","currentTarget","offsetLeft","offsetTop","offsetParent","pageX","pageY","mainCanvas","getIdFromHitPoint","setFixed","buttons","newCoords","movePort","thumbnailCanvas","oldCoords","thumbnailFactor","deepCopyAndRemoveDraggable","copy","viewportX","viewportY","viewportWidth","viewportHeight","default","MyCanvas","alnumChars","randomAlnumString","floor","generateId","unescapeString","str","replace","normalizeColor","end","graphParsers","json","input","JSON","parse","graphviz","ast","parseNode","node_id","attr_list","attr","eq","parseGraph","recordHorizontal","LR","TB","RL","BT","edge_list","graphExamples","stdThreadJoin","icosahedron","Debounce","delay","prop","configurable","debounce","minGraphWidth","minSettingsWidth","windowWidth","documentElement","clientWidth","windowHeight","clientHeight","examples","parsed","stringify","console","log","stack","getSize","updateCanvasSize","throttle","removeEventListener","parseInput","fullyUpdateData","file","files","alert","reader","FileReader","onload","evt","readAsText","$nextTick","offsetWidth","mouseOffsetX","offsetX","touches","CollapsiblePane","productionTip","Icon","h","$mount"],"mappings":"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","file":"js/app.4167deb8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=style&index=0&id=6d2c06d4&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=style&index=0&id=6d2c06d4&lang=stylus&scoped=true&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=stylus&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=stylus&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('header',{staticClass:\"app-header\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\"Graph Visualizer\")]),_c('div',{staticClass:\"settings\"},[(_vm.desktopLayout)?_c('div',{staticClass:\"settings-item\"},[_c('span',{staticClass:\"settings-item-title\",class:{ 'setting-item-active': _vm.settingsOpen },on:{\"click\":function($event){_vm.settingsOpen = !_vm.settingsOpen}}},[_vm._v(\"\\n          侧栏\\n        \")])]):_vm._e()])]),_c('main',_vm._g({staticClass:\"main-panes\",class:{\n          'main-panes-show-sidebarmain-panes-show-sidebar': _vm.settingsOpen && _vm.desktopLayout\n        }},Object.assign({}, _vm.sizerMouseActive ? {\n          mouseup: _vm.onMainSizerMouseUp,\n          mousemove: _vm.onMainSizerMouseMove\n        } : {}, _vm.sizerTouchActive ? {\n          touchend: _vm.onMainSizerTouchEnd,\n          touchmove: _vm.onMainSizerTouchMove\n        } : {})),[_c('div',{staticClass:\"main-container main-container-graph\",class:{ 'main-container-graph-size-active':\n                    !_vm.sizerMouseActive && !_vm.sizerTouchActive},style:({\n           width: _vm.desktopLayout ? (_vm.settingsOpen ?\n                  (\"calc(100% - \" + _vm.settingsWidth + \"px)\") : '100%') : 'auto'\n         })},[_c('div',{ref:\"canvas\",staticClass:\"main-pane main-pane-graph\"},[(_vm.parseError)?_c('div',{staticClass:\"error-pane\"},[_c('pre',[_c('code',[_vm._v(_vm._s(_vm.parseError))])])]):_vm._e(),_c('Graph',{ref:\"graph\",attrs:{\"width\":_vm.canvasWidth,\"height\":_vm.canvasHeight,\"data\":_vm.rendered}})],1)]),_c('transition',{attrs:{\"name\":\"sizer-slide-x\",\"duration\":300}},[(_vm.settingsOpen && _vm.desktopLayout)?_c('div',{staticClass:\"main-sizer main-client-settings-sizer\",style:({ left: (\"calc(100% - \" + _vm.settingsWidth + \"px)\") }),on:{\"mousedown\":_vm.onMainSizerMouseDown,\"touchstart\":_vm.onMainSizerTouchStart}},[_c('div',{staticClass:\"main-sizer-handlebar\"})]):_vm._e()]),_c('transition',{attrs:{\"name\":\"settings-slide-x\",\"duration\":300}},[(_vm.settingsOpen || !_vm.desktopLayout)?_c('div',{staticClass:\"main-container main-container-settings\",style:({\n             width: _vm.desktopLayout ? (_vm.settingsWidth + \"px\") : 'auto'\n           })},[_c('div',{staticClass:\"main-pane main-pane-settings\"},[_c('CollapsiblePane',{staticClass:\"main-pane-subpane\",attrs:{\"title\":\"输入\"}},[_c('div',{staticClass:\"settings-input-file\"},[_c('label',{attrs:{\"for\":\"input-file\"}},[_c('v-icon',{attrs:{\"name\":\"upload\",\"scale\":\"0.8\"}}),_vm._v(\"打开文件\\n              \")],1),_c('input',{attrs:{\"type\":\"file\",\"id\":\"input-file\"},on:{\"change\":_vm.inputFileChange}})]),_c('div',{staticClass:\"settings-input-format\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.parser),expression:\"parser\"}],attrs:{\"id\":\"input-format\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.parser=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"json\",\"selected\":\"\"}},[_vm._v(\"JSON\")]),_c('option',{attrs:{\"value\":\"graphviz\"}},[_vm._v(\"Graphviz\")])])]),_c('button',{staticClass:\"setting-input-redraw\",on:{\"click\":_vm.redraw}},[_c('v-icon',{attrs:{\"name\":\"sync\",\"scale\":\"0.8\"}}),_vm._v(\"重绘\\n            \")],1),_c('div',{staticClass:\"settings-input-examples\"},[_c('span',{staticClass:\"settings-input-example-label\"},[_vm._v(\"示例：\")]),_vm._l((_vm.examples),function(example,i){return _c('span',{key:example.name,staticClass:\"settings-input-example\",on:{\"click\":function($event){return _vm.selectExample(i)}}},[_vm._v(\"\\n                \"+_vm._s(example.name)+\"\\n              \")])})],2),_c('div',{staticClass:\"settings-input-display\",class:{ 'settings-input-display-two-column':\n                            _vm.realSettingsWidth >= 400 }},[_c('div',{staticClass:\"settings-input-raw\"},[_c('label',{attrs:{\"for\":\"input-raw\"}},[_vm._v(\"输入数据：\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.rawInput),expression:\"rawInput\"}],attrs:{\"id\":\"input-raw\",\"rows\":\"10\"},domProps:{\"value\":(_vm.rawInput)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.rawInput=$event.target.value}}})]),_c('div',{staticClass:\"settings-input-parsed\"},[_c('label',{attrs:{\"for\":\"input-parsed\"}},[_vm._v(\"解析结果（只读）：\")]),_c('textarea',{attrs:{\"id\":\"input-parsed\",\"rows\":\"10\",\"readonly\":\"\"},domProps:{\"value\":_vm.parsedInput}})])])])],1)]):_vm._e()])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',{staticClass:\"pane-title\",on:{\"click\":_vm.click}},[_vm._v(\"\\n    \"+_vm._s(_vm.title)+\"\\n    \"),_c('v-icon',{staticClass:\"pane-arrow\",class:{ 'pane-arrow-expand': _vm.expand },attrs:{\"name\":\"angle-up\"}})],1),_c('div',{ref:\"paneContent\",staticClass:\"pane-content\",style:(_vm.animationHeight !== null ?\n               { height: _vm.animationHeight + 'px' } : {})},[_vm._t(\"default\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport 'vue-awesome/icons/angle-up';\nimport { Vue, Component, Prop } from 'vue-property-decorator';\n\n@Component\nexport default class CollapsiblePane extends Vue {\n  @Prop(String) public readonly title: string | undefined;\n  private expand = true;\n  private realHeight = 0;\n  private animationHeight: number|null = null;\n  public mounted() {\n    const content = this.$refs.paneContent as HTMLElement;\n    this.realHeight = content.offsetHeight;\n    content.addEventListener('transitionend', this.transitionEnd.bind(this));\n  }\n  public click() {\n    this.expand = !this.expand;\n    if (this.expand) {\n      this.animationHeight = 0;\n      setTimeout(() => {\n        this.animationHeight = this.realHeight;\n      });\n    } else {\n      const content = this.$refs.paneContent as HTMLElement;\n      this.realHeight = content.offsetHeight;\n      this.animationHeight = this.realHeight;\n      setTimeout(() => {\n        this.animationHeight = 0;\n      });\n    }\n  }\n  public transitionEnd() {\n    if (this.animationHeight !== 0) {\n      this.animationHeight = null;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CollapsiblePane.vue?vue&type=template&id=08120549&scoped=true&\"\nimport script from \"./CollapsiblePane.vue?vue&type=script&lang=ts&\"\nexport * from \"./CollapsiblePane.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08120549\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"graph-container\"},[_c('my-canvas',_vm._g({ref:\"mainCanvas\",attrs:{\"width\":_vm.width,\"height\":_vm.height,\"data\":_vm.mainCanvasData,\"enable-hit\":true},on:{\"mousedown\":_vm.mousedown,\"wheel\":_vm.wheel}},_vm.mouseDragActive ? { mouseup: _vm.mouseup, mousemove: _vm.mousemove } : {})),_c('div',{staticClass:\"thumbnail\",style:({\n    width: _vm.thumbnailWidth + 'px',\n    height: _vm.thumbnailHeight + 'px'\n  })},[_c('my-canvas',_vm._g({ref:\"thumbnailCanvas\",attrs:{\"width\":_vm.thumbnailWidth,\"height\":_vm.thumbnailHeight,\"data\":_vm.thumbnailCanvasData,\"enable-hit\":true},on:{\"mousedown\":_vm.thumbnailMousedown}},_vm.thumbnailMouseDragActive ? {\n                 mouseup: _vm.thumbnailMouseup,\n                 mousemove: _vm.thumbnailMousemove,\n               } : {}))],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class EventEmitter {\n  private readonly events: { [event: string]: Array<(...args: any[]) => any> } = {};\n\n  public addEventListener(event: string, listener: (...args: any[]) => any) {\n    if (this.events[event] === undefined) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  public removeEventListener(event: string, listener: (...args: any[]) => any) {\n    if (this.events[event] !== undefined) {\n      const index = this.events[event].indexOf(listener);\n      if (index > -1) {\n        this.events[event].splice(index, -1);\n      }\n    }\n  }\n\n  public emit(event: string, ...args: any[]) {\n    if (this.events[event] !== undefined) {\n      for (const listener of this.events[event]) {\n        listener.apply(this, args);\n      }\n    }\n  }\n}\n","import {Position} from '@/graph/base/dataInput';\n\nexport default class Positioned {\n  public parent: Positioned | null;\n  public fixed: boolean;\n  public position: Position;\n  public constructor(parent: Positioned | null) {\n    this.parent = parent;\n    this.fixed = false;\n    this.position = { x: 0, y: 0 };\n  }\n  public setPosition(position: Position): void {\n    this.position = position;\n  }\n  public getPosition(): Position {\n    return this.position;\n  }\n  public getAbsolutePosition(parent: Positioned): Position {\n    let x = 0;\n    let y = 0;\n    let node: Positioned | null = this;\n    while (node !== parent) {\n      if (node === null) {\n        throw new Error('Incorrect parent parameter');\n      }\n      x += node.position.x;\n      y += node.position.y;\n      node = node.parent;\n    }\n    return {x, y};\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport {GraphLayoutData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport Edge from '@/graph/edge/Edge';\nimport Renderable from '@/graph/base/Renderable';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Node from '@/graph/node/Node';\n\nexport interface LayoutEdgeData {\n  from: Port;\n  to: Port;\n  fromBelonging: Node | Graph;\n  toBelonging: Node | Graph;\n  edge: Edge;\n}\n\nexport interface LayoutData {\n  ports: Array<Node | Graph>;\n  edges: LayoutEdgeData[];\n  children: Renderable[];\n}\n\nexport default abstract class GraphLayout extends Positioned {\n  protected readonly graph: Graph;\n  protected data: LayoutData;\n  protected constructor(graph: Graph, parent: Positioned | null) {\n    super(parent);\n    this.graph = graph;\n    this.data = {\n      ports: [],\n      edges: [],\n      children: [],\n    };\n  }\n  public solve(config: GraphLayoutData | undefined,\n               data: LayoutData,\n               index: number): void {\n    this.data = data;\n  }\n  public informAllEdgesFullyUpdatePosition() {\n    if (this.data) {\n      for (const edge of this.data.edges) {\n        edge.edge.fullyUpdatePosition();\n      }\n    }\n  }\n  public abstract render(): AnyShape;\n  public abstract getContentSize(): Size;\n}\n","import Graph from '@/graph/graph/Graph';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport {KamadaKawaiGraphLayoutData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport Positioned from '@/graph/base/Positioned';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface KamadaKawaiGraphLayoutConfig {\n  springLength: number;\n  springConstant: number;\n  preferredEdgeDirection: number | 'any';\n}\n\nexport default class KamadaKawaiGraphLayout extends GraphLayout {\n  private static defaultConfig: KamadaKawaiGraphLayoutConfig = {\n    springLength: 150,\n    springConstant: 0.05,\n    preferredEdgeDirection: 'any',\n  };\n  private contentSize: Size;\n  constructor(graph: Graph, parent: Positioned | null) {\n    super(graph, parent);\n    this.contentSize = { width: 0, height: 0 };\n  }\n  public solve(config: KamadaKawaiGraphLayoutData | undefined,\n               data: LayoutData,\n               index: number) {\n    super.solve(config, data, index);\n    const newConfig: KamadaKawaiGraphLayoutConfig = Object.assign({},\n      KamadaKawaiGraphLayout.defaultConfig, config);\n    const portToIndex: Map<Port, number> = new Map();\n    for (let i = 0; i < data.ports.length; ++i) {\n      portToIndex.set(data.ports[i], i);\n    }\n    // Initial random placement\n    for (const port of data.ports) {\n      if (!port.initialPlaced) {\n        port.position = {\n          x: newConfig.springLength * ( Math.random() - 0.5),\n          y: newConfig.springLength * ( Math.random() - 0.5),\n        };\n        port.initialPlaced = true;\n      }\n    }\n    // Compute distance matrix by Floyd Warshall\n    const distanceMatrix: number[][] = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      distanceMatrix.push(Array(data.ports.length).fill(Infinity));\n      distanceMatrix[distanceMatrix.length - 1][i] = 0;\n    }\n    for (const {fromBelonging, toBelonging} of data.edges) {\n      const fromIndex = portToIndex.get(fromBelonging)!;\n      const toIndex = portToIndex.get(toBelonging)!;\n      distanceMatrix[fromIndex][toIndex] = 1;\n      distanceMatrix[toIndex][fromIndex] = 1;\n    }\n    for (let k = 0; k < data.ports.length; ++k) {\n      for (let i = 0; i < data.ports.length; ++i) {\n        for (let j = 0; j < data.ports.length; ++j) {\n          const dist = distanceMatrix[i][k] + distanceMatrix[k][j];\n          if (distanceMatrix[i][j] > dist) {\n            distanceMatrix[i][j] = dist;\n          }\n        }\n      }\n    }\n    // Place ports using Kamada Kawai\n    // Compute length matrix\n    const lengthMatrix = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const length = [];\n      for (let j = 0; j < data.ports.length; ++j) {\n        length.push(newConfig.springLength * distanceMatrix[i][j]);\n      }\n      lengthMatrix.push(length);\n    }\n    // Compute k matrix\n    const kMatrix = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const k = [];\n      for (let j = 0; j < data.ports.length; ++j) {\n        k.push(newConfig.springConstant *\n          Math.pow(distanceMatrix[i][j], -2));\n      }\n      kMatrix.push(k);\n    }\n    // Compute energy matrix\n    const energyMatrix = [];\n    for (const port of data.ports) {\n      energyMatrix.push(Array(data.ports.length));\n    }\n    for (let m = 0; m < data.ports.length; ++m) {\n      const mPos = data.ports[m].position;\n      energyMatrix[m][m] = [0, 0];\n      for (let i = m + 1; i < data.ports.length; ++i) {\n        const iPos = data.ports[i].position;\n        const denominator = 1.0 / Math.sqrt(\n          Math.pow(mPos.x - iPos.x, 2) + Math.pow(mPos.y - iPos.y, 2));\n        energyMatrix[m][i] = [\n          kMatrix[m][i] * (mPos.x - iPos.x) *\n            (1 - lengthMatrix[m][i] * denominator),\n          kMatrix[m][i] * (mPos.y - iPos.y) *\n            (1 - lengthMatrix[m][i] * denominator),\n        ];\n        energyMatrix[i][m] = [\n          -energyMatrix[m][i][0],\n          -energyMatrix[m][i][1],\n        ];\n      }\n    }\n    const energySum = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const sum = [0, 0];\n      for (let j = 0; j < data.ports.length; ++j) {\n        sum[0] += energyMatrix[i][j][0];\n        sum[1] += energyMatrix[i][j][1];\n      }\n      energySum.push(sum);\n    }\n    // Compute position\n    const threshold = 0.01;\n    const maxIterations = Math.max(1000,\n      Math.min(10 * data.ports.length, 6000));\n    const maxInnerIterations = 5;\n    let iterations = 0;\n    let maxEnergy;\n    while (iterations < maxIterations) {\n      iterations += 1;\n      // Get port with highest energy\n      let m = 0;\n      let deDx = 0;\n      let deDy = 0;\n      maxEnergy = -1;\n      for (let i = 0; i < data.ports.length; ++i) {\n        const e = Math.sqrt(Math.pow(energySum[i][0], 2) +\n          Math.pow(energySum[i][1], 2));\n        if (e > maxEnergy) {\n          m = i;\n          deDx = energySum[i][0];\n          deDy = energySum[i][1];\n          maxEnergy = e;\n        }\n      }\n      if (maxEnergy <= threshold) {\n        break;\n      }\n      const mPos = data.ports[m].position;\n      let delta = maxEnergy;\n      let subIterations = 0;\n      while (delta > threshold && subIterations < maxInnerIterations) {\n        subIterations += 1;\n        // Move port\n        let d2eDx2 = 0;\n        let d2eDxDy = 0;\n        let d2eDy2 = 0;\n        for (let i = 0; i < data.ports.length; ++i) {\n          if (i !== m) {\n            const iPos = data.ports[i].position;\n            const factor = 1.0 / Math.pow(Math.pow(mPos.x - iPos.x, 2) +\n              Math.pow(mPos.y - iPos.y, 2), 1.5);\n            const k = kMatrix[m][i];\n            const l = lengthMatrix[m][i];\n            d2eDx2 += k * (1 - l * Math.pow(mPos.y - iPos.y, 2) * factor);\n            d2eDxDy += k * l * (mPos.x - iPos.x) * (mPos.y - iPos.y) *\n              factor;\n            d2eDy2 += k * (1 - l * Math.pow(mPos.x - iPos.x, 2) * factor);\n          }\n        }\n        // Solve equation using Cramer's rule\n        const denominator = d2eDx2 * d2eDy2 - Math.pow(d2eDxDy, 2);\n        const dx = (d2eDxDy * deDy - d2eDy2 * deDx) / denominator;\n        const dy = (d2eDxDy * deDx - d2eDx2 * deDy) / denominator;\n        mPos.x += dx;\n        mPos.y += dy;\n        // Recalculate energy matrix\n        let sumX = 0;\n        let sumY = 0;\n        for (let i = 0; i < data.ports.length; ++i) {\n          if (i !== m) {\n            const [oldDx, oldDy] = energyMatrix[m][i];\n            const iPos = data.ports[i].position;\n            const factor = 1.0 / Math.sqrt(\n              Math.pow(mPos.x - iPos.x, 2) + Math.pow(mPos.y - iPos.y, 2));\n            const deltaX = kMatrix[m][i] * (mPos.x - iPos.x) *\n              (1 - lengthMatrix[m][i] * factor);\n            const deltaY = kMatrix[m][i] * (mPos.y - iPos.y) *\n              (1 - lengthMatrix[m][i] * factor);\n            energyMatrix[m][i] = [deltaX, deltaY];\n            energyMatrix[i][m] = [-deltaX, -deltaY];\n            energySum[i][0] += oldDx - deltaX;\n            energySum[i][1] += oldDy - deltaY;\n            sumX += deltaX;\n            sumY += deltaY;\n          }\n        }\n        energySum[m] = [sumX, sumY];\n        // Update\n        delta = Math.sqrt(Math.pow(energySum[m][0], 2) +\n          Math.pow(energySum[m][1], 2));\n        deDx = energySum[m][0];\n        deDy = energySum[m][1];\n      } // for kamada kawai inner iteration\n    } // for kamada kawai outer iteration\n    // Rotate graph to satisfy preferred edge direction\n    if (typeof newConfig.preferredEdgeDirection === 'number') {\n      const preferredEdgeDirection: number = newConfig.preferredEdgeDirection /\n        180 * Math.PI;\n      let totalX = 0;\n      let totalY = 0;\n      for (const edge of data.edges) {\n        totalX += edge.toBelonging.position.x - edge.fromBelonging.position.x;\n        totalY += edge.toBelonging.position.y - edge.fromBelonging.position.y;\n      }\n      const currentAngle = Math.atan2(totalY, totalX);\n      const rotateAngle = preferredEdgeDirection - currentAngle;\n      const rotateMatrix: number[][] = [\n        [Math.cos(rotateAngle), -Math.sin(rotateAngle)],\n        [Math.sin(rotateAngle), Math.cos(rotateAngle)],\n      ];\n      for (const node of data.ports) {\n        node.position = {\n          x: rotateMatrix[0][0] * node.position.x +\n            rotateMatrix[0][1] * node.position.y,\n          y: rotateMatrix[1][0] * node.position.x +\n            rotateMatrix[1][1] * node.position.y,\n        };\n      }\n    }\n    // Calculate component size and position\n    const upperLeft = [Infinity, Infinity];\n    const lowerRight = [-Infinity, -Infinity];\n    for (const port of data.ports) {\n      const pos = port.position;\n      const size = port.getBoundingBoxSize();\n      const halfWidth = size.width / 2;\n      const halfHeight = size.height / 2;\n      if (pos.x - halfWidth < upperLeft[0]) {\n        upperLeft[0] = pos.x - halfWidth;\n      }\n      if (pos.x + halfWidth > lowerRight[0]) {\n        lowerRight[0] = pos.x + halfWidth;\n      }\n      if (pos.y - halfHeight < upperLeft[1]) {\n        upperLeft[1] = pos.y - halfHeight;\n      }\n      if (pos.y + halfHeight > lowerRight[1]) {\n        lowerRight[1] = pos.y + halfHeight;\n      }\n    }\n    const position = {\n      x: (upperLeft[0] + lowerRight[0]) / 2,\n      y: (upperLeft[1] + lowerRight[1]) / 2,\n    };\n    this.contentSize = {\n      width: lowerRight[0] - upperLeft[0],\n      height: lowerRight[1] - upperLeft[1],\n    };\n    // Move ports to center\n    for (const port of data.ports) {\n      port.position.x -= position.x;\n      port.position.y -= position.y;\n    }\n    this.informAllEdgesFullyUpdatePosition();\n  } // solve method\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: this.data.children.map((x) => x.render()),\n    };\n  }\n  public getContentSize() {\n    return this.contentSize;\n  }\n}\n","import KamadaKawaiGraphLayout from './KamadaKawaiGraphLayout';\nimport {GraphLayoutData} from '@/graph/base/dataInput';\nimport GraphLayout from '@/graph/graph/layout/GraphLayout';\nimport Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\n\nexport default function layoutFactory(data: GraphLayoutData | undefined)\n    : new (graph: Graph, parent: Positioned | null) => GraphLayout {\n  switch (data && data.type) {\n    default:\n      return KamadaKawaiGraphLayout;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport {ComponentLayoutData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class ComponentLayout extends Positioned {\n  protected readonly graph: Graph;\n  protected constructor(graph: Graph, parent: Positioned | null) {\n    super(parent);\n    this.graph = graph;\n  }\n  public abstract updateData(config: ComponentLayoutData | undefined): void;\n  public abstract render(): AnyShape;\n  public abstract getContentSize(): Size | undefined;\n}\n","import ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport Graph from '@/graph/graph/Graph';\nimport {LinearComponentLayoutData, Size} from '@/graph/base/dataInput';\nimport Positioned from '@/graph/base/Positioned';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface LinearComponentLayoutConfig {\n  direction: 'TD' | 'DT' | 'LR' | 'RL';\n  spaceBetween: number;\n}\n\nexport default class LinearComponentLayout extends ComponentLayout {\n  private static defaultConfig = {\n    direction: 'TD',\n    spaceBetween: 12,\n  };\n  private contentSize: Size;\n  constructor(graph: Graph, parent: Positioned | null) {\n    super(graph, parent);\n    this.contentSize = { width: 0, height: 0 };\n  }\n  public updateData(config: LinearComponentLayoutData | undefined) {\n    const newConfig: LinearComponentLayoutConfig = Object.assign({},\n      LinearComponentLayout.defaultConfig, config);\n    const components = this.graph.layouts;\n    const componentsSize = components.map((x) => x.getContentSize()!);\n    if (newConfig.direction === 'LR' || newConfig.direction === 'RL') {\n      this.contentSize = {\n        width: componentsSize.map((x) => x.width).reduce((a, b) => a + b, 0) +\n          Math.max(components.length - 1, 0) * newConfig.spaceBetween,\n        height: Math.max(...componentsSize.map((x) => x.height), 0),\n      };\n      let begin = newConfig.direction === 'LR' ?\n        -this.contentSize.width / 2 : this.contentSize.width / 2;\n      for (let i = 0; i < components.length; ++i) {\n        const deltaX = (newConfig.direction === 'LR' ?\n          componentsSize[i].width / 2 : -componentsSize[i].width / 2) +\n          begin;\n        components[i].position = { x: deltaX, y: 0 };\n        if (newConfig.direction === 'LR') {\n          begin += componentsSize[i].width + newConfig.spaceBetween;\n        } else {\n          begin -= componentsSize[i].width + newConfig.spaceBetween;\n        }\n      }\n    } else {\n      this.contentSize = {\n        width: Math.max(...componentsSize.map((x) => x.width), 0),\n        height: componentsSize.map((x) => x.height).reduce((a, b) => a + b, 0) +\n          Math.max(components.length - 1, 0) * newConfig.spaceBetween,\n      };\n      let begin = newConfig.direction === 'DT' ?\n        this.contentSize.height / 2 : -this.contentSize.height / 2;\n      for (let i = 0; i < components.length; ++i) {\n        const deltaY = (newConfig.direction === 'DT' ?\n          -componentsSize[i].height / 2 : componentsSize[i].height / 2) +\n          begin;\n        components[i].position = { x: 0, y: deltaY };\n        if (newConfig.direction === 'DT') {\n          begin -= componentsSize[i].height + newConfig.spaceBetween;\n        } else {\n          begin += componentsSize[i].height + newConfig.spaceBetween;\n        }\n      }\n    } // position calculation\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: this.graph.layouts.map((x) => x.render()),\n    };\n  }\n  public getContentSize() {\n    return this.contentSize;\n  }\n}\n","import {ComponentLayoutData} from '@/graph/base/dataInput';\nimport Graph from '@/graph/graph/Graph';\nimport ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport LinearComponentLayout from '@/graph/graph/component/LinearComponentLayout';\nimport Positioned from '@/graph/base/Positioned';\n\nexport default function componentFactory(data: ComponentLayoutData | undefined)\n  : new (graph: Graph, parent: Positioned | null) => ComponentLayout {\n  switch (data && data.type) {\n    default:\n      return LinearComponentLayout;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport {GraphData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class GraphType {\n  protected parent: Graph;\n  protected constructor(parent: Graph) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: GraphData): void;\n  public abstract render(): AnyShape[];\n  public abstract getBoundingBoxSize(): Size;\n  public abstract distanceToBorder(angle: number): number;\n}\n","import GraphType from '@/graph/graph/type/GraphType';\nimport Graph from '@/graph/graph/Graph';\nimport {BoxGraphData, GraphData, Position, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface BoxGraphConfig {\n  label: string | null;\n  labelPosition: 'top' | 'right' | 'bottom' | 'left';\n  style: 'solid' | 'filled' | 'none';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n  spaceBetween: number;\n}\n\nexport default class BoxGraphType extends GraphType {\n  public static defaultConfig = {\n    label: null,\n    labelPosition: 'top', // or 'right', 'bottom', 'left'\n    style: 'none',  // or 'filled'\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 0,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 6,\n    align: 'center',\n    spaceBetween: 12,\n  };\n  private config!: BoxGraphConfig;\n  private textSize!: Size;\n  private contentSize!: Size;\n  private textPosition!: Position;\n  private borderSize!: Size;\n  constructor(parent: Graph, data: GraphData) {\n    if (data.shape !== 'box') {\n      throw new Error('Expect box shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: BoxGraphData) {\n    const newConfig = Object.assign({}, BoxGraphType.defaultConfig, data);\n    delete newConfig.layout;\n    delete newConfig.children;\n    const textSizeNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    if (textSizeNeedsUpdate) {\n      const ctx = this.parent.root.ctx;\n      ctx.font = `${newConfig.fontSize}px ${newConfig.fontFamily}`;\n      const lines = newConfig.label ? (newConfig.label as string)\n        .split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * newConfig.fontSize * newConfig.lineHeight,\n      };\n    }\n    const layoutContentSize = this.parent.componentLayout.getContentSize()!;\n    this.contentSize = {\n      width: layoutContentSize.width + 2 * newConfig.padding,\n      height: layoutContentSize.height + 2 * newConfig.padding,\n    };\n    this.parent.componentLayout.position = { x: 0, y: 0 };\n    this.textPosition = { x: 0, y: 0 };\n    if (newConfig.label) {\n      if (newConfig.labelPosition === 'left' ||\n          newConfig.labelPosition === 'right') {\n        this.contentSize.width += this.textSize.width + newConfig.spaceBetween;\n        if (this.textSize.height > layoutContentSize.height) {\n          this.contentSize.height = this.textSize.height +\n            2 * newConfig.padding;\n        }\n        if (newConfig.labelPosition === 'left') {\n          this.parent.componentLayout.position.x = (this.textSize.width +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.x = -(layoutContentSize.width +\n            newConfig.spaceBetween) / 2;\n        } else {\n          this.parent.componentLayout.position.x = -(this.textSize.width +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.x = (layoutContentSize.width +\n            newConfig.spaceBetween) / 2;\n        }\n      } else {\n        this.contentSize.height += this.textSize.height +\n          newConfig.spaceBetween;\n        if (this.textSize.width > layoutContentSize.width) {\n          this.contentSize.width = this.textSize.width + 2 * newConfig.padding;\n        }\n        if (newConfig.labelPosition === 'bottom') {\n          this.parent.componentLayout.position.y = -(this.textSize.height +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.y = (layoutContentSize.height +\n            newConfig.spaceBetween) / 2;\n        } else {\n          this.parent.componentLayout.position.y = (this.textSize.height +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.y = -(layoutContentSize.height +\n            newConfig.spaceBetween) / 2;\n        }\n      }\n    }\n    this.borderSize = {\n      width: this.contentSize.width + newConfig.strokeWidth,\n      height: this.contentSize.height + newConfig.strokeWidth,\n    };\n    this.config = newConfig;\n  }\n  public render(): AnyShape[] {\n    const rendered: AnyShape[] = [];\n    if (this.config.style && this.config.style !== 'none') {\n      const rect: AnyShape = {\n        is: 'rect',\n        x: -this.contentSize.width / 2,\n        y: -this.contentSize.height / 2,\n        width: this.contentSize.width,\n        height: this.contentSize.height,\n        fill: this.config.style === 'filled' ?\n          this.config.fillColor : undefined,\n        stroke: this.config.strokeWidth > 0 ?\n          this.config.strokeColor : undefined,\n        strokeWidth: this.config.strokeWidth,\n      };\n      rendered.push(rect);\n    }\n    if (this.config.label) {\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.textSize.width / 2,\n        y: this.textPosition.y - this.textSize.height / 2,\n        text: this.config.label,\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        lineHeight: this.config.lineHeight,\n        align: this.config.align,\n      };\n      rendered.push(text);\n    }\n    rendered.push(this.parent.componentLayout.render());\n    return rendered;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import BoxGraphType from '@/graph/graph/type/BoxGraphType';\nimport GraphType from '@/graph/graph/type/GraphType';\nimport Graph from '@/graph/graph/Graph';\nimport {GraphData} from '@/graph/base/dataInput';\n\n// noinspection JSUnusedLocalSymbols\nexport default function graphTypeFactory(data: GraphData)\n    : new (parent: Graph, data: GraphData) => GraphType {\n  data.shape = 'box';\n  return BoxGraphType;\n}\n","import Positioned from '@/graph/base/Positioned';\nimport {Size} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\n\nexport default abstract class Port extends Positioned {\n  public readonly root: Root;\n  public initialPlaced: boolean; // for graph layout\n  public id: string;\n  protected constructor(root: Root, parent: Positioned | null = null) {\n    super(parent);\n    this.root = root;\n    this.initialPlaced = false;\n    this.id = '';\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    return null;\n  }\n  public abstract getBoundingBoxSize(): Size;\n  public abstract distanceToBorder(angle: number): number;\n}\n","import Graph from '@/graph/graph/Graph';\nimport {GraphPhysicsData} from '@/graph/base/dataInput';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\n\nexport default abstract class GraphPhysics {\n  protected readonly graph: Graph;\n  protected readonly layout: GraphLayout;\n  public constructor(graph: Graph, layout: GraphLayout) {\n    this.graph = graph;\n    this.layout = layout;\n  }\n  public abstract solve(config: GraphPhysicsData | undefined,\n                        data: LayoutData): void;\n  public abstract step(): boolean;\n}\n","import GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport {BarnesHutGraphPhysicsData, Position, Vector} from '@/graph/base/dataInput';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface BarnesHutGraphPhysicsConfig {\n  theta: number;\n  gravitationalConstant: number;\n  centralGravity: number;\n  springLength: number;\n  springConstant: number;\n  damping: number;\n  maxVelocity: number;\n}\n\ninterface BarnesHutTree {\n  centerOfMass: Position;\n  mass: number;\n  range: {\n    minX: number;\n    maxX: number;\n    minY: number;\n    maxY: number;\n  };\n  children?: {\n    NW: BarnesHutTree;\n    NE: BarnesHutTree;\n    SW: BarnesHutTree;\n    SE: BarnesHutTree;\n  };\n  data?: Positioned;\n  size: number;\n}\n\nexport default class BarnesHutGraphPhysics extends GraphPhysics {\n  private static defaultConfig: BarnesHutGraphPhysicsConfig = {\n    theta: 1,\n    gravitationalConstant: -2000,\n    centralGravity: 0.05,\n    springLength: 150,\n    springConstant: 0.04,\n    damping: 0.09,\n    maxVelocity: 50,\n  };\n  private static splitBranch(branch: BarnesHutTree) {\n    if (branch.children) {\n      throw new Error('Cannot split branch on an already split branch');\n    }\n    const containedNode: Positioned | undefined = branch.data;\n    if (containedNode) {\n      branch.mass = 0;\n      branch.centerOfMass.x = 0;\n      branch.centerOfMass.y = 0;\n    }\n    delete branch.data;\n    const childSize = 0.5 * branch.size;\n    branch.children = {\n      NW: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX, maxX: branch.range.minX + childSize,\n          minY: branch.range.minY, maxY: branch.range.minY + childSize,\n        },\n        size: childSize,\n      },\n      NE: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX + childSize, maxX: branch.range.maxX,\n          minY: branch.range.minY, maxY: branch.range.minY + childSize,\n        },\n        size: childSize,\n      },\n      SW: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX, maxX: branch.range.minX + childSize,\n          minY: branch.range.minY + childSize, maxY: branch.range.maxY,\n        },\n        size: childSize,\n      },\n      SE: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX + childSize, maxX: branch.range.maxX,\n          minY: branch.range.minY + childSize, maxY: branch.range.maxY,\n        },\n        size: childSize,\n      },\n    };\n    if (containedNode) {\n      this.placeInTree(branch, containedNode);\n    }\n  }\n  private static placeInTree(branch: BarnesHutTree,\n                             node: Positioned): void {\n    if (!branch.children) {\n      throw new Error('Place in tree can be only called on a split branch');\n    }\n    this.updateBranchMass(branch, node);\n    const range = branch.children.NW.range;\n    const pos = node.position;\n    let region: 'NW' | 'SW' | 'NE' | 'SE';\n    if (range.maxX > pos.x) {\n      if (range.maxY > pos.y) {\n        region = 'NW';\n      } else {\n        region = 'SW';\n      }\n    } else {\n      if (range.maxY > pos.y) {\n        region = 'NE';\n      } else {\n        region = 'SE';\n      }\n    }\n    const child = branch.children[region];\n    if (child.children) {\n      this.placeInTree(child, node);\n    } else if (child.data) {\n      // ignore overlapping node\n      if (child.data.position.x === pos.x &&\n          child.data.position.y === pos.y ) {\n        pos.x += Math.random() - 0.5;\n        pos.y += Math.random() - 0.5;\n      } else {\n        this.splitBranch(child);\n        this.placeInTree(child, node);\n      }\n    } else {\n      child.data = node;\n      this.updateBranchMass(child, node);\n    }\n  }\n  private static updateBranchMass(branch: BarnesHutTree,\n                                  node: Positioned) {\n    const nodeMass = 1;\n    const totalMass = branch.mass + nodeMass;\n    branch.centerOfMass.x = (branch.centerOfMass.x * branch.mass +\n      node.position.x * nodeMass) / totalMass;\n    branch.centerOfMass.y = (branch.centerOfMass.y * branch.mass +\n      node.position.y * nodeMass) / totalMass;\n    branch.mass = totalMass;\n  }\n  private config: BarnesHutGraphPhysicsConfig;\n  private layoutData: LayoutData;\n  private nodeToIndex: Map<Positioned, number>;\n  private nodes: Positioned[];\n  private forces: Vector[];\n  private velocities: Vector[];\n  public constructor(graph: Graph, layout: GraphLayout) {\n    super(graph, layout);\n    this.config = BarnesHutGraphPhysics.defaultConfig;\n    this.layoutData = {\n      ports: [],\n      edges: [],\n      children: [],\n    };\n    this.nodeToIndex = new Map();\n    this.nodes = [];\n    this.forces = [];\n    this.velocities = [];\n  }\n  public solve(config: BarnesHutGraphPhysicsData | undefined,\n               data: LayoutData) {\n    this.config = Object.assign({},\n      BarnesHutGraphPhysics.defaultConfig, config);\n    this.layoutData = data;\n    this.nodeToIndex = new Map();\n    this.nodes = [];\n    // Create Index\n    let i = 0;\n    for (; i < this.layoutData.ports.length; ++i) {\n      this.nodeToIndex.set(this.layoutData.ports[i], i);\n      this.nodes.push(this.layoutData.ports[i]);\n    }\n    for (const edge of this.layoutData.edges) {\n      const controlPoints = edge.edge.getControlPoints();\n      for (const point of controlPoints) {\n        this.nodeToIndex.set(point, i);\n        this.nodes.push(point);\n        ++i;\n      }\n    }\n    this.forces = [];\n    this.velocities = [];\n    for (i = 0; i < this.nodeToIndex.size; ++i) {\n      this.forces.push({ x: 0, y: 0 });\n      this.velocities.push({ x: 0, y: 0 });\n    }\n  }\n  public formBarnesHutTree(): BarnesHutTree {\n    if (this.nodes.length < 1) {\n      throw new Error('Expect at least one node to form Barnes Hut tree');\n    }\n    let minX = this.nodes[0].position.x;\n    let maxX = this.nodes[0].position.x;\n    let minY = this.nodes[0].position.y;\n    let maxY = this.nodes[0].position.y;\n    for (let i = 1; i < this.nodes.length; ++i) {\n      const positioned = this.nodes[i];\n      const pos = positioned.position;\n      if (pos.x < minX) {\n        minX = pos.x;\n      }\n      if (pos.x > maxX) {\n        maxX = pos.x;\n      }\n      if (pos.y < minY) {\n        minY = pos.y;\n      }\n      if (pos.y > maxY)  {\n        maxY = pos.y;\n      }\n    }\n    const sizeDiff = Math.abs(maxX - minX) - Math.abs(maxY - minY);\n    if (sizeDiff > 0) {\n      minY -= 0.5 * sizeDiff;\n      maxY += 0.5 * sizeDiff;\n    } else {\n      minX += 0.5 * sizeDiff;\n      maxX -= 0.5 * sizeDiff;\n    }\n    const rootSize = Math.abs(maxX - minX);\n    const halfRootSize = 0.5 * rootSize;\n    const centerX = 0.5 * (minX + maxX);\n    const centerY = 0.5 * (minY + maxY);\n    const tree: BarnesHutTree = {\n      centerOfMass: { x: 0, y: 0},\n      mass: 0,\n      range: {\n        minX: centerX - halfRootSize, maxX: centerX + halfRootSize,\n        minY: centerY - halfRootSize, maxY: centerY + halfRootSize,\n      },\n      size: rootSize,\n    };\n    BarnesHutGraphPhysics.splitBranch(tree);\n    for (const node of this.nodes) {\n      BarnesHutGraphPhysics.placeInTree(tree, node);\n    }\n    return tree;\n  }\n  public step(): boolean {\n    for (const force of this.forces) {\n      force.x = 0;\n      force.y = 0;\n    }\n    const that = this;\n    // Calculate central gravity\n    for (let i = 0; i < this.nodes.length; ++i) {\n      const node = this.nodes[i];\n      const dx = -node.position.x;\n      const dy = -node.position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      const gravityForce = (distance === 0) ? 0 :\n        (this.config.centralGravity / distance);\n      this.forces[i].x = dx * gravityForce;\n      this.forces[i].y = dy * gravityForce;\n    }\n    // Calculate node repulsive force\n    if (this.nodes.length) {\n      function calculateForces(dx: number, dy: number,\n                               node: Positioned,\n                               branch: BarnesHutTree) {\n        if (dx === 0 && dy === 0) {\n          dx = 0.1;\n        }\n        const nodeMass = 1;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const gravityForce = that.config.gravitationalConstant * branch.mass *\n          nodeMass / Math.pow(distance, 3);\n        const force = that.forces[that.nodeToIndex.get(node)!];\n        force.x += dx * gravityForce;\n        force.y += dy * gravityForce;\n      }\n      function getForceContributions(branch: BarnesHutTree, node: Positioned) {\n        if (!branch.children) {\n          throw new Error('Get force contributions ' +\n            'can be only called on a split branch');\n        }\n        getForceContribution(branch.children.NW, node);\n        getForceContribution(branch.children.NE, node);\n        getForceContribution(branch.children.SW, node);\n        getForceContribution(branch.children.SE, node);\n      }\n      function getForceContribution(branch: BarnesHutTree, node: Positioned) {\n        if (!branch.children && !branch.data) {\n          return;\n        }\n        const dx = branch.centerOfMass.x - node.position.x;\n        const dy = branch.centerOfMass.y - node.position.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (branch.size / distance < that.config.theta) {\n          calculateForces(dx, dy, node, branch);\n        } else if (branch.children) {\n          getForceContributions(branch, node);\n        } else if (branch.data !== node) {\n          calculateForces(dx, dy, node, branch);\n        }\n      }\n      const tree = this.formBarnesHutTree();\n      for (const node of this.nodes) {\n        getForceContributions(tree, node);\n      }\n      // Naive method\n      // for (let i = 0; i < this.nodes.length - 1; ++i) {\n      //   const node1 = this.nodes[i];\n      //   const pos1 = node1.position;\n      //   for (let j = i + 1; j < this.nodes.length; ++j) {\n      //     const node2 = this.nodes[j];\n      //     const pos2 = node2.position;\n      //     const dx = pos1.x - pos2.x;\n      //     const dy = pos1.y - pos2.y;\n      //     const distance = Math.sqrt(dx * dx + dy * dy);\n      //     const gravityForce = -2000 / Math.pow(distance + 1e-3, 3);\n      //     this.forces[i].x -= dx * gravityForce;\n      //     this.forces[i].y -= dy * gravityForce;\n      //     this.forces[j].x += dx * gravityForce;\n      //     this.forces[j].y += dy * gravityForce;\n      //   }\n      // }\n    }\n    // Calculate spring force\n    for (const edge of this.layoutData.edges) {\n      if (edge.fromBelonging !== edge.toBelonging) {\n        const items = [\n          edge.fromBelonging,\n          ...edge.edge.getControlPoints(),\n          edge.toBelonging,\n        ];\n        for (let i = 0; i < items.length - 1; ++i) {\n          const item1 = items[i];\n          const item2 = items[i + 1];\n          const edgeLength = this.config.springLength / (items.length - 1);\n          const dx = item1.position.x - item2.position.x;\n          const dy = item1.position.y - item2.position.y;\n          const distance = Math.max(Math.sqrt(dx * dx + dy * dy), 0.01);\n          const springForce = this.config.springConstant *\n            (edgeLength - distance) / distance;\n          const fx = dx * springForce;\n          const fy = dy * springForce;\n          this.forces[this.nodeToIndex.get(item1)!].x += fx;\n          this.forces[this.nodeToIndex.get(item1)!].y += fy;\n          this.forces[this.nodeToIndex.get(item2)!].x -= fx;\n          this.forces[this.nodeToIndex.get(item2)!].y -= fy;\n        }\n      }\n    }\n    // Move nodes\n    function calculateVelocity(velocity: number,\n                               force: number,\n                               mass: number): number {\n      const df = that.config.damping * velocity;\n      const a = (force - df) / mass;\n      velocity += a; // * time;\n      if (Math.abs(velocity) > that.config.maxVelocity) {\n        velocity = velocity > 0 ? that.config.maxVelocity :\n          -that.config.maxVelocity;\n      }\n      return velocity;\n    }\n    for (let i = 0; i < this.nodes.length; ++i) {\n      const item = this.nodes[i];\n      const pos = item.position;\n      const force = this.forces[i];\n      const velocity = this.velocities[i];\n      if (item.fixed) {\n        velocity.x = 0;\n        velocity.y = 0;\n      } else {\n        velocity.x = calculateVelocity(velocity.x, force.x, 1);\n        velocity.y = calculateVelocity(velocity.y, force.y, 1);\n      }\n      item.position = {\n        x: pos.x + velocity.x, // * time\n        y: pos.y + velocity.y, // * time\n      };\n    }\n    for (const edge of this.layoutData.edges) {\n      edge.edge.updatePosition();\n    }\n    return true;\n  }\n}\n","import {GraphPhysicsData} from '@/graph/base/dataInput';\nimport Graph from '@/graph/graph/Graph';\nimport GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport BarnesHutGraphPhysics from '@/graph/graph/physics/BarnesHutGraphPhysics';\nimport GraphLayout from '@/graph/graph/layout/GraphLayout';\n\nexport default function physicsFactory(data: GraphPhysicsData | undefined)\n    : new (graph: Graph, layout: GraphLayout) => GraphPhysics {\n  switch (data && data.type) {\n    default:\n      return BarnesHutGraphPhysics;\n  }\n}\n","import {GraphData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport renderableFactory from '@/graph/base/renderableFactory';\nimport Edge from '@/graph/edge/Edge';\nimport layoutFactory from '@/graph/graph/layout/graphLayoutFactory';\nimport componentFactory from '@/graph/graph/component/componentLayoutFactory';\nimport graphTypeFactory from '@/graph/graph/type/graphTypeFactory';\nimport Port from '@/graph/base/Port';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\nimport GraphLayout, {LayoutData, LayoutEdgeData} from '@/graph/graph/layout/GraphLayout';\nimport ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport GraphType from '@/graph/graph/type/GraphType';\nimport GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport physicsFactory from '@/graph/graph/physics/graphPhysicsFactory';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Node from '@/graph/node/Node';\n\nexport default class Graph extends Port implements Renderable {\n  public static getId(data: GraphData) {\n    if (!data.id) {\n      throw new Error('Missing id field for graph');\n    }\n    return data.id;\n  }\n  public readonly graph: Graph | null;\n  public fullId!: string;\n  public depth!: number;\n  public fromEdges!: Set<Edge>;\n  public toEdges!: Set<Edge>;\n  public children!: Map<string, Renderable>;\n  public ports!: Map<string, Node | Graph>;\n  public edges!: Map<string, Edge>;\n  public subgraphs!: Map<string, Graph>;\n  public layouts!: GraphLayout[];\n  public physics!: GraphPhysics[];\n  public layoutsData!: LayoutData[];\n  public componentLayout!: ComponentLayout;\n  private graphType!: GraphType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'graph') {\n      throw new Error('Expect node type');\n    }\n    super(root, parent);\n    this.graph = graph;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: GraphData, parentData: ParentData | null) {\n    this.id = Graph.getId(data);\n    const newChildren = new Map();\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    this.fromEdges = new Set();\n    this.toEdges = new Set();\n    const oldChildren = this.children;\n    this.children = new Map();\n    this.edges = new Map();\n    this.ports = new Map();\n    this.subgraphs = new Map();\n    if (data.children) {\n      for (const child of data.children) {\n        const type = renderableFactory(child);\n        const id = type.getId(child);\n        if (this.children.has(id)) {\n          throw new Error(`Duplicated id ${id}`);\n        }\n        let newChild: Renderable;\n        if (oldChildren && oldChildren.has(id) &&\n            oldChildren.get(id)!.constructor === type) {\n          newChild = oldChildren.get(id)!;\n          newChild.updateData(child, {\n            parentId: this.fullId,\n            depth: this.depth,\n          });\n        } else {\n          newChild = new type(this.root, this, null, child, {\n            parentId: this.fullId,\n            depth: this.depth,\n          });\n        }\n        this.children.set(id, newChild);\n        if (newChild instanceof Edge) {\n          this.edges.set(id, newChild);\n        } else {\n          this.ports.set(id, newChild as any);\n          if (newChild instanceof Graph) {\n            this.subgraphs.set(id, newChild);\n          }\n        }\n      }\n    }\n    // Create adjacency list\n    const adjacencyList: Map<Node | Graph, Array<Node | Graph>> = new Map();\n    const edgesData: LayoutEdgeData[] = [];\n    for (const edge of this.edges.values()) {\n      const from = this.findPort(edge.from.split(':'));\n      const to = this.findPort(edge.to.split(':'));\n      const fromBelonging = this.findBelongingPort(edge.from);\n      const toBelonging = this.findBelongingPort(edge.to);\n      if (from && to && fromBelonging && toBelonging) {\n        if (!adjacencyList.has(fromBelonging)) {\n          adjacencyList.set(fromBelonging, []);\n        }\n        if (!adjacencyList.has(toBelonging)) {\n          adjacencyList.set(toBelonging, []);\n        }\n        adjacencyList.get(fromBelonging)!.push(toBelonging);\n        adjacencyList.get(toBelonging)!.push(fromBelonging);\n        edgesData.push({ from, to, fromBelonging, toBelonging, edge });\n      } else {\n        throw new Error('Cannot find starting or ending port of edge');\n      }\n    }\n    // Compute connected components by DFS\n    const unvisited: Set<Node | Graph> = new Set(this.ports.values());\n    this.layoutsData = [];\n    const calculateConnectedComponent = (from: Node | Graph) => {\n      unvisited.delete(from);\n      const component = this.layoutsData[this.layoutsData.length - 1];\n      component.ports.push(from);\n      const adjacency = adjacencyList.get(from);\n      if (adjacency) {\n        for (const to of adjacency) {\n          if (unvisited.has(to)) {\n            calculateConnectedComponent(to);\n          }\n        }\n      }\n    };\n    while (unvisited.size) {\n      const node = unvisited.values().next().value;\n      const component: LayoutData = {\n        ports: [],\n        edges: [],\n        children: [],\n      };\n      this.layoutsData.push(component);\n      calculateConnectedComponent(node);\n    }\n    // Classify edges to belonging component\n    const portToComponent: Map<Port, LayoutData> = new Map();\n    for (const component of this.layoutsData) {\n      for (const port of component.ports) {\n        portToComponent.set(port, component);\n      }\n    }\n    for (const edgeData of edgesData) {\n      const {fromBelonging} = edgeData;\n      portToComponent.get(fromBelonging)!.edges.push(edgeData);\n    }\n    // Add children\n    for (const component of this.layoutsData) {\n      component.children = (component.ports as any[])\n        .concat(component.edges.map((x) => x.edge));\n    }\n    // Create layout\n    const componentClass = componentFactory(data.component);\n    if (!this.componentLayout ||\n        this.componentLayout.constructor !== componentClass) {\n      this.componentLayout = new componentClass(this, this);\n    }\n    const layoutClass = layoutFactory(data.layout);\n    const physicsClass = physicsFactory(data.physics);\n    const newLayouts: GraphLayout[] = [];\n    const newPhysics: GraphPhysics[] = [];\n    for (let i = 0; i < this.layoutsData.length; ++i) {\n      const layout = this.layouts && i < this.layouts.length &&\n        this.layouts[i].constructor === layoutClass ?\n        this.layouts[i] : new layoutClass(this, this.componentLayout);\n      const physics = this.physics && i < this.physics.length &&\n        this.physics[i].constructor === physicsClass ?\n        this.physics[i] : new physicsClass(this, layout);\n      for (const child of this.layoutsData[i].children) {\n        (child as any).parent = layout;\n      }\n      layout.solve(data.layout, this.layoutsData[i], i);\n      physics.solve(data.physics, this.layoutsData[i]);\n      newLayouts.push(layout);\n      newPhysics.push(physics);\n    }\n    this.layouts = newLayouts;\n    this.physics = newPhysics;\n    this.componentLayout.updateData(data.component);\n    const typeClass = graphTypeFactory(data);\n    if (!this.graphType || this.graphType.constructor !== typeClass) {\n      this.graphType = new typeClass(this, data);\n    } else {\n      this.graphType.updateData(data);\n    }\n  }\n  public step(): boolean {\n    let updated = false;\n    if (this.subgraphs) {\n      for (const subgraph of this.subgraphs.values()) {\n        if (subgraph.step()) {\n          updated = true;\n        }\n      }\n    }\n    if (this.physics) {\n      for (const physics of this.physics) {\n        if (physics.step()) {\n          updated = true;\n        }\n      }\n    }\n    return updated;\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      draggable: true,\n      id: this.fullId,\n      x: this.position.x,\n      y: this.position.y,\n      children: this.graphType.render(),\n    };\n  }\n  public findBelongingPort(id: string): Node | Graph | null {\n    id = id.split(':')[0];\n    if (this.ports.has(id)) {\n      return this.ports.get(id)!;\n    }\n    for (const graph of this.subgraphs.values()) {\n      if (graph.findBelongingPort(id)) {\n        return graph;\n      }\n    }\n    return null;\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    if (this.ports.has(id[0])) {\n      const node = this.ports.get(id[0])!;\n      return node.findPort(id.slice(1));\n    }\n    for (const graph of this.subgraphs.values()) {\n      const node = graph.findPort(id);\n      if (node) {\n        return node;\n      }\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.graphType.getBoundingBoxSize();\n  }\n  public distanceToBorder(angle: number) {\n    return this.graphType.distanceToBorder(angle);\n  }\n}\n","import Edge from '@/graph/edge/Edge';\nimport {EdgeData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Positioned from '@/graph/base/Positioned';\n\nexport default abstract class EdgeType {\n  public readonly parent: Edge;\n  protected constructor(parent: Edge) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: EdgeData): void;\n  public abstract fullyUpdatePosition(): void;\n  public abstract updatePosition(): void;\n  public getControlPoints(): Positioned[] {\n    return [];\n  }\n  public abstract render(): AnyShape;\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, Position, StraightEdgeData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport interface StraightEdgeConfig {\n  fromPointer: boolean;\n  toPointer: boolean;\n  lineColor: string;\n  lineWidth: number;\n  pointerColor: string;\n  pointerWidth: number;\n  pointerHeight: number;\n}\n\nexport default class StraightEdgeType extends EdgeType {\n  private static defaultConfig: StraightEdgeConfig = {\n    fromPointer: false,\n    toPointer: true,\n    lineColor: 'black',\n    lineWidth: 1,\n    pointerColor: 'black',\n    pointerWidth: 10,\n    pointerHeight: 15,\n  };\n  private config!: StraightEdgeConfig;\n  private fromPointerPos: Position;\n  private toPointerPos: Position;\n  private fromAngle: number;\n  private toAngle: number;\n  private lineFromPos: Position;\n  private lineToPos: Position;\n  public constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'straight') {\n      throw new Error('Expect straight shape');\n    }\n    super(parent);\n    this.updateData(data);\n    this.fromPointerPos = { x: 0, y: 0 };\n    this.toPointerPos = { x: 0, y: 0 };\n    this.fromAngle = this.toAngle = 0;\n    this.lineFromPos = { x: 0, y: 0 };\n    this.lineToPos = { x: 0, y: 0 };\n  }\n  public updateData(data: StraightEdgeData): void {\n    this.config = Object.assign({}, StraightEdgeType.defaultConfig, data);\n  }\n  public fullyUpdatePosition(): void {\n    this.updatePosition();\n  }\n  public updatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    this.fromAngle = Math.atan2(toPos.y - fromPos.y, toPos.x - fromPos.x);\n    this.toAngle = Math.PI + this.fromAngle;\n    const fromDistance = fromPort.distanceToBorder(this.fromAngle);\n    const toDistance = toPort.distanceToBorder(this.toAngle);\n    let realFromPosX = fromPos.x + fromDistance * Math.cos(this.fromAngle);\n    let realFromPosY = fromPos.y + fromDistance * Math.sin(this.fromAngle);\n    let realToPosX = toPos.x + toDistance * Math.cos(this.toAngle);\n    let realToPosY = toPos.y + toDistance * Math.sin(this.toAngle);\n    this.fromPointerPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    if (this.config.fromPointer) {\n      realFromPosX += this.config.pointerWidth * Math.cos(this.fromAngle);\n      realFromPosY += this.config.pointerWidth * Math.sin(this.fromAngle);\n    }\n    this.lineFromPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    this.toPointerPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n    if (this.config.toPointer) {\n      realToPosX += this.config.pointerWidth * Math.cos(this.toAngle);\n      realToPosY += this.config.pointerWidth * Math.sin(this.toAngle);\n    }\n    this.lineToPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n  }\n\n  public render(): AnyShape {\n    const children: AnyShape[] = [];\n    if (this.config.fromPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.fromPointerPos.x,\n        y: this.fromPointerPos.y,\n        angle: this.fromAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    if (this.config.toPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.toPointerPos.x,\n        y: this.toPointerPos.y,\n        angle: this.toAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    children.unshift({\n      is: 'line',\n      points: [\n        this.lineFromPos.x, this.lineFromPos.y,\n        this.lineToPos.x, this.lineToPos.y,\n      ],\n      stroke: this.config.lineColor,\n      strokeWidth: this.config.lineWidth,\n    });\n    return {\n      is: 'group',\n      children,\n    };\n  }\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, Position, QuadraticEdgeData} from '@/graph/base/dataInput';\nimport Positioned from '@/graph/base/Positioned';\nimport Edge from '@/graph/edge/Edge';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport interface QuadraticEdgeConfig {\n  fromPointer: boolean;\n  toPointer: boolean;\n  lineColor: string;\n  lineWidth: number;\n  pointerColor: string;\n  pointerWidth: number;\n  pointerHeight: number;\n}\n\nexport default class QuadraticEdgeType extends EdgeType {\n  private static defaultConfig: QuadraticEdgeConfig = {\n    fromPointer: false,\n    toPointer: true,\n    lineColor: 'black',\n    lineWidth: 1,\n    pointerColor: 'black',\n    pointerWidth: 10,\n    pointerHeight: 15,\n  };\n  private config!: QuadraticEdgeConfig;\n  private controlPoint!: Positioned;\n  private fromPointerPos: Position;\n  private toPointerPos: Position;\n  private fromAngle: number;\n  private toAngle: number;\n  private lineFromPos: Position;\n  private lineToPos: Position;\n  public constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'quadratic') {\n      throw new Error('Expect quadratic shape');\n    }\n    super(parent);\n    this.updateData(data);\n    this.controlPoint = new Positioned(this.parent.parent);\n    this.fromPointerPos = { x: 0, y: 0 };\n    this.toPointerPos = { x: 0, y: 0 };\n    this.fromAngle = this.toAngle = 0;\n    this.lineFromPos = { x: 0, y: 0 };\n    this.lineToPos = { x: 0, y: 0 };\n  }\n  public updateData(data: QuadraticEdgeData): void {\n    this.config = Object.assign({}, QuadraticEdgeType.defaultConfig, data);\n  }\n  public fullyUpdatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    this.controlPoint.position = {\n      x: 0.5 * (fromPos.x + toPos.x),\n      y: 0.5 * (fromPos.y + toPos.y),\n    };\n    this.updatePosition();\n  }\n  public updatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    const viaPos = this.controlPoint.position;\n    this.fromAngle = Math.atan2(viaPos.y - fromPos.y, viaPos.x - fromPos.x);\n    this.toAngle = Math.PI + Math.atan2(toPos.y - viaPos.y, toPos.x - viaPos.x);\n    const fromDistance = fromPort.distanceToBorder(this.fromAngle);\n    const toDistance = toPort.distanceToBorder(this.toAngle);\n    let realFromPosX = fromPos.x + fromDistance * Math.cos(this.fromAngle);\n    let realFromPosY = fromPos.y + fromDistance * Math.sin(this.fromAngle);\n    let realToPosX = toPos.x + toDistance * Math.cos(this.toAngle);\n    let realToPosY = toPos.y + toDistance * Math.sin(this.toAngle);\n    this.fromPointerPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    if (this.config.fromPointer) {\n      realFromPosX += this.config.pointerWidth * Math.cos(this.fromAngle);\n      realFromPosY += this.config.pointerWidth * Math.sin(this.fromAngle);\n    }\n    this.lineFromPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    this.toPointerPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n    if (this.config.toPointer) {\n      realToPosX += this.config.pointerWidth * Math.cos(this.toAngle);\n      realToPosY += this.config.pointerWidth * Math.sin(this.toAngle);\n    }\n    this.lineToPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n  }\n  public getControlPoints(): Positioned[] {\n    return [this.controlPoint];\n  }\n  public render(): AnyShape {\n    const children: AnyShape[] = [];\n    if (this.config.fromPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.fromPointerPos.x,\n        y: this.fromPointerPos.y,\n        angle: this.fromAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    if (this.config.toPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.toPointerPos.x,\n        y: this.toPointerPos.y,\n        angle: this.toAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    children.unshift({\n      is: 'quadraticLine',\n      points: [\n        this.lineFromPos.x, this.lineFromPos.y,\n        this.controlPoint.position.x,\n        this.controlPoint.position.y,\n        this.lineToPos.x, this.lineToPos.y,\n      ],\n      stroke: this.config.lineColor,\n      strokeWidth: this.config.lineWidth,\n    });\n    return {\n      is: 'group',\n      children,\n    };\n  }\n}\n","import {EdgeData} from '@/graph/base/dataInput';\nimport Edge from '@/graph/edge/Edge';\nimport StraightEdgeType from '@/graph/edge/type/StraightEdgeType';\nimport EdgeType from '@/graph/edge/type/EdgeType';\nimport QuadraticEdgeType from '@/graph/edge/type/QuadraticEdgeType';\n\nexport default function edgeTypeFactory(data: EdgeData)\n    : new (parent: Edge, data: EdgeData) => EdgeType {\n  switch (data.shape) {\n    case 'straight':\n      return StraightEdgeType;\n    default:\n      data.shape = 'quadratic';\n      return QuadraticEdgeType;\n  }\n}\n","/*\n * recordLabel\n *   : field ('|' field )*\n *   ;\n * field\n *   : (’<’ string ’>’)? string?\n *   | '{' recordLabel '}'\n *   ;\n */\n\nenum TokenEnum {\n  EOF,\n  VERTICAL_BAR,\n  LEFT_CURLY_BRACE,\n  RIGHT_CURLY_BRACE,\n  LEFT_ANGLE_BRACE,\n  RIGHT_ANGLE_BRACE,\n  STRING,\n}\n\ninterface Token {\n  type: TokenEnum;\n  text?: string;\n}\n\nexport interface Record {\n  type: 'record';\n  children: RecordData[];\n}\n\nexport interface Field {\n  type: 'field';\n  port?: string;\n  text?: string;\n}\n\nexport type RecordData = Record | Field;\n\nexport default function recordParser(record: string): RecordData {\n  let position = 0;\n  const buffer: Token[] = [];\n  function lexer(): Token {\n    if (buffer.length) {\n      return buffer.pop()!;\n    }\n    while (position < record.length &&\n           ' \\t\\n\\r\\v'.indexOf(record[position]) > -1) {\n      ++position;\n    }\n    if (position >= record.length) {\n      return { type: TokenEnum.EOF };\n    }\n    switch (record[position]) {\n      case '|':\n        ++position;\n        return { type: TokenEnum.VERTICAL_BAR };\n      case '{':\n        ++position;\n        return { type: TokenEnum.LEFT_CURLY_BRACE };\n      case '}':\n        ++position;\n        return { type: TokenEnum.RIGHT_CURLY_BRACE };\n      case '<':\n        ++position;\n        return { type: TokenEnum.LEFT_ANGLE_BRACE };\n      case '>':\n        ++position;\n        return { type: TokenEnum.RIGHT_ANGLE_BRACE };\n      default: {\n        let text = '';\n        while (position < record.length &&\n               ' \\t\\n\\r\\v|{}<>'.indexOf(record[position]) === -1) {\n          if (record[position] === '\\\\') {\n            ++position;\n            if (position === record.length) {\n              throw new Error('Unexpected end of escape sequence');\n            }\n            switch (record[position]) {\n              case 'n':\n                text += '\\n';\n                break;\n              default:\n                text += record[position];\n            }\n          } else {\n            text += record[position];\n          }\n          ++position;\n        }\n        return { type: TokenEnum.STRING, text };\n      }\n    }\n  }\n  function parseRecordLabel(): Record {\n    const children = [parseField()];\n    let token;\n    while ((token = lexer())!.type === TokenEnum.VERTICAL_BAR) {\n      children.push(parseField());\n    }\n    buffer.push(token);\n    return { type: 'record', children };\n  }\n  function parseField(): RecordData {\n    let token = lexer();\n    if (token.type === TokenEnum.LEFT_CURLY_BRACE) {\n      const ret = parseRecordLabel();\n      if (lexer().type !== TokenEnum.RIGHT_CURLY_BRACE) {\n        throw new Error('Expect \\'}\\'');\n      }\n      return ret;\n    }\n    const result: Field = { type: 'field' };\n    if (token.type === TokenEnum.LEFT_ANGLE_BRACE) {\n      token = lexer();\n      if (token.type === TokenEnum.STRING) {\n        let port = token.text;\n        while ((token = lexer()).type === TokenEnum.STRING) {\n          port += ' ' + token.text;\n        }\n        result.port = port;\n      }\n      if (token.type !== TokenEnum.RIGHT_ANGLE_BRACE) {\n        throw new Error('Expect \\'>\\'');\n      }\n      token = lexer();\n    }\n    if (token.type === TokenEnum.STRING) {\n      let text = token.text;\n      while ((token = lexer()).type === TokenEnum.STRING) {\n        text += ' ' + token.text;\n      }\n      result.text = text;\n    }\n    buffer.push(token);\n    return result;\n  }\n  const tree = parseRecordLabel();\n  if (lexer().type !== TokenEnum.EOF) {\n    throw new Error('Unexpected token');\n  }\n  return tree;\n}\n","import Node from '@/graph/node/Node';\nimport {NodeData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class NodeType {\n  public readonly parent: Node;\n  protected constructor(parent: Node) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: NodeData): void;\n  public abstract render(): AnyShape[];\n  public findPort(id: string[]): Port | null {\n    return null;\n  }\n  public abstract getBoundingBoxSize(): Size;\n  public abstract distanceToBorder(angle: number): number;\n}\n","import NodeType from '@/graph/node/type/NodeType';\nimport Node from '@/graph/node/Node';\nimport {BoxNodeData, NodeData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface BoxNodeConfig {\n  label: string | null;\n  style: 'solid' | 'filled';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n}\n\nexport default class BoxNodeType extends NodeType {\n  private static defaultConfig: BoxNodeConfig = {\n    label: null,\n    style: 'solid',  // or 'filled'\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 4,\n    align: 'center',\n  };\n  private config!: BoxNodeConfig;\n  private textSize!: Size;\n  private contentSize!: Size;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'box') {\n      throw new Error('Expect box shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: BoxNodeData) {\n    const newConfig = Object.assign({}, BoxNodeType.defaultConfig, data);\n    const textSizeNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    const contentSizeNeedsUpdate = textSizeNeedsUpdate ||\n      this.config.padding !== newConfig.padding;\n    const borderSizeNeedsUpdate = contentSizeNeedsUpdate ||\n      this.config.strokeWidth !== newConfig.strokeWidth;\n    this.config = newConfig;\n    if (textSizeNeedsUpdate) {\n      const ctx = this.parent.root.ctx;\n      ctx.font = `${newConfig.fontSize}px ${newConfig.fontFamily}`;\n      const lines = newConfig.label ? newConfig.label.split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * newConfig.fontSize * newConfig.lineHeight,\n      };\n    }\n    if (contentSizeNeedsUpdate) {\n      this.contentSize = {\n        width: this.textSize.width + 2 * newConfig.padding,\n        height: this.textSize.height + 2 * newConfig.padding,\n      };\n    }\n    if (borderSizeNeedsUpdate) {\n      // Konva's border extends towards both inner and outer\n      this.borderSize = {\n        width: this.contentSize.width + newConfig.strokeWidth,\n        height: this.contentSize.height + newConfig.strokeWidth,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    const rect: AnyShape = {\n      is: 'rect',\n      x: -this.contentSize.width / 2,\n      y: -this.contentSize.height / 2,\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n      fill: this.config.style === 'filled' ?\n        this.config.fillColor : undefined,\n      stroke: this.config.strokeWidth > 0 ?\n        this.config.strokeColor : undefined,\n      strokeWidth: this.config.strokeWidth,\n    };\n    const rendered: AnyShape[] = [rect];\n    if (this.config.label) {\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.contentSize.width / 2,\n        y: -this.contentSize.height / 2,\n        text: this.config.label,\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        lineHeight: this.config.lineHeight,\n        padding: this.config.padding,\n        align: this.config.align,\n      };\n      rendered.push(text);\n    }\n    return rendered;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import RecordNodeType from '@/graph/node/type/RecordNodeType';\nimport {Field, Record, RecordData} from '@/graph/node/type/recordParser';\nimport {Size} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default class RecordCell extends Port {\n  private readonly nodeType: RecordNodeType;\n  private isField!: boolean;\n  private isHorizontal!: boolean;\n  private label?: string;\n  private children?: RecordCell[];\n  private textSize?: Size;\n  private contentSize?: Size;\n  private cellSize!: Size;\n  constructor(root: Root, parent: Port, nodeType: RecordNodeType,\n              data: RecordData, isHorizontal = true) {\n    super(root, parent);\n    this.nodeType = nodeType;\n    this.updateData(data, isHorizontal);\n  }\n  public updateData(data: RecordData, isHorizontal = true) {\n    this.isField = data.type === 'field';\n    this.isHorizontal = isHorizontal;\n    if (this.isField) {\n      const fieldData = data as Field;\n      if (fieldData.port) {\n        this.nodeType.getPorts()!.set(fieldData.port, this);\n      }\n      const ctx = this.root.ctx;\n      const config = this.nodeType.getConfig()!;\n      this.label = fieldData.text || '';\n      ctx.font = `${config.fontSize}px ${config.fontFamily}`;\n      const lines =  this.label ?  this.label.split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * config.fontSize * config.lineHeight,\n      };\n      this.contentSize = {\n        width: this.textSize.width + 2 * config.padding,\n        height: this.textSize.height + 2 * config.padding,\n      };\n      this.cellSize = {\n        width: this.contentSize.width,\n        height: this.contentSize.height,\n      };\n    } else {\n      const recordData = data as Record;\n      this.children = [];\n      for (const child of recordData.children) {\n        const cell = new RecordCell(this.root, this, this.nodeType,\n          child, !isHorizontal);\n        this.children.push(cell);\n      }\n      if (isHorizontal) {\n        this.cellSize = {\n          width: this.children.map((x: RecordCell) => x.cellSize.width)\n            .reduce((a, b) => a + b, 0),\n          height: Math.max(...this.children.map(\n            (x: RecordCell) => x.cellSize.height)),\n        };\n      } else {\n        this.cellSize = {\n          width: Math.max(...this.children.map(\n            (x: RecordCell) => x.cellSize.width)),\n          height: this.children.map((x: RecordCell) => x.cellSize.height)\n            .reduce((a, b) => a + b, 0),\n        };\n      }\n    }\n  }\n  public updateCellSize(width: number, height: number) {\n    if (!this.isField) {\n      if (!this.children) {\n        throw new Error('Non-field record should have children');\n      }\n      if (this.isHorizontal) {\n        const deltaWidth = (width - this.cellSize.width) / this.children.length;\n        let startX = -width / 2;\n        for (const child of this.children) {\n          child.updateCellSize(child.cellSize.width + deltaWidth, height);\n          child.position = {\n            x: startX + child.cellSize.width / 2,\n            y: 0,\n          };\n          startX += child.cellSize.width;\n        }\n      } else {\n        const deltaHeight = (height - this.cellSize.height) /\n          this.children.length;\n        let startY = -height / 2;\n        for (const child of this.children) {\n          child.updateCellSize(width, child.cellSize.height + deltaHeight);\n          child.position = {\n            x: 0,\n            y: startY + child.cellSize.height / 2,\n          };\n          startY += child.cellSize.height;\n        }\n      }\n    }\n    this.cellSize = { width, height };\n  }\n  public getCellSize(): Size | undefined {\n    return this.cellSize;\n  }\n  public render(): AnyShape[] {\n    let rendered: AnyShape[];\n    if (this.isField) {\n      const config = this.nodeType.getConfig()!;\n      rendered = [\n        {\n          is: 'rect',\n          x: -this.cellSize.width / 2,\n          y: -this.cellSize.height / 2,\n          width: this.cellSize.width,\n          height: this.cellSize.height,\n          fill: config.style === 'filled' ? config.fillColor : undefined,\n          stroke: config.strokeWidth > 0 ? config.strokeColor : undefined,\n          strokeWidth: config.strokeWidth,\n        },\n      ];\n      if (this.label) {\n        if (!this.contentSize) {\n          throw new Error('Field record should have content size');\n        }\n        rendered.push({\n          is: 'text',\n          x: -this.contentSize.width / 2,\n          y: -this.contentSize.height / 2,\n          text: this.label,\n          fontSize: config.fontSize,\n          fontFamily: config.fontFamily,\n          lineHeight: config.lineHeight,\n          padding: config.padding,\n          align: config.align,\n        });\n      }\n    } else {\n      if (!this.children) {\n        throw new Error('Non-field record should have children');\n      }\n      rendered = this.children.map((x) => {\n        const position = x.position;\n        return {\n          is: 'group',\n          x: position.x,\n          y: position.y,\n          children: x.render(),\n        };\n      });\n    }\n    return rendered;\n  }\n  public getBoundingBoxSize(): Size {\n    const config = this.nodeType.getConfig()!;\n    return {\n      width: this.cellSize.width + config.strokeWidth,\n      height: this.cellSize.height + config.strokeWidth,\n    };\n  }\n  public distanceToBorder(angle: number): number {\n    const borderSize = this.getBoundingBoxSize();\n    return Math.min(\n      Math.abs(borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import NodeType from './NodeType';\nimport Node from '@/graph/node/Node';\nimport recordParser from './recordParser';\nimport RecordCell from './RecordCell';\nimport {NodeData, RecordNodeData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface RecordNodeConfig {\n  label: string;\n  direction: 'horizontal' | 'vertical';\n  style: 'solid' | 'filled';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n}\n\nexport default class RecordNodeType extends NodeType {\n  public static defaultConfig: RecordNodeConfig = {\n    label: '',\n    direction: 'horizontal', // or 'vertical'\n    style: 'solid',\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 4,\n    align: 'center',\n  };\n  private config!: RecordNodeConfig;\n  private ports!: Map<string, Port>;\n  private root!: RecordCell;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'record') {\n      throw new Error('Expect record shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public getConfig(): RecordNodeConfig | undefined {\n    return this.config;\n  }\n  public getPorts(): Map<string, Port> | undefined {\n    return this.ports;\n  }\n  public updateData(data: RecordNodeData) {\n    const newConfig = Object.assign({}, RecordNodeType.defaultConfig, data);\n    const contentNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.direction !== newConfig.direction ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight ||\n      this.config.padding !== newConfig.padding;\n    const borderNeedsUpdate = contentNeedsUpdate ||\n      this.config.strokeWidth !== newConfig.strokeWidth;\n    this.config = newConfig;\n    if (contentNeedsUpdate) {\n      const record = recordParser(data.label);\n      this.ports = new Map();\n      this.root = new RecordCell(this.parent.root, this.parent, this,\n        record, this.config.direction === 'horizontal');\n      const rootCellSize = this.root.getCellSize()!;\n      this.root.updateCellSize(rootCellSize.width, rootCellSize.height);\n    }\n    if (borderNeedsUpdate) {\n      const rootCellSize = this.root.getCellSize()!;\n      this.borderSize = {\n        width: rootCellSize.width + this.config.strokeWidth,\n        height: rootCellSize.height + this.config.strokeWidth,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    return this.root.render();\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 1) {\n      const founded = this.ports.get(id[0]);\n      if (founded) {\n        return founded;\n      }\n      return null;\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import TableNodeType from '@/graph/node/type/TableNodeType';\nimport Root from '@/graph/Root';\nimport {Element} from 'xml-js';\nimport {Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface TableCellConfig {\n  rowSpan: number;\n  columnSpan: number;\n  border: number;\n  backgroundColor: string;\n}\n\nexport default class TableCell extends Port {\n  public rowOffset!: number;\n  public columnOffset!: number;\n  public contentSize!: Size;\n  public cellSize!: Size;\n  private readonly nodeType: TableNodeType;\n  private config!: TableCellConfig;\n  private port?: string;\n  private label!: string;\n  private textSize!: Size;\n  constructor(root: Root, parent: Port, nodeType: TableNodeType, data: any) {\n     super(root, parent);\n     this.nodeType = nodeType;\n     this.updateData(data);\n  }\n  public updateData(data: any) {\n    this.config = {\n      rowSpan: 1,\n      columnSpan: 1,\n      border: this.nodeType.getTableConfig()!.cellBorder,\n      backgroundColor: 'white',\n    };\n    if (data.attributes) {\n      for (const attribute of Object.keys(data.attributes)) {\n        const value = data.attributes[attribute];\n        switch (attribute.toLowerCase()) {\n          case 'rowspan':\n            this.config.rowSpan = parseInt(value, 10);\n            break;\n          case 'colspan':\n            this.config.columnSpan = parseInt(value, 10);\n            break;\n          case 'border':\n            this.config.border = parseInt(value, 10);\n            break;\n          case 'bgcolor':\n            this.config.backgroundColor = value;\n            break;\n          case 'port':\n            this.port = value;\n            break;\n          default:\n            throw new Error('Unknown attribute for table cell');\n        }\n      }\n    }\n    function getText(element: Element): string {\n      switch (element.type) {\n        case 'text':\n          if (typeof element.text === 'string') {\n            return element.text;\n          }\n          return '';\n        case 'element':\n          if (element.name && element.name.toLowerCase() === 'br') {\n            return '\\n';\n          }\n          if (element.elements) {\n            return element.elements.map(getText).join('');\n          } else {\n            return '';\n          }\n        default:\n          throw new Error('Unknown element type');\n      }\n    }\n    this.label = getText(data);\n    const parentConfig = this.nodeType.getConfig()!;\n    const tableConfig = this.nodeType.getTableConfig()!;\n    const ctx = this.root.ctx;\n    ctx.font = `${parentConfig.fontSize}px ${parentConfig.fontFamily}`;\n    const lines = this.label ? this.label.split('\\n') : [];\n    this.textSize = {\n      width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n      height: lines.length * parentConfig.fontSize * parentConfig.lineHeight,\n    };\n    this.contentSize = {\n      width: this.textSize.width + 2 * tableConfig.cellPadding,\n      height: this.textSize.height + 2 * tableConfig.cellPadding,\n    };\n    this.cellSize = {\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n    };\n    this.rowOffset = 0;\n    this.columnOffset = 0;\n  }\n  public render(): AnyShape {\n    const rect: AnyShape = {\n      is: 'rect',\n      x: -this.cellSize!.width / 2,\n      y: -this.cellSize!.height / 2,\n      width: this.cellSize!.width,\n      height: this.cellSize!.height,\n      fill: this.config!.backgroundColor,\n      stroke: this.config!.border > 0 ? 'black' : undefined,\n      strokeWidth: this.config!.border,\n    };\n    const rendered: AnyShape[] = [rect];\n    if (this.label) {\n      const parentConfig = this.nodeType.getConfig()!;\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.contentSize!.width / 2,\n        y: -this.contentSize!.height / 2,\n        text: this.label,\n        fontSize: parentConfig.fontSize,\n        fontFamily: parentConfig.fontFamily,\n        lineHeight: parentConfig.lineHeight,\n        padding: this.nodeType.getTableConfig()!.cellPadding,\n        align: 'center',\n      };\n      rendered.push(text);\n    }\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: rendered,\n    };\n  }\n  public getConfig(): TableCellConfig | undefined {\n    return this.config;\n  }\n  public getPort(): string | undefined {\n    return this.port;\n  }\n  public getBoundingBoxSize() {\n    return {\n      width: this.cellSize!.width + this.config!.border,\n      height: this.cellSize!.height + this.config!.border,\n    };\n  }\n  public distanceToBorder(angle: number) {\n    const borderSize = this.getBoundingBoxSize();\n    return Math.min(\n      Math.abs(borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import convert, {Element} from 'xml-js';\nimport NodeType from './NodeType';\nimport TableCell from './TableCell';\nimport Node from '@/graph/node/Node';\nimport {NodeData, Size, TableNodeData} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface TableNodeConfig {\n  label: string;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n}\n\ninterface TableConfig {\n  border: number;\n  cellBorder: number;\n  cellSpacing: number;\n  cellPadding: number;\n}\n\nexport default class TableNodeType extends NodeType {\n  public static defaultConfig: TableNodeConfig = {\n    label: '',\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n  };\n  private config!: TableNodeConfig;\n  private tableConfig!: TableConfig;\n  private table!: TableCell[][];\n  private ports!: Map<string, Port>;\n  private contentSize!: Size;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'table') {\n      throw new Error('Expect record shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: TableNodeData) {\n    const newConfig = Object.assign({}, TableNodeType.defaultConfig, data);\n    const layoutNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    this.config = newConfig;\n    if (layoutNeedsUpdate) {\n      const jsonObj = convert.xml2js(this.config.label) as Element;\n      if (!jsonObj.elements || !jsonObj.elements[0] ||\n          !jsonObj.elements[0].name ||\n          jsonObj.elements[0].name.toLowerCase() !== 'table') {\n        throw new Error('Expect table element');\n      }\n      const tableElement = jsonObj.elements[0];\n      this.tableConfig = {\n        border: 0,\n        cellBorder: 1,\n        cellSpacing: 0,\n        cellPadding: 4,\n      };\n      if (tableElement.attributes) {\n        for (const attribute of Object.keys(tableElement.attributes)) {\n          const value = tableElement.attributes[attribute] as string;\n          switch (attribute.toLowerCase()) {\n            case 'border':\n              this.tableConfig.border = parseInt(value, 10);\n              break;\n            case 'cellborder':\n              this.tableConfig.cellBorder = parseInt(value, 10);\n              break;\n            case 'cellspacing':\n              this.tableConfig.cellSpacing = parseInt(value, 10);\n              break;\n            case 'cellpadding':\n              this.tableConfig.cellPadding = parseInt(value, 10);\n              break;\n            default:\n              throw new Error('Unknown attribute for table');\n          }\n        }\n      }\n      // Parse table and get numbers of rows and columns\n      this.table = [];\n      this.ports = new Map();\n      let rows = 0;\n      let columns = 0;\n      let firstRow = true;\n      if (tableElement.elements) {\n        for (const tr of tableElement.elements) {\n          if (!tr.name || tr.name.toLowerCase() !== 'tr') {\n            throw new Error('Expect tr element');\n          }\n          const row = [];\n          if (tr.elements) {\n            for (const td of tr.elements) {\n              if (!td.name || td.name.toLowerCase() !== 'td') {\n                throw new Error('Expect td element');\n              }\n              const cell = new TableCell(this.parent.root, this.parent,\n                this, td);\n              const port = cell.getPort();\n              if (port) {\n                this.ports.set(port, cell);\n              }\n              if (firstRow) {\n                columns += cell.getConfig()!.columnSpan;\n              }\n              row.push(cell);\n            }\n          }\n          ++rows;\n          if (firstRow) {\n            firstRow = false;\n          }\n          this.table.push(row);\n        }\n      }\n      // Create empty cell size table\n      const cellSizes = [];\n      for (let i = 0; i < rows; ++i) {\n        cellSizes.push(Array(columns).fill(null));\n      }\n      // Fill size table with minimum required size\n      for (let rowOffset = 0; rowOffset < rows; ++rowOffset) {\n        let columnOffset = 0;\n        for (const cell of this.table[rowOffset]) {\n          while (columnOffset < columns && cellSizes[rowOffset][columnOffset]) {\n            ++columnOffset;\n          }\n          cell.rowOffset = rowOffset;\n          cell.columnOffset = columnOffset;\n          const {rowSpan, columnSpan} = cell.getConfig()!;\n          const cellHeight = (cell.contentSize.height -\n            (rowSpan - 1) * this.tableConfig.cellSpacing) / rowSpan;\n          const cellWidth = (cell.contentSize.width -\n            (columnSpan - 1) * this.tableConfig.cellSpacing) / columnSpan;\n          for (let i = 0; i < rowSpan; ++i) {\n            for (let j = 0; j < columnSpan; ++j) {\n              cellSizes[rowOffset + i][columnOffset + j] = {\n                width: cellWidth,\n                height: cellHeight,\n              };\n            }\n          }\n          columnOffset += columnSpan;\n        }\n      }\n      // Get height of rows and width of columns\n      const rowHeight = [];\n      const columnWidth = [];\n      for (let i = 0; i < rows; ++i) {\n        let max = -Infinity;\n        for (let j = 0; j < columns; ++j) {\n          if (cellSizes[i][j].height > max) {\n            max = cellSizes[i][j].height;\n          }\n        }\n        rowHeight.push(max);\n      }\n      for (let j = 0; j < columns; ++j) {\n        let max = -Infinity;\n        for (let i = 0; i < rows; ++i) {\n          if (cellSizes[i][j].width > max) {\n            max = cellSizes[i][j].width;\n          }\n        }\n        columnWidth.push(max);\n      }\n      // Get accumulated height and width\n      const accRowHeight = [0];\n      const accColumnWidth = [0];\n      for (let i = 0; i < rows; ++i) {\n        accRowHeight.push(accRowHeight[i] + rowHeight[i] +\n          this.tableConfig.cellSpacing);\n      }\n      for (let i = 0; i < columns; ++i) {\n        accColumnWidth.push(accColumnWidth[i] + columnWidth[i] +\n          this.tableConfig.cellSpacing);\n      }\n      this.contentSize = {\n        width: accColumnWidth[accColumnWidth.length - 1] -\n          this.tableConfig.cellSpacing,\n        height: accRowHeight[accRowHeight.length - 1] -\n          this.tableConfig.cellSpacing,\n      };\n      // Set size and position to cells\n      for (const row of this.table) {\n        for (const cell of row) {\n          const {rowSpan, columnSpan} = cell.getConfig()!;\n          const {rowOffset, columnOffset} = cell;\n          const upperLeftX = accColumnWidth[columnOffset];\n          const upperLeftY = accRowHeight[rowOffset];\n          const width = accColumnWidth[columnOffset + columnSpan] -\n            upperLeftX - this.tableConfig.cellSpacing;\n          const height = accRowHeight[rowOffset + rowSpan] -\n            upperLeftY - this.tableConfig.cellSpacing;\n          cell.position = {\n            x: upperLeftX + width / 2 - this.contentSize.width / 2,\n            y: upperLeftY + height / 2 - this.contentSize.height / 2,\n          };\n          cell.cellSize = { width, height };\n        }\n      }\n      this.borderSize = {\n        width: this.contentSize.width + this.tableConfig.border +\n          2 * this.tableConfig.cellSpacing,\n        height: this.contentSize.height + this.tableConfig.border +\n          2 * this.tableConfig.cellSpacing,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    const rendered: AnyShape[] = [];\n    rendered.push({\n      is: 'rect',\n      x: -this.contentSize.width / 2 - this.tableConfig.cellSpacing,\n      y: -this.contentSize.height / 2 - this.tableConfig.cellSpacing,\n      width: this.contentSize.width + 2 * this.tableConfig.cellSpacing,\n      height: this.contentSize.height + 2 * this.tableConfig.cellSpacing,\n      fill: 'white',\n      stroke: this.tableConfig.border > 0 ? 'black' : undefined,\n      strokeWidth: this.tableConfig.border,\n    });\n    for (const row of this.table) {\n      for (const cell of row) {\n        rendered.push(cell.render());\n      }\n    }\n    return rendered;\n  }\n  public getConfig(): TableNodeConfig | undefined {\n    return this.config;\n  }\n  public getTableConfig(): TableConfig | undefined {\n    return this.tableConfig;\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 1) {\n      const founded = this.ports.get(id[0]);\n      if (founded) {\n        return founded;\n      }\n      return null;\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import BoxNodeType from '@/graph/node/type/BoxNodeType';\nimport NodeType from '@/graph/node/type/NodeType';\nimport {NodeData} from '@/graph/base/dataInput';\nimport Node from '@/graph/node/Node';\nimport RecordNodeType from '@/graph/node/type/RecordNodeType';\nimport TableNodeType from '@/graph/node/type/TableNodeType';\n\nexport default function nodeTypeFactory(data: NodeData)\n    : new (parent: Node, data: NodeData) => NodeType {\n  switch (data.shape) {\n    case 'table':\n      return TableNodeType;\n    case 'record':\n      return RecordNodeType;\n    default:\n      data.shape = 'box';\n      return BoxNodeType;\n  }\n}\n","import {NodeData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport nodeTypeFactory from '@/graph/node/type/nodeTypeFactory';\nimport NodeType from '@/graph/node/type/NodeType';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Port from '@/graph/base/Port';\nimport Positioned from '@/graph/base/Positioned';\nimport Graph from '@/graph/graph/Graph';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport default class Node extends Port implements Renderable {\n  public static getId(data: NodeData) {\n    if (!data.id) {\n      throw new Error('Missing id field for node');\n    }\n    return data.id;\n  }\n  public readonly graph: Graph | null;\n  public depth!: number;\n  public fullId!: string;\n  public fromEdges!: Set<Edge>;\n  public toEdges!: Set<Edge>;\n  private nodeType!: NodeType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'node') {\n      throw new Error('Expect node type');\n    }\n    super(root, parent);\n    this.graph = graph;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: NodeData, parentData: ParentData | null) {\n    this.id = Node.getId(data);\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    this.fromEdges = new Set();\n    this.toEdges = new Set();\n    const typeClass = nodeTypeFactory(data);\n    if (!this.nodeType || this.nodeType.constructor !== typeClass) {\n      this.nodeType = new typeClass(this, data);\n    } else {\n      this.nodeType.updateData(data);\n    }\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      draggable: true,\n      id: this.fullId,\n      x: this.position.x,\n      y: this.position.y,\n      children: this.nodeType.render(),\n    };\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    return this.nodeType.findPort(id);\n  }\n  public getBoundingBoxSize() {\n    return this.nodeType.getBoundingBoxSize();\n  }\n  public distanceToBorder(angle: number) {\n    return this.nodeType.distanceToBorder(angle);\n  }\n}\n","import {EdgeData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\nimport Graph from '@/graph/graph/Graph';\nimport EdgeType from '@/graph/edge/type/EdgeType';\nimport edgeTypeFactory from '@/graph/edge/type/edgeTypeFactory';\nimport Port from '@/graph/base/Port';\nimport Node from '@/graph/node/Node';\n\nexport default class Edge implements Renderable {\n  public static getId(data: EdgeData) {\n    return data.id || `${data.from}-${data.to}`;\n  }\n  private static findParentNodeOrGraph(node: Positioned | null)\n    : Node | Graph | null {\n    while (node && !(node instanceof Graph || node instanceof Node)) {\n      node = node.parent;\n    }\n    return node;\n  }\n  public from!: string;\n  public to!: string;\n  public depth!: number;\n  public fullId!: string;\n  public readonly root: Root;\n  public readonly graph: Graph | null;\n  public readonly parent: Positioned | null;\n  public id!: string;\n  public fromPort!: Port;\n  public toPort!: Port;\n  public fromNodeOrGraph!: Node | Graph;\n  public toNodeOrGraph!: Node | Graph;\n  private edgeType!: EdgeType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'edge') {\n      throw new Error('Expect edge type');\n    }\n    this.root = root;\n    this.graph = graph;\n    this.parent = parent;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: EdgeData, parentData: ParentData | null) {\n    this.id = Edge.getId(data);\n    this.from = data.from;\n    this.to = data.to;\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    if (!this.graph) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.graph.findPort(this.from.split(':'));\n    const toPort = this.graph.findPort(this.to.split(':'));\n    if (!fromPort || !toPort) {\n      throw new Error(`Unknown start or end port ${this.from}-${this.to} for edge`);\n    }\n    this.fromPort = fromPort;\n    this.toPort = toPort;\n    if (this.fromNodeOrGraph) {\n      this.fromNodeOrGraph.fromEdges.delete(this);\n    }\n    if (this.toNodeOrGraph) {\n      this.toNodeOrGraph.toEdges.delete(this);\n    }\n    const fromNodeOrGraph = Edge.findParentNodeOrGraph(fromPort);\n    const toNodeOrGraph = Edge.findParentNodeOrGraph(toPort);\n    if (!fromNodeOrGraph || !toNodeOrGraph) {\n      throw new Error('Unknown start or end node for edge');\n    }\n    fromNodeOrGraph.fromEdges.add(this);\n    toNodeOrGraph.toEdges.add(this);\n    this.fromNodeOrGraph = fromNodeOrGraph;\n    this.toNodeOrGraph = toNodeOrGraph;\n    const typeClass = edgeTypeFactory(data);\n    if (!this.edgeType || this.edgeType.constructor !== typeClass) {\n      this.edgeType = new typeClass(this, data);\n    } else {\n      this.edgeType.updateData(data);\n    }\n  }\n  public fullyUpdatePosition() {\n    this.edgeType.fullyUpdatePosition();\n  }\n  public updatePosition() {\n    this.edgeType.updatePosition();\n  }\n  public getControlPoints(): Positioned[] {\n    return this.edgeType.getControlPoints();\n  }\n  public render() {\n    return this.edgeType.render();\n  }\n}\n","import Root from '@/graph/Root';\nimport Edge from '@/graph/edge/Edge';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\nimport {RenderableData} from '@/graph/base/dataInput';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface RenderableConstructor {\n  new (root: Root,\n       graph: Graph | null,\n       parent: Positioned | null,\n       data: RenderableData,\n       parentData: ParentData | null): Renderable;\n  getId(data: RenderableData): string;\n}\n\nexport default function renderableFactory(data: RenderableData)\n    : RenderableConstructor {\n  switch (data.type) {\n    case 'node':\n      return Node;\n    case 'edge':\n      return Edge;\n    case 'graph':\n      return Graph;\n    default:\n      throw new Error('Unknown renderable object');\n  }\n}\n","import EventEmitter from '@/graph/base/EventEmitter';\nimport { RenderableData } from '@/graph/base/dataInput';\nimport renderableFactory from '@/graph/base/renderableFactory';\nimport Renderable from '@/graph/base/Renderable';\nimport Port from '@/graph/base/Port';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\n\nexport default class Root extends EventEmitter {\n  public ctx: CanvasRenderingContext2D;\n  public child: (Renderable & Port) | null;\n  private stepTimer: number;\n  private fixed: Port[];\n  public constructor() {\n    super();\n    this.ctx = document.createElement('canvas').getContext('2d')!;\n    this.child = null;\n    this.stepTimer = setInterval(() => {\n      if (this.child instanceof Graph) {\n        if (this.child.step()) {\n          this.informRender();\n        }\n      }\n    }, 1000 / 60);\n    this.fixed = [];\n  }\n  public findPort(id: string) {\n    const idArray = id.split(':');\n    if (this.child) {\n      if (this.child.id !== idArray[0]) {\n        return null;\n      }\n      return this.child.findPort(idArray.slice(1));\n    }\n    return null;\n  }\n  public setFixed(fixed: string[]) {\n    this.clearFixed();\n    this.fixed = fixed.map((id) => {\n      const port = this.findPort(id);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      if (!(port instanceof Graph || port instanceof Node)) {\n        throw new Error('Wrong type of port');\n      }\n      port.fixed = true;\n      return port;\n    });\n  }\n  public clearFixed() {\n    for (const port of this.fixed) {\n      port.fixed = false;\n    }\n    this.fixed = [];\n  }\n  public movePort(id: string,\n                  delta: { deltaX: number, deltaY: number }) {\n    const port = this.findPort(id);\n    if (port === null) {\n      throw new Error('Cannot find the port');\n    }\n    if (!(port instanceof Graph || port instanceof Node)) {\n      throw new Error('Wrong type of port');\n    }\n    port.position.x += delta.deltaX;\n    port.position.y += delta.deltaY;\n    for (const edge of [...port.fromEdges, ...port.toEdges]) {\n      edge.updatePosition();\n    }\n    this.informRender();\n  }\n  public updateData(data: RenderableData) {\n    const newClass = renderableFactory(data);\n    if (!this.child || this.child.constructor !== newClass) {\n      const renderable = new newClass(this, null, null, data, null);\n      // noinspection SuspiciousTypeOfGuard\n      if (!(renderable instanceof Port)) {\n        throw new Error('Root element must be renderable port');\n      }\n      this.child = renderable;\n    } else {\n      this.child.updateData(data, null);\n    }\n    this.informRender();\n  }\n  public fullyUpdateData(data: RenderableData) {\n    const renderable = new (renderableFactory(data))(\n      this, null, null, data, null);\n    // noinspection SuspiciousTypeOfGuard\n    if (!(renderable instanceof Port)) {\n      throw new Error('Root element must be renderable port');\n    }\n    this.child = renderable;\n    this.informRender();\n  }\n  public informRender() {\n    if (this.child) {\n      const data = [this.child.render()];\n      Object.freeze(data);\n      this.emit('render', data);\n    }\n  }\n}\n\nexport const globalGraphRoot = new Root();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({ width: _vm.width, height: _vm.height, position: 'relative' })},[(_vm.enableHit)?_c('canvas',{ref:\"hitCanvas\",staticStyle:{\"position\":\"absolute\",\"display\":\"none\"}}):_vm._e(),_c('canvas',_vm._g({ref:\"canvas\",staticStyle:{\"position\":\"absolute\"}},_vm.$listeners))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Provide, Prop, Watch} from 'vue-property-decorator';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\n@Component\nexport default class MyCanvas extends Vue {\n  @Prop({ type: Number, required: true }) public readonly width!: number;\n  @Prop({ type: Number, required: true }) public readonly height!: number;\n  @Prop(Boolean) public readonly enableHit: boolean | undefined;\n  @Prop(Object) public readonly data: AnyShape | undefined;\n  private context: CanvasRenderingContext2D | null = null;\n  private hitContext: CanvasRenderingContext2D | null = null;\n  private hitColorMap: { [color: string]: string } = {};\n  private hitIdMap: { [id: string]: string } = {};\n  public mounted() {\n    this.context = (this.$refs.canvas as HTMLCanvasElement)\n      .getContext('2d');\n    (this.$refs.canvas as HTMLCanvasElement).width = this.width;\n    (this.$refs.canvas as HTMLCanvasElement).height = this.height;\n    if (this.enableHit) {\n      this.hitContext = (this.$refs.hitCanvas as HTMLCanvasElement)\n        .getContext('2d');\n      (this.$refs.hitCanvas as HTMLCanvasElement).width = this.width;\n      (this.$refs.hitCanvas as HTMLCanvasElement).height = this.height;\n    }\n  }\n  @Provide()\n  public generateHitColor(id: string): string {\n    if (this.hitIdMap[id]) {\n      return this.hitIdMap[id];\n    }\n    while (true) {\n      const r = Math.round(Math.random() * 255);\n      const g = Math.round(Math.random() * 255);\n      const b = Math.round(Math.random() * 255);\n      const color = `rgb(${r},${g},${b})`;\n      if (!this.hitColorMap[color]) {\n        this.hitColorMap[color] = id;\n        this.hitIdMap[id] = color;\n        return color;\n      }\n    }\n  }\n  public updateCanvas() {\n    if (!this.context) {\n      return;\n    }\n    const ctx: CanvasRenderingContext2D = this.context;\n    const hitCtx = this.hitContext;\n    ctx.clearRect(0, 0, this.width, this.height);\n    if (hitCtx) {\n      hitCtx.clearRect(0, 0, this.width, this.height);\n      this.hitColorMap = {};\n      this.hitIdMap = {};\n    }\n    const updateShape = (shape: AnyShape,\n                         draggable: boolean,\n                         draggableId: string) => {\n      const finalDraggable = shape.draggable || draggable;\n      const finalId = shape.id || draggableId;\n      switch (shape.is) {\n        case 'group': {\n          ctx.save();\n          ctx.translate(shape.x || 0, shape.y || 0);\n          ctx.scale(shape.scaleX || 1, shape.scaleY || 1);\n          if (hitCtx) {\n            hitCtx.save();\n            hitCtx.translate(shape.x || 0, shape.y || 0);\n            hitCtx.scale(shape.scaleX || 1, shape.scaleY || 1);\n          }\n          if (shape.children) {\n            for (const childShape of shape.children) {\n              updateShape(childShape, shape.draggable || draggable,\n                shape.id || draggableId);\n            }\n          }\n          ctx.restore();\n          if (hitCtx) {\n            hitCtx.restore();\n          }\n          break;\n        }\n        case 'rect': {\n          ctx.beginPath();\n          ctx.rect(shape.x || 0, shape.y || 0,\n            shape.width || 0, shape.height || 0);\n          if (shape.fill) {\n            ctx.fillStyle = shape.fill;\n            ctx.fill();\n          }\n          if (shape.stroke) {\n            ctx.lineWidth = shape.strokeWidth || 1;\n            ctx.strokeStyle = shape.stroke;\n            ctx.stroke();\n          }\n          if (hitCtx && finalDraggable && finalId) {\n            const color = this.generateHitColor(finalId);\n            hitCtx.beginPath();\n            hitCtx.rect(shape.x || 0, shape.y || 0,\n              shape.width || 0, shape.height || 0);\n            hitCtx.fillStyle = color;\n            hitCtx.fill();\n            if (shape.stroke) {\n              hitCtx.lineWidth = shape.strokeWidth || 1;\n              hitCtx.strokeStyle = color;\n              hitCtx.stroke();\n            }\n          }\n          break;\n        }\n        case 'text': {\n          const fontSize = shape.fontSize || 12;\n          const lineHeight = shape.lineHeight || 1.2;\n          const padding = shape.padding || 4;\n          ctx.font = `${fontSize}px ${shape.fontFamily || 'sans-serif'}`;\n          const lines = shape.text ? shape.text.split('\\n') : [];\n          const linesWidth = lines.map((x: string) => ctx.measureText(x).width);\n          const width = Math.max(...linesWidth, 0);\n          let posY = (shape.y || 0) + padding;\n          ctx.textBaseline = 'top';\n          ctx.fillStyle = shape.fill || 'black';\n          for (let i = 0; i < lines.length; ++i) {\n            let posX = (shape.x || 0) + padding;\n            if (shape.align === 'left') {\n              // do nothing\n            } else if (shape.align === 'right') {\n              posX += width - linesWidth[i];\n            } else {\n              posX += (width - linesWidth[i]) / 2;\n            }\n            ctx.fillText(lines[i], posX,\n              posY + 0.5 * (lineHeight - 1) * fontSize);\n            posY += lineHeight * fontSize;\n          }\n          break;\n        }\n        case 'line': {\n          const points = shape.points || [];\n          ctx.strokeStyle = shape.stroke || 'black';\n          ctx.lineWidth = shape.strokeWidth || 1;\n          ctx.beginPath();\n          ctx.moveTo(points[0] || 0, points[1] || 0);\n          ctx.lineTo(points[2] || 0, points[3] || 0);\n          ctx.stroke();\n          break;\n        }\n        case 'quadraticLine': {\n          const points = shape.points || [];\n          ctx.strokeStyle = shape.stroke || 'black';\n          ctx.lineWidth = shape.strokeWidth || 1;\n          ctx.beginPath();\n          ctx.moveTo(points[0] || 0, points[1] || 0);\n          ctx.quadraticCurveTo(points[2] || 0, points[3] || 0,\n            points[4] || 0, points[5] || 0);\n          ctx.stroke();\n          break;\n        }\n        case 'pointer': {\n          const x = shape.x || 0;\n          const y = shape.y || 0;\n          const angle = shape.angle || 0;\n          const width = shape.width || 10;\n          const height = shape.height || 15;\n          const middleX = x + height * Math.cos(angle);\n          const middleY = y + height * Math.sin(angle);\n          const deltaX = width / 2 * Math.sin(angle);\n          const deltaY = -width / 2 * Math.cos(angle);\n          ctx.fillStyle = shape.fill || 'black';\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          ctx.lineTo(middleX + deltaX, middleY + deltaY);\n          ctx.lineTo(middleX - deltaX, middleY - deltaY);\n          ctx.closePath();\n          ctx.fill();\n          break;\n        }\n        case 'rectWithWhole': {\n          ctx.beginPath();\n          ctx.moveTo(shape.outerLeft || 0, shape.outerTop || 0);\n          ctx.lineTo(shape.outerRight || 0, shape.outerTop || 0);\n          ctx.lineTo(shape.outerRight || 0, shape.outerBottom || 0);\n          ctx.lineTo(shape.outerLeft || 0, shape.outerBottom || 0);\n          ctx.lineTo(shape.outerLeft || 0, shape.outerTop || 0);\n          ctx.moveTo(shape.innerLeft || 0, shape.innerTop || 0);\n          ctx.lineTo(shape.innerLeft || 0, shape.innerBottom || 0);\n          ctx.lineTo(shape.innerRight || 0, shape.innerBottom || 0);\n          ctx.lineTo(shape.innerRight || 0, shape.innerTop || 0);\n          ctx.lineTo(shape.innerLeft || 0, shape.innerTop || 0);\n          ctx.fillStyle = shape.fill || 'white';\n          ctx.fill();\n          break;\n        }\n        default:\n          throw new Error(`Unknown shape`);\n      }\n    };\n    if (this.data) {\n      updateShape(this.data, false, '');\n    }\n  }\n  public getIdFromHitPoint(x: number, y: number): string | undefined {\n    if (this.hitContext) {\n      const pixel = this.hitContext.getImageData(x, y, 1, 1).data;\n      const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\n      return this.hitColorMap[color];\n    }\n  }\n  @Watch('width')\n  public onWidthChanged() {\n    (this.$refs.canvas as HTMLCanvasElement).width = this.width;\n    if (this.enableHit) {\n      (this.$refs.hitCanvas as HTMLCanvasElement).width = this.width;\n    }\n    this.updateCanvas();\n  }\n  @Watch('height')\n  public onHeightChanged() {\n    (this.$refs.canvas as HTMLCanvasElement).height = this.height;\n    if (this.enableHit) {\n      (this.$refs.hitCanvas as HTMLCanvasElement).height = this.height;\n    }\n    this.updateCanvas();\n  }\n  @Watch('data')\n  public onDataChanged() {\n    this.updateCanvas();\n  }\n}\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MyCanvas.vue?vue&type=template&id=5d5105f1&\"\nimport script from \"./MyCanvas.vue?vue&type=script&lang=ts&\"\nexport * from \"./MyCanvas.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\nimport {globalGraphRoot} from '@/graph/Root';\nimport MyCanvas from '@/components/MyCanvas.vue';\nimport Port from '@/graph/base/Port';\n\n@Component({\n  components: {\n    MyCanvas,\n  },\n})\nexport default class Graph extends Vue {\n  @Prop({ type: Number, required: true }) public readonly width!: number;\n  @Prop({ type: Number, required: true }) public readonly height!: number;\n  @Prop({ type: Array, default() { return []; }})\n  public readonly data!: object[];\n  private x = 0;\n  private y = 0;\n  private scale = 1;\n  private size = { width: 0, height: 0 };\n  private draggedId: null | string = null;\n  private mouseDragActive = false;\n  private mouseLastCoords = {\n    x: 0,\n    y: 0,\n  };\n  private maxThumbnailLength = 160;\n  private minThumbnailLength = 100;\n  private thumbnailPadding = 10;\n  private thumbnailMouseDragActive = false;\n  private thumbnailMouseLastCoords = {\n    x: 0,\n    y: 0,\n  };\n  get stageX() {\n    return this.width / 2 + this.x;\n  }\n  get stageY() {\n    return this.height / 2 + this.y;\n  }\n  public mounted() {\n    this.updateSize();\n  }\n  @Watch('data')\n  public onDataChanged() {\n    this.updateSize();\n  }\n  public updateSize() {\n    // noinspection SuspiciousTypeOfGuard\n    if (globalGraphRoot.child instanceof Port) {\n      this.size = globalGraphRoot.child.getBoundingBoxSize();\n    }\n  }\n  get mainCanvasData() {\n    return {\n      is: 'group',\n      x: this.stageX,\n      y: this.stageY,\n      scaleX: this.scale,\n      scaleY: this.scale,\n      children: this.data,\n    };\n  }\n  get thumbnailCanvasData() {\n    const scale = 1 / this.thumbnailFactor;\n    function deepCopyAndRemoveDraggable(shape: any) {\n      const copy = Object.assign({}, shape);\n      if (copy.draggable) {\n        delete copy.draggable;\n      }\n      if (copy.children) {\n        copy.children = copy.children.map((x: any) =>\n          deepCopyAndRemoveDraggable(x));\n      }\n      return copy;\n    }\n    const data = this.data.map((x: any) => deepCopyAndRemoveDraggable(x));\n    const viewportX = (-this.width / 2 - this.x) / this.scale;\n    const viewportY = (-this.height / 2 - this.y) / this.scale;\n    const viewportWidth = this.width / this.scale;\n    const viewportHeight = this.height / this.scale;\n    data.push({\n      is: 'rectWithWhole',\n      id: 'mask',\n      fill: 'rgba(0,0,0,0.2)',\n      outerLeft: -this.thumbnailWidth * this.thumbnailFactor / 2,\n      outerRight: this.thumbnailWidth * this.thumbnailFactor / 2,\n      outerTop: -this.thumbnailHeight * this.thumbnailFactor / 2,\n      outerBottom: this.thumbnailHeight * this.thumbnailFactor / 2,\n      innerLeft: viewportX,\n      innerRight: viewportX + viewportWidth,\n      innerTop: viewportY,\n      innerBottom: viewportY + viewportHeight,\n    });\n    data.push({\n      is: 'rect',\n      id: 'viewport',\n      draggable: true,\n      x: viewportX,\n      y: viewportY,\n      width: viewportWidth,\n      height: viewportHeight,\n      stroke: '#3eaf7c',\n      strokeWidth: this.thumbnailFactor,\n    });\n    return {\n      is: 'group',\n      x: this.thumbnailWidth / 2,\n      y: this.thumbnailHeight / 2,\n      scaleX: scale,\n      scaleY: scale,\n      children: data,\n    };\n  }\n  get thumbnailFactor() {\n    return Math.max(this.size.width / this.maxThumbnailLength,\n      this.size.height / this.maxThumbnailLength, 1);\n  }\n  get thumbnailWidth() {\n    return Math.max(this.size.width / this.thumbnailFactor,\n      this.minThumbnailLength) + 2 * this.thumbnailPadding;\n  }\n  get thumbnailHeight() {\n    return Math.max(this.size.height / this.thumbnailFactor,\n      this.minThumbnailLength) + 2 * this.thumbnailPadding;\n  }\n  public wheel(e: WheelEvent) {\n    const scaleBy = 1.1;\n    e.preventDefault();\n    const pos = this.translateMouseEvent(e);\n    const mousePointTo = {\n      x: (pos.x - this.stageX) / this.scale,\n      y: (pos.y - this.stageY) / this.scale,\n    };\n    this.scale = e.deltaY < 0 ? this.scale * scaleBy : this.scale / scaleBy;\n    const newPos = {\n      x: -(mousePointTo.x - pos.x / this.scale) *\n        this.scale,\n      y: -(mousePointTo.y - pos.y / this.scale) *\n        this.scale,\n    };\n    this.x = newPos.x - this.width / 2;\n    this.y = newPos.y - this.height / 2;\n  }\n  public translateMouseEvent(e: MouseEvent): {x: number, y: number} {\n    let elementOffsetX = 0;\n    let elementOffsetY = 0;\n    let target = e.currentTarget;\n    while (target) {\n      elementOffsetX += (target as HTMLElement).offsetLeft;\n      elementOffsetY += (target as HTMLElement).offsetTop;\n      target = (target as HTMLElement).offsetParent;\n    }\n    return {\n      x: e.pageX - elementOffsetX,\n      y: e.pageY - elementOffsetY,\n    };\n  }\n  public mousedown(e: MouseEvent) {\n    this.mouseDragActive = true;\n    this.mouseLastCoords = {\n      x: e.pageX,\n      y: e.pageY,\n    };\n    const pos = this.translateMouseEvent(e);\n    const id = (this.$refs.mainCanvas as any).getIdFromHitPoint(pos.x, pos.y);\n    if (id) {\n      this.draggedId = id;\n      globalGraphRoot.setFixed([id]);\n    }\n  }\n  public mouseup() {\n    this.mouseDragActive = false;\n    this.draggedId = null;\n    globalGraphRoot.clearFixed();\n  }\n  public mousemove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.mouseDragActive = false;\n    }\n    if (this.mouseDragActive || this.draggedId) {\n      const newCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      const deltaX = newCoords.x - this.mouseLastCoords.x;\n      const deltaY = newCoords.y - this.mouseLastCoords.y;\n      if (this.draggedId) {\n        globalGraphRoot.movePort(this.draggedId, {\n          deltaX: deltaX / this.scale,\n          deltaY: deltaY / this.scale,\n        });\n      } else {\n        this.x += deltaX;\n        this.y += deltaY;\n      }\n      this.mouseLastCoords = newCoords;\n    }\n  }\n  public thumbnailMousedown(e: MouseEvent) {\n    const pos = this.translateMouseEvent(e);\n    const id = (this.$refs.thumbnailCanvas as any)\n      .getIdFromHitPoint(pos.x, pos.y);\n    if (id === 'viewport') {\n      this.thumbnailMouseDragActive = true;\n      this.thumbnailMouseLastCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n    }\n  }\n  public thumbnailMouseup() {\n    this.thumbnailMouseDragActive = false;\n  }\n  public thumbnailMousemove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.thumbnailMouseDragActive = false;\n    }\n    if (this.thumbnailMouseDragActive) {\n      const newCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      const oldCoords = this.thumbnailMouseLastCoords;\n      const scale = this.thumbnailFactor * this.scale;\n      this.x -= (newCoords.x - oldCoords.x) * scale;\n      this.y -= (newCoords.y - oldCoords.y) * scale;\n      this.thumbnailMouseLastCoords = newCoords;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Graph.vue?vue&type=template&id=6d2c06d4&scoped=true&\"\nimport script from \"./Graph.vue?vue&type=script&lang=ts&\"\nexport * from \"./Graph.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Graph.vue?vue&type=style&index=0&id=6d2c06d4&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6d2c06d4\",\n  null\n  \n)\n\nexport default component.exports","import {EdgeData, GraphData, NodeData, RenderableData} from '@/graph/base/dataInput';\nimport parser from 'dotparser';\n\nconst alnumChars: string = '0123456789' +\n  'abcdefghijklmnopqrstuvwxyz' +\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nfunction randomAlnumString(length: number): string {\n  let result = '';\n  for (let i = 0; i < length; ++i) {\n    result += alnumChars[Math.floor(Math.random() * alnumChars.length)];\n  }\n  return result;\n}\n\nfunction generateId(): string {\n  return randomAlnumString(16);\n}\n\nfunction unescapeString(str: string): string {\n  str = str.replace('\\\\n', '\\n');\n  str = str.replace('\\\\r', '\\r');\n  str = str.replace('\\\\t', '\\t');\n  str = str.replace('\\\\\\'', '\\'');\n  str = str.replace('\\\\\\\"', '\\\"');\n  str = str.replace('&gamma;', 'γ');\n  return str;\n}\n\nfunction normalizeColor(color: string): string {\n  let end = color.length - 1;\n  while (end >= 0 && (color[end] >= '0' && color[end] <= '9')) {\n    --end;\n  }\n  return color.slice(0, end + 1);\n}\n\nexport interface GraphParserConfig {\n  preferredEdgeDirection?: number | 'any';\n}\n\nexport const graphParsers\n  : { [input: string]: (input: string, config?: GraphParserConfig) =>\n    RenderableData } = {\n  json(input: string): RenderableData {\n    return JSON.parse(input);\n  },\n  graphviz(input: string, config?: GraphParserConfig): RenderableData {\n    const ast = parser(input);\n    if (!ast[0]) {\n      throw new Error('Expect one root element');\n    }\n    const directed = ast[0].type === 'digraph';\n    function parseNode(data: any): NodeData {\n      const result: NodeData = {\n        type: 'node',\n        shape: 'box',\n        id: generateId(),\n      };\n      if (data.node_id) {\n        result.id = data.node_id.id;\n      }\n      if (data.attr_list) {\n        for (const attr of data.attr_list) {\n          switch (attr.id) {\n            case 'label':\n              // noinspection SuspiciousTypeOfGuard\n              if (typeof attr.eq === 'string') {\n                result.label = unescapeString(attr.eq);\n              } else {\n                result.label = unescapeString(attr.eq.value);\n              }\n              break;\n            case 'style':\n              result.style = attr.eq;\n              break;\n            case 'color':\n              result.strokeColor = normalizeColor(attr.eq);\n              break;\n            case 'fillcolor':\n              result.fillColor = normalizeColor(attr.eq);\n              break;\n            case 'shape':\n              result.shape = attr.eq === 'none' ? 'table' : attr.eq;\n              break;\n            case 'height':\n              // ignore\n              break;\n            case 'width':\n              // ignore\n              break;\n            default:\n              throw new Error(`Unknown node attribute ${attr.id}`);\n          }\n        }\n      }\n      return result;\n    }\n    function parseGraph(data: any): GraphData {\n      let recordHorizontal = true;\n      const result: GraphData = {\n        type: 'graph',\n        shape: 'box',\n        id: generateId(),\n        component: {\n          type: 'linear',\n          direction: 'TD',\n        },\n        layout: {\n          type: 'KamadaKawai',\n          preferredEdgeDirection: 90,\n        },\n        physics: {\n          type: 'BarnesHut',\n        },\n        children: [],\n      };\n      if (config && config.preferredEdgeDirection !== undefined) {\n        result.layout!.preferredEdgeDirection = config.preferredEdgeDirection;\n      }\n      if (data.id) {\n        result.id = data.id;\n      }\n      if (data.children) {\n        for (const child of data.children) {\n          switch (child.type) {\n            case 'attr_stmt':\n              if (child.attr_list) {\n                for (const attr of child.attr_list) {\n                  switch (attr.id) {\n                    case 'label':\n                      result.label = attr.eq;\n                      break;\n                    case 'rankdir':\n                      (result.component!.direction as any) = ({\n                        LR: 'LR',\n                        TB: 'TD',\n                        RL: 'RL',\n                        BT: 'DT',\n                      } as { [dir: string]: string })[attr.eq as string];\n                      result.layout!.preferredEdgeDirection = ({\n                        LR: 0,\n                        TB: 90,\n                        RL: 180,\n                        BT: 279,\n                      } as { [dir: string]: number })[attr.eq as string];\n                      recordHorizontal = !(attr.eq === 'LR' ||\n                        attr.eq === 'RL');\n                      break;\n                    case 'style':\n                      result.style = attr.eq;\n                      break;\n                    case 'color':\n                      result.strokeColor = normalizeColor(attr.eq);\n                      break;\n                    case 'fillcolor':\n                      result.fillColor = normalizeColor(attr.eq);\n                      break;\n                    default:\n                      throw new Error(`Unknown graph attribute ${attr.id}`);\n                  }\n                }\n              }\n              break;\n            case 'node_stmt': {\n              const element = parseNode(child);\n              if (element.shape === 'record') {\n                element.direction = recordHorizontal ? 'horizontal' :\n                  'vertical';\n              }\n              result.children!.push(element);\n              break;\n            }\n            case 'edge_stmt': {\n              if (!child.edge_list || child.edge_list.length !== 2) {\n                throw new Error('Edge must have two ends');\n              }\n              const element: EdgeData = {\n                type: 'edge',\n                shape: 'quadratic',\n                id: generateId(),\n                from: child.edge_list[0].id + (child.edge_list[0].port ?\n                  ':' + child.edge_list[0].port.id : ''),\n                to: child.edge_list[1].id + (child.edge_list[1].port ?\n                  ':' + child.edge_list[1].port.id : ''),\n              };\n              // TODO: edge attributes\n              result.children!.push(element);\n              break;\n            }\n            case 'subgraph':\n              result.children!.push(parseGraph(child));\n              break;\n            default:\n              throw new Error(`Unknown child type ${child.type}`);\n          }\n        }\n      }\n      return result;\n    }\n    return parseGraph(ast[0]);\n  },\n};\n","export default \"digraph stdThreadJoin {\\nlabel=\\\" VFG of stdThreadJoin\\\"\\ngraph [rankdir=\\\"LR\\\"]\\nsubgraph cluster_input {\\nlabel=\\\"Inputs\\\"\\nstyle=filled\\ncolor=black\\nfillcolor=darkolivegreen1\\nN912 [label=\\\"N912\\\\n[arg:stdThreadJoin_0]\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN913 [label=\\\"N913\\\\n[arg:stdThreadJoin_0]*\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\n} # end of input\\nsubgraph cluster_output {\\nlabel=\\\"Outputs\\\"\\nstyle=filled\\ncolor=black\\nfillcolor=goldenrod1\\nN940 [label=\\\"N940\\\\n_\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\n} # end of output\\n# body nodes\\nN919 [label=\\\"N919\\\\n&dummy\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN925 [label=\\\"N925\\\\n0\\\", style=filled, fillcolor=\\\"lightgrey\\\", shape=box]\\nN926 [label=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>>, shape=none]\\nN927 [label=\\\"N927\\\\nDEREF\\\", style=filled, fillcolor=\\\"gainsboro\\\", shape=box]\\nN928 [label=\\\"N928\\\\nstdThreadJoin::6*\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN930 [label=\\\"N930\\\\n[arg:_pthread_join_0]\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\nN931 [label=\\\"N931\\\\n[arg:_pthread_join_1]\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\nN932 [label=\\\"N932\\\\nstdThreadJoin::8\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN933 [label=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>>, shape=none]\\nN934 [label=\\\"N934\\\\n1\\\", style=filled, fillcolor=\\\"lightgrey\\\", shape=box]\\nN937 [label=\\\"N937\\\\n&gamma;\\\", style=filled, fillcolor=\\\"darksalmon\\\", shape=box]\\n# proxy\\nP595 [label=\\\"\\\",style=filled,color=crimson,fillcolor=crimson,shape=circle,height=0.05,width=0.05]\\nP596 [label=\\\"\\\",style=filled,color=crimson,fillcolor=crimson,shape=circle,height=0.05,width=0.05]\\n# end of body\\nN937 -> N940\\nN912 -> N926:op_1\\nN925 -> N926:op_2\\nN925 -> N926:op_3\\nN926:top -> N927\\nN928 -> N930\\nN919 -> N931\\nN925 -> N933:op_1\\nN932 -> N933:op_2\\nN925 -> P595 [arrowhead=none]\\nP595 -> N937\\nN933:top -> P595 [label=\\\"N933\\\",style=dotted,color=crimson]\\nN934 -> P596 [arrowhead=none]\\nP596 -> N937\\nN933:top -> P596 [label=\\\"!(N933)\\\",style=dotted,color=crimson]\\nCS_31 [shape=record,style=bold,label=\\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\"]\\nN930 -> CS_31:cs_id_in_0\\nN931 -> CS_31:cs_id_in_1\\nCS_31:cs_id_out_0 -> N932\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"stdThreadJoin\\\",\\n  \\\"label\\\": \\\"VFG of stdThreadJoin\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"springLength\\\": 150,\\n    \\\"direction\\\": \\\"LR\\\",\\n    \\\"preferredEdgeDirection\\\": 0\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_input\\\",\\n      \\\"label\\\": \\\"Inputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darkolivegreen\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N912\\\",\\n          \\\"label\\\": \\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N913\\\",\\n          \\\"label\\\": \\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_output\\\",\\n      \\\"label\\\": \\\"Outputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"goldenrod\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N940\\\",\\n          \\\"label\\\": \\\"N940\\\\n_\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N919\\\",\\n      \\\"label\\\": \\\"N919\\\\n&dummy\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N925\\\",\\n      \\\"label\\\": \\\"N925\\\\n0\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"lightgrey\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N926\\\",\\n      \\\"label\\\": \\\"<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>\\\",\\n      \\\"shape\\\": \\\"table\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N927\\\",\\n      \\\"label\\\": \\\"N927\\\\nDEREF\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"gainsboro\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N928\\\",\\n      \\\"label\\\": \\\"N928\\\\nstdThreadJoin::6*\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N930\\\",\\n      \\\"label\\\": \\\"N930\\\\n[arg:_pthread_join_0]\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N931\\\",\\n      \\\"label\\\": \\\"N931\\\\n[arg:_pthread_join_1]\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N932\\\",\\n      \\\"label\\\": \\\"N932\\\\nstdThreadJoin::8\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N933\\\",\\n      \\\"label\\\": \\\"<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>\\\",\\n      \\\"shape\\\": \\\"table\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N934\\\",\\n      \\\"label\\\": \\\"N934\\\\n1\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"lightgrey\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N937\\\",\\n      \\\"label\\\": \\\"N937\\\\n&gamma;\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darksalmon\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"P595\\\",\\n      \\\"label\\\": \\\"\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"color\\\": \\\"crimson\\\",\\n      \\\"fillColor\\\": \\\"crimson\\\",\\n      \\\"shape\\\": \\\"circle\\\",\\n      \\\"radius\\\": 0.025\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"P596\\\",\\n      \\\"label\\\": \\\"\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"color\\\": \\\"crimson\\\",\\n      \\\"fillColor\\\": \\\"crimson\\\",\\n      \\\"shape\\\": \\\"circle\\\",\\n      \\\"radius\\\": 0.025\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N937\\\",\\n      \\\"to\\\": \\\"N940\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N912\\\",\\n      \\\"to\\\": \\\"N926:op_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N926:op_2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N926:op_3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N926:top\\\",\\n      \\\"to\\\": \\\"N927\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N928\\\",\\n      \\\"to\\\": \\\"N930\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N919\\\",\\n      \\\"to\\\": \\\"N931\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N933:op_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N932\\\",\\n      \\\"to\\\": \\\"N933:op_2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"P595\\\",\\n      \\\"arrowHead\\\": \\\"none\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"P595\\\",\\n      \\\"to\\\": \\\"N937\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N933:top\\\",\\n      \\\"to\\\": \\\"P595\\\",\\n      \\\"label\\\": \\\"N933\\\",\\n      \\\"style\\\": \\\"dotted\\\",\\n      \\\"color\\\": \\\"crimson\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N934\\\",\\n      \\\"to\\\": \\\"P596\\\",\\n      \\\"arrowHead\\\": \\\"none\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"P596\\\",\\n      \\\"to\\\": \\\"N937\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N933:top\\\",\\n      \\\"to\\\": \\\"P596\\\",\\n      \\\"label\\\": \\\"!(N933)\\\",\\n      \\\"style\\\": \\\"dotted\\\",\\n      \\\"color\\\": \\\"crimson\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"CS_31\\\",\\n      \\\"shape\\\": \\\"record\\\",\\n      \\\"style\\\": \\\"bold\\\",\\n      \\\"direction\\\": \\\"vertical\\\",\\n      \\\"label\\\": \\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N930\\\",\\n      \\\"to\\\": \\\"CS_31:cs_id_in_0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N931\\\",\\n      \\\"to\\\": \\\"CS_31:cs_id_in_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"CS_31:cs_id_out_0\\\",\\n      \\\"to\\\": \\\"N932\\\"\\n    }\\n  ]\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"node\\\",\\n  \\\"id\\\": \\\"N926\\\",\\n  \\\"label\\\": \\\"hello\\\\\\\\nworld |{ b |{c|<here> d|e}| f}| g | h\\\",\\n  \\\"shape\\\": \\\"record\\\"\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"stdThreadJoin\\\",\\n  \\\"label\\\": \\\"VFG of stdThreadJoin\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"springLength\\\": 150\\n  },\\n  \\\"component\\\": {\\n    \\\"direction\\\": \\\"LR\\\"\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_input\\\",\\n      \\\"component\\\": {\\n        \\\"direction\\\": \\\"TD\\\"\\n      },\\n      \\\"label\\\": \\\"Inputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darkolivegreen\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N921\\\",\\n          \\\"label\\\": \\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N913\\\",\\n          \\\"label\\\": \\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_output\\\",\\n      \\\"label\\\": \\\"Outputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"goldenrod\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N940\\\",\\n          \\\"label\\\": \\\"N940\\\\n_\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"cluster_input\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"direction\\\": \\\"LR\\\"\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"0\\\",\\n      \\\"label\\\": \\\"0\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"label\\\": \\\"1\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"label\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"3\\\",\\n      \\\"label\\\": \\\"3\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"4\\\",\\n      \\\"label\\\": \\\"4\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"5\\\",\\n      \\\"label\\\": \\\"5\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"6\\\",\\n      \\\"label\\\": \\\"6\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"7\\\",\\n      \\\"label\\\": \\\"7\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"8\\\",\\n      \\\"label\\\": \\\"8\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"9\\\",\\n      \\\"label\\\": \\\"9\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"10\\\",\\n      \\\"label\\\": \\\"10\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"11\\\",\\n      \\\"label\\\": \\\"11\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"2\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"4\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"5\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"8\\\",\\n      \\\"to\\\": \\\"5\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"5\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"7\\\",\\n      \\\"to\\\": \\\"4\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"4\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"6\\\",\\n      \\\"to\\\": \\\"3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"3\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"10\\\",\\n      \\\"to\\\": \\\"2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"2\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"9\\\",\\n      \\\"to\\\": \\\"1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"8\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"9\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"10\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"6\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"7\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"8\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"9\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"10\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"6\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"shape\\\": \\\"straight\\\",\\n      \\\"from\\\": \\\"11\\\",\\n      \\\"to\\\": \\\"7\\\"\\n    }\\n  ]\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"node\\\",\\n  \\\"id\\\": \\\"N926\\\",\\n  \\\"label\\\": \\\"<TABLE BORDER=\\\\\\\"1\\\\\\\" CELLBORDER=\\\\\\\"1\\\\\\\" CELLSPACING=\\\\\\\"2\\\\\\\" CELLPADDING=\\\\\\\"4\\\\\\\"><TR><TD ROWSPAN=\\\\\\\"3\\\\\\\"><FONT COLOR=\\\\\\\"red\\\\\\\">hello</FONT><BR/>world</TD><TD COLSPAN=\\\\\\\"3\\\\\\\">b</TD><TD ROWSPAN=\\\\\\\"3\\\\\\\" BGCOLOR=\\\\\\\"lightgrey\\\\\\\">g</TD><TD ROWSPAN=\\\\\\\"3\\\\\\\">h</TD></TR><TR><TD>c</TD><TD PORT=\\\\\\\"here\\\\\\\">d</TD><TD>e</TD></TR><TR><TD COLSPAN=\\\\\\\"3\\\\\\\">f</TD></TR></TABLE>\\\",\\n  \\\"shape\\\": \\\"table\\\"\\n}\\n\"","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"hello\\\",\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"0\\\",\\n      \\\"label\\\": \\\"0\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"label\\\": \\\"1\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"label\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"0\\\",\\n      \\\"to\\\": \\\"1\\\",\\n      \\\"lineWidth\\\": 5,\\n      \\\"pointerWidth\\\": 20,\\n      \\\"pointerHeight\\\": 30\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"1\\\",\\n      \\\"to\\\": \\\"2\\\",\\n      \\\"shape\\\": \\\"straight\\\"\\n    }\\n  ]\\n}\\n\"","import stdThreadJoinGv from '!raw-loader!./examples/stdThreadJoin.gv';\nimport stdThreadJoinJson from '!raw-loader!./examples/stdThreadJoin.txt';\nimport recordJson from '!raw-loader!./examples/record.txt';\nimport subgraphJson from '!raw-loader!./examples/subgraph.txt';\nimport icosahedronJson from '!raw-loader!./examples/icosahedron.txt';\nimport tableJson from '!raw-loader!./examples/table.txt';\nimport edgeJson from '!raw-loader!./examples/edge.txt';\n\ninterface Example {\n  name: string;\n  parser: string;\n  content: string;\n}\n\nexport const graphExamples: Example[] = [\n  {\n    name: 'stdThreadJoinGv',\n    parser: 'graphviz',\n    content: stdThreadJoinGv,\n  },\n  {\n    name: 'stdThreadJoinJson',\n    parser: 'json',\n    content: stdThreadJoinJson,\n  },\n  {\n    name: 'record',\n    parser: 'json',\n    content: recordJson,\n  },\n  {\n    name: 'subgraph',\n    parser: 'json',\n    content: subgraphJson,\n  },\n  {\n    name: 'icosahedronJson',\n    parser: 'json',\n    content: icosahedronJson,\n  },\n  {\n    name: 'table',\n    parser: 'json',\n    content: tableJson,\n  },\n  {\n    name: 'edge',\n    parser: 'json',\n    content: edgeJson,\n  },\n];\n","import { debounce } from 'lodash-es';\n\nexport function Debounce(delay: number) {\n  return (target: any, prop: string) => {\n    return {\n      configurable: true,\n      enumerable: false,\n      value: debounce(target[prop], delay),\n    };\n  };\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Watch } from 'vue-property-decorator';\nimport CollapsiblePane from './components/CollapsiblePane.vue';\nimport Graph from './components/Graph.vue';\nimport 'vue-awesome/icons/upload';\nimport 'vue-awesome/icons/sync';\nimport {throttle} from 'lodash-es';\nimport {globalGraphRoot} from '@/graph/Root';\nimport {graphParsers} from '@/graph/parser';\nimport {graphExamples} from './graph/examples';\nimport {Debounce} from '@/debounce-decorator';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\n@Component({\n  components: {\n    CollapsiblePane,\n    Graph,\n  },\n})\nexport default class App extends Vue {\n  get desktopLayout() {\n    return this.windowWidth > 719;\n  }\n  get realSettingsWidth() {\n    return this.desktopLayout ? this.settingsWidth : this.canvasWidth;\n  }\n  // UI data\n  // noinspection JSUnusedLocalSymbols\n  private settingsOpen = true;\n  private settingsWidth = 300;\n  private minGraphWidth = 150;\n  private minSettingsWidth = 150;\n  private sizerMouseActive = false;\n  private sizerTouchActive = false;\n  private windowWidth = document.documentElement.clientWidth;\n  private windowHeight = document.documentElement.clientHeight;\n  private canvasWidth = 0;\n  private canvasHeight = 0;\n  // Input data\n  private parser = 'json';\n  private rawInput = '';\n  private parseError = null;\n  private parsedInput = '';\n  // noinspection JSUnusedLocalSymbols\n  private examples = graphExamples;\n  // Rendered data\n  // noinspection JSMismatchedCollectionQueryUpdate\n  private rendered: AnyShape[] = [];\n  @Debounce(10000 / 60)\n  public parseInput() {\n    try {\n      if (this.rawInput) {\n        const parsed = graphParsers[this.parser](this.rawInput);\n        this.parsedInput = JSON.stringify(parsed, null, 2);\n        globalGraphRoot.updateData(parsed);\n      } else {\n        this.parsedInput = '';\n      }\n      this.parseError = null;\n    } catch (e) {\n      /* tslint:disable:no-console */\n      console.log(e);\n      this.parseError = e.stack;\n    }\n  }\n  public mounted() {\n    window.addEventListener('resize', this.getSize);\n    this.updateCanvasSize();\n    globalGraphRoot.addEventListener('render', throttle((data: AnyShape[]) => {\n      this.rendered = data;\n    }, 1000 / 60));\n  }\n  public beforeDestroy() {\n    window.removeEventListener('resize', this.getSize);\n  }\n  @Watch('settingsWidth')\n  public onSettingsWidthChanged() {\n    this.updateCanvasSize();\n  }\n  @Watch('parser')\n  public onParserChanged() {\n    this.parseInput();\n  }\n  @Watch('rawInput')\n  public onRawInputChanged() {\n    this.parseInput();\n  }\n  public redraw() {\n    if (this.parsedInput) {\n      globalGraphRoot.fullyUpdateData(JSON.parse(this.parsedInput));\n    }\n  }\n  public selectExample(i: number) {\n    const example = graphExamples[i];\n    this.parser = example.parser;\n    this.rawInput = example.content;\n  }\n  public inputFileChange(e: InputEvent) {\n    const file = (e.target as HTMLInputElement).files![0];\n    if (!file) {\n      return;\n    }\n    switch (file.type) {\n      case 'application/json':\n        this.parser = 'json';\n        break;\n      case 'text/vnd.graphviz':\n        this.parser = 'graphviz';\n        break;\n      default:\n        alert('Unknown file type');\n        return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent<FileReader>) => {\n      this.rawInput = evt.target!.result as string;\n    };\n    reader.readAsText(file);\n  }\n  public getSize() {\n    this.windowWidth = document.documentElement.clientWidth;\n    this.windowHeight = document.documentElement.clientHeight;\n    this.$nextTick(() => this.updateCanvasSize());\n  }\n  public updateCanvasSize() {\n    this.canvasWidth = (this.$refs.canvas as HTMLElement).offsetWidth;\n    this.canvasHeight = (this.$refs.canvas as HTMLElement).offsetHeight;\n    // globalRoot.setViewportSize(this.canvasWidth, this.canvasHeight);\n  }\n  public onMainSizerMouseDown() {\n    this.sizerMouseActive = true;\n  }\n  public onMainSizerMouseUp() {\n    this.sizerMouseActive = false;\n  }\n  public onMainSizerMouseMove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.sizerMouseActive = false;\n    }\n    if (this.sizerMouseActive) {\n      let elementOffsetX = 0;\n      let target = e.currentTarget;\n      while (target) {\n        elementOffsetX += (target as HTMLElement).offsetLeft;\n        target = (target as HTMLElement).offsetParent;\n      }\n      const mouseOffsetX = e.pageX;\n      const width = (e.currentTarget! as HTMLElement).offsetWidth;\n      const offsetX = mouseOffsetX - elementOffsetX;\n      if (offsetX >= this.minGraphWidth &&\n        (width - offsetX) >= this.minSettingsWidth) {\n        this.settingsWidth = Math.round(width - offsetX);\n      }\n    }\n  }\n  public onMainSizerTouchStart() {\n    this.sizerTouchActive = true;\n  }\n  public onMainSizerTouchEnd() {\n    this.sizerTouchActive = false;\n  }\n  public onMainSizerTouchMove(e: TouchEvent) {\n    if (this.sizerTouchActive) {\n      let elementOffsetX = 0;\n      let target = e.currentTarget;\n      while (target) {\n        elementOffsetX += (target as HTMLElement).offsetLeft;\n        target = (target as HTMLElement).offsetParent;\n      }\n      const mouseOffsetX = e.touches[0].pageX;\n      const width = (e.currentTarget! as HTMLElement).offsetWidth;\n      const offsetX = mouseOffsetX - elementOffsetX;\n      if (offsetX >= this.minGraphWidth &&\n        (width - offsetX) >= this.minSettingsWidth) {\n        this.settingsWidth = Math.round(width - offsetX);\n      }\n    }\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2b815e16&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Icon from 'vue-awesome/components/Icon.vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n\nVue.component('v-icon', Icon);\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\""],"sourceRoot":""}