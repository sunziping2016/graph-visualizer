{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?8a48","webpack:///./src/components/Graph.vue?170b","webpack:///./src/App.vue?4484","webpack:///./src/components/CollapsiblePane.vue?736e","webpack:///./src/components/CollapsiblePane.vue?1fa9","webpack:///./src/components/CollapsiblePane.vue?0878","webpack:///./src/components/CollapsiblePane.vue","webpack:///./src/components/Graph.vue?4167","webpack:///./src/graph/base/EventEmitter.ts","webpack:///./src/graph/base/Positioned.ts","webpack:///./src/graph/graph/layout/GraphLayout.ts","webpack:///./src/graph/graph/layout/KamadaKawaiGraphLayout.ts","webpack:///./src/graph/graph/layout/NoneGraphLayout.ts","webpack:///./src/graph/graph/layout/graphLayoutFactory.ts","webpack:///./src/graph/graph/component/ComponentLayout.ts","webpack:///./src/graph/graph/component/LinearComponentLayout.ts","webpack:///./src/graph/graph/component/NoneComponentLayout.ts","webpack:///./src/graph/graph/component/componentLayoutFactory.ts","webpack:///./src/graph/graph/type/GraphType.ts","webpack:///./src/graph/graph/type/BoxGraphType.ts","webpack:///./src/graph/palette.ts","webpack:///./src/graph/graph/type/XdotGraphType.ts","webpack:///./src/graph/graph/type/graphTypeFactory.ts","webpack:///./src/graph/base/Port.ts","webpack:///./src/graph/graph/physics/GraphPhysics.ts","webpack:///./src/graph/graph/physics/BarnesHutGraphPhysics.ts","webpack:///./src/graph/graph/physics/NoneGraphPhysics.ts","webpack:///./src/graph/graph/physics/graphPhysicsFactory.ts","webpack:///./src/graph/graph/Graph.ts","webpack:///./src/graph/edge/type/EdgeType.ts","webpack:///./src/graph/edge/type/StraightEdgeType.ts","webpack:///./src/graph/edge/type/QuadraticEdgeType.ts","webpack:///./src/graph/edge/type/XdotEdgeType.ts","webpack:///./src/graph/edge/type/edgeTypeFactory.ts","webpack:///./src/graph/node/type/recordParser.ts","webpack:///./src/graph/node/type/NodeType.ts","webpack:///./src/graph/node/type/BoxNodeType.ts","webpack:///./src/graph/node/type/RecordCell.ts","webpack:///./src/graph/node/type/RecordNodeType.ts","webpack:///./src/graph/node/type/TableCell.ts","webpack:///./src/graph/node/type/TableNodeType.ts","webpack:///./src/graph/node/type/XdotNodeType.ts","webpack:///./src/graph/node/type/nodeTypeFactory.ts","webpack:///./src/graph/node/Node.ts","webpack:///./src/graph/edge/Edge.ts","webpack:///./src/graph/base/renderableFactory.ts","webpack:///./src/graph/highlightSeeker.ts","webpack:///./src/graph/Root.ts","webpack:///./src/components/MyCanvas.vue?3e1e","webpack:///./src/components/MyCanvas.vue?e1f3","webpack:///./src/components/MyCanvas.vue?40d2","webpack:///./src/components/MyCanvas.vue","webpack:///./src/components/Graph.vue?b1ea","webpack:///./src/graph/dot/DotScanner.ts","webpack:///./src/components/Graph.vue?becd","webpack:///./src/components/Graph.vue","webpack:///./src/graph/dot/BaseScanner.ts","webpack:///./src/graph/dot/XDotAttrParser.ts","webpack:///./src/graph/dot/BaseParser.ts","webpack:///./src/graph/dot/DotParser.ts","webpack:///./src/graph/dot/passes.ts","webpack:///./src/graph/parser.ts","webpack:///./src/graph/examples/stdThreadJoin.gv","webpack:///./src/graph/examples/stdThreadJoin.txt","webpack:///./src/graph/examples/record.txt","webpack:///./src/graph/examples/subgraph.txt","webpack:///./src/graph/examples/icosahedron.txt","webpack:///./src/graph/examples/table.txt","webpack:///./src/graph/examples/edge.txt","webpack:///./src/graph/examples/stdThreadJoin.xdot.txt","webpack:///./src/graph/examples.ts","webpack:///./src/debounce-decorator.ts","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?640d","webpack:///./src/App.vue","webpack:///./src/main.ts","webpack:///./src/components/CollapsiblePane.vue?6955"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","class","settingsOpen","on","$event","_e","_g","desktopLayout","assign","sizerMouseActive","mouseup","onMainSizerMouseUp","mousemove","onMainSizerMouseMove","sizerTouchActive","touchend","onMainSizerTouchEnd","touchmove","onMainSizerTouchMove","style","width","settingsWidth","ref","_s","parseError","canvasWidth","canvasHeight","rendered","left","onMainSizerMouseDown","onMainSizerTouchStart","inputFileChange","directives","rawName","expression","$$selectedVal","Array","filter","target","options","selected","map","val","_value","parser","multiple","redraw","_l","example","selectExample","domProps","composing","rawInput","isArray","enableDraggable","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","highlightMode","initialLayout","physicsLayout","componentLayout","preferredDirection","edgeShape","staticRenderFns","click","title","expand","animationHeight","height","_t","realHeight","content","$refs","paneContent","offsetHeight","addEventListener","transitionEnd","setTimeout","String","mainCanvasData","mousedown","wheel","thumbnailWidth","thumbnailHeight","thumbnailCanvasData","thumbnailMousedown","thumbnailMouseDragActive","thumbnailMouseup","thumbnailMousemove","events","event","listener","undefined","index","indexOf","args","parent","fixed","position","x","y","node","Error","graph","ports","edges","children","config","edge","fullyUpdatePosition","is","render","contentSize","newConfig","KamadaKawaiGraphLayout","defaultConfig","portToIndex","Map","set","port","initialPlaced","springLength","Math","random","distanceMatrix","fill","Infinity","fromBelonging","toBelonging","fromIndex","toIndex","k","dist","lengthMatrix","kMatrix","springConstant","pow","energyMatrix","mPos","iPos","denominator","sqrt","energySum","sum","maxEnergy","threshold","maxIterations","max","min","maxInnerIterations","iterations","deDx","deDy","e","delta","subIterations","d2eDx2","d2eDxDy","d2eDy2","factor","dx","dy","sumX","sumY","oldDx","oldDy","deltaX","deltaY","preferredEdgeDirection","PI","totalX","totalY","currentAngle","atan2","rotateAngle","rotateMatrix","cos","sin","upperLeft","lowerRight","pos","size","getBoundingBoxSize","halfWidth","halfHeight","informAllEdgesFullyUpdatePosition","layoutFactory","type","layouts","LinearComponentLayout","components","componentsSize","getContentSize","direction","reduce","a","b","spaceBetween","begin","componentFactory","angle","select","shape","updateData","BoxGraphType","layout","textSizeNeedsUpdate","label","fontSize","fontFamily","lineHeight","ctx","root","font","lines","split","textSize","measureText","layoutContentSize","padding","textPosition","labelPosition","borderSize","strokeWidth","rect","fillColor","stroke","strokeColor","text","align","abs","selectedBoundingBoxPen","color","fillcolor","linewidth","fontsize","fontname","bold","italic","underline","superscript","subscript","strikethrough","overline","dash","shapes","keys","boundingBox","pen","applyHighlighted","highlighted","points","filled","graphTypeFactory","id","hover","BarnesHutGraphPhysics","layoutData","nodeToIndex","nodes","forces","velocities","controlPoints","getControlPoints","point","minX","maxX","minY","maxY","positioned","sizeDiff","rootSize","halfRootSize","centerX","centerY","tree","centerOfMass","mass","range","splitBranch","placeInTree","that","distance","gravityForce","centralGravity","calculateForces","branch","nodeMass","gravitationalConstant","force","getForceContributions","getForceContribution","NW","NE","SW","SE","theta","formBarnesHutTree","items","item1","item2","edgeLength","springForce","fx","fy","calculateVelocity","velocity","df","damping","maxVelocity","item","updatePosition","containedNode","childSize","updateBranchMass","region","child","totalMass","physicsFactory","parentData","Graph","getId","depth","fullId","parentId","fromEdges","Set","toEdges","oldChildren","subgraphs","renderableFactory","has","console","log","newChild","constructor","adjacencyList","edgesData","values","from","findPort","to","findBelongingPort","unvisited","layoutsData","calculateConnectedComponent","delete","component","adjacency","next","portToComponent","edgeData","componentClass","layoutClass","physicsClass","physics","newLayouts","newPhysics","solve","typeClass","graphType","updated","subgraph","step","draggable","distanceToBorder","onSelect","fromPointerPos","toPointerPos","fromAngle","toAngle","lineFromPos","lineToPos","StraightEdgeType","fromPort","toPort","fromPos","getAbsolutePosition","toPos","fromDistance","toDistance","realFromPosX","realFromPosY","realToPosX","realToPosY","fromPointer","pointerWidth","toPointer","pointerHeight","pointerColor","unshift","lineColor","lineWidth","controlPoint","QuadraticEdgeType","viaPos","edgeTypeFactory","TokenEnum","BoxNodeType","contentSizeNeedsUpdate","borderSizeNeedsUpdate","recordParser","record","buffer","lexer","pop","EOF","VERTICAL_BAR","LEFT_CURLY_BRACE","RIGHT_CURLY_BRACE","LEFT_ANGLE_BRACE","RIGHT_ANGLE_BRACE","STRING","parseRecordLabel","token","parseField","ret","nodeType","isHorizontal","isField","fieldData","getPorts","getConfig","cellSize","recordData","cell","RecordCell","deltaWidth","startX","updateCellSize","deltaHeight","startY","RecordNodeType","contentNeedsUpdate","borderNeedsUpdate","rootCellSize","getCellSize","founded","rowSpan","columnSpan","border","getTableConfig","cellBorder","backgroundColor","attributes","attribute","toLowerCase","parseInt","getText","element","elements","join","parentConfig","tableConfig","cellPadding","rowOffset","columnOffset","TableNodeType","layoutNeedsUpdate","jsonObj","xml2js","tableElement","cellSpacing","table","rows","columns","firstRow","tr","row","td","getPort","cellSizes","cellHeight","cellWidth","rowHeight","columnWidth","accRowHeight","accColumnWidth","upperLeftX","upperLeftY","nodeTypeFactory","Node","Edge","fromNodeOrGraph","toNodeOrGraph","findParentNodeOrGraph","add","edgeType","highlightSeeker","no","directInput","directOutput","allInput","traversal","allOutput","document","createElement","getContext","stepTimer","setInterval","informRender","idArray","newFixed","removed","added","newSelected","refresh","updateHighlighted","newHighlighted","newPen","newClass","renderable","freeze","emit","globalGraphRoot","staticStyle","$listeners","context","hitContext","hitColorMap","hitIdMap","canvas","hitCanvas","round","g","hitCtx","clearRect","updateShape","draggableId","finalDraggable","finalId","save","translate","scale","scaleX","scaleY","childShape","restore","beginPath","fillStyle","strokeStyle","generateHitColor","linesWidth","posY","textBaseline","posX","fillText","moveTo","lineTo","quadraticCurveTo","middleX","middleY","closePath","outerLeft","outerTop","outerRight","outerBottom","innerLeft","innerTop","innerBottom","innerRight","textAlign","centering","arc","setLineDash","p0","p1","p2","p3","bezierCurveTo","lineCap","lineJoin","pixel","getImageData","updateCanvas","Number","required","draggedId","mouseDragActive","mouseLastCoords","moved","maxThumbnailLength","minThumbnailLength","thumbnailPadding","thumbnailMouseLastCoords","updateSize","scaleBy","preventDefault","translateMouseEvent","mousePointTo","stageX","stageY","newPos","elementOffsetX","elementOffsetY","currentTarget","offsetLeft","offsetTop","offsetParent","pageX","pageY","mainCanvas","getIdFromHitPoint","setFixed","setSelected","buttons","newCoords","movePort","thumbnailCanvas","oldCoords","thumbnailFactor","deepCopyAndRemoveDraggable","copy","viewportX","viewportY","viewportWidth","viewportHeight","default","MyCanvas","tokens","symbols","literals","ignoreCase","eofToken","skipToken","flags","tokensRegex","RegExp","buf","mo","match","lastIndex","testLit","finalType","input","newInput","DotScanner","SKIP","STR_ID","replace","ID","HTML_ID","EDGE_OP","LSQUARE","RSQUARE","LCURLY","RCURLY","COMMA","COLON","SEMI","EQUAL","PLUS","strict","STRICT","GRAPH","digraph","DIGRAPH","NODE","EDGE","SUBGRAPH","FontCharacteristics","lookahead","done","types","parseGraph","consume","directed","newChildren","parseStmt","parseAttrs","parseSubgraph","parseNodeId","ids","parseId","parseAttr","compass","HSVtoRGB","h","v","floor","f","q","op","readCode","readColor","readText","startsWith","lw","parseFloat","readFloat","readPoint","readInt","BOLD","ITALIC","UNDERLINE","SUPERSCRIPT","SUBSCRIPT","STRIKE_THROUGH","OVERLINE","readPolygon","JSON","parse","stringify","path","res","skipSpace","num","c1","hsv","xdotComputedAttrPass","graphAttrs","nodeAttrs","edgeAttrs","newGraphAttrs","newNodeAttrs","newEdgeAttrs","entities","computedAttrs","xdotShapeAttrPass","isCluster","attr","newShapes","xdotReverseY","convert","forEach","draw","xdotToRenderablePass","xdotId","xdotFrom","xdotTo","getBoundingBoxFromPoints","x0","y0","x1","y1","getBoundingBox","metrics","actualBoundingBoxDescent","actualBoundingBoxAscent","bt","xdotBoundingBoxPass","bb","xdotMovePass","alnumChars","randomAlnumString","generateId","unescapeString","str","normalizeColor","end","graphParsers","json","graphviz","dotScanner","dotParser","scan","parseNode","recordHorizontal","rankdir","LR","TB","RL","BT","linearLR","linearRL","linearTD","linearDT","xdot","graphExamples","stdThreadJoin","icosahedron","Debounce","delay","prop","configurable","debounce","minGraphWidth","minSettingsWidth","windowWidth","documentElement","clientWidth","windowHeight","clientHeight","parsedInput","examples","parsed","parserConfig","stack","getSize","updateCanvasSize","throttle","location","hash","script","src","onload","externalData","body","append","removeEventListener","parseInput","setHighlightMode","fullyUpdateData","file","files","alert","reader","FileReader","evt","readAsText","$nextTick","offsetWidth","mouseOffsetX","offsetX","touches","right","top","down","CollapsiblePane","productionTip","Icon","$mount"],"mappings":"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","file":"js/app.ff7794ca.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=stylus&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=stylus&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=style&index=0&id=7e8fd228&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=style&index=0&id=7e8fd228&lang=stylus&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('header',{staticClass:\"app-header\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\"Graph Visualizer\")]),_c('div',{staticClass:\"settings\"},[(_vm.desktopLayout)?_c('div',{staticClass:\"settings-item\"},[_c('span',{staticClass:\"settings-item-title\",class:{ 'setting-item-active': _vm.settingsOpen },on:{\"click\":function($event){_vm.settingsOpen = !_vm.settingsOpen}}},[_vm._v(\" 侧栏 \")])]):_vm._e()])]),_c('main',_vm._g({staticClass:\"main-panes\",class:{\n          'main-panes-show-sidebarmain-panes-show-sidebar': _vm.settingsOpen && _vm.desktopLayout\n        }},Object.assign({}, _vm.sizerMouseActive ? {\n          mouseup: _vm.onMainSizerMouseUp,\n          mousemove: _vm.onMainSizerMouseMove\n        } : {}, _vm.sizerTouchActive ? {\n          touchend: _vm.onMainSizerTouchEnd,\n          touchmove: _vm.onMainSizerTouchMove\n        } : {})),[_c('div',{staticClass:\"main-container main-container-graph\",class:{ 'main-container-graph-size-active':\n                    !_vm.sizerMouseActive && !_vm.sizerTouchActive},style:({\n           width: _vm.desktopLayout ? (_vm.settingsOpen ?\n                  (\"calc(100% - \" + _vm.settingsWidth + \"px)\") : '100%') : 'auto'\n         })},[_c('div',{ref:\"canvas\",staticClass:\"main-pane main-pane-graph\"},[(_vm.parseError)?_c('div',{staticClass:\"error-pane\"},[_c('pre',[_c('code',[_vm._v(_vm._s(_vm.parseError))])])]):_vm._e(),_c('Graph',{ref:\"graph\",attrs:{\"width\":_vm.canvasWidth,\"height\":_vm.canvasHeight,\"data\":_vm.rendered}})],1)]),_c('transition',{attrs:{\"name\":\"sizer-slide-x\",\"duration\":300}},[(_vm.settingsOpen && _vm.desktopLayout)?_c('div',{staticClass:\"main-sizer main-client-settings-sizer\",style:({ left: (\"calc(100% - \" + _vm.settingsWidth + \"px)\") }),on:{\"mousedown\":_vm.onMainSizerMouseDown,\"touchstart\":_vm.onMainSizerTouchStart}},[_c('div',{staticClass:\"main-sizer-handlebar\"})]):_vm._e()]),_c('transition',{attrs:{\"name\":\"settings-slide-x\",\"duration\":300}},[(_vm.settingsOpen || !_vm.desktopLayout)?_c('div',{staticClass:\"main-container main-container-settings\",style:({\n             width: _vm.desktopLayout ? (_vm.settingsWidth + \"px\") : 'auto'\n           })},[_c('div',{staticClass:\"main-pane main-pane-settings\"},[_c('CollapsiblePane',{staticClass:\"main-pane-subpane\",attrs:{\"title\":\"输入\"}},[_c('div',{staticClass:\"settings-input-file\"},[_c('label',{attrs:{\"for\":\"input-file\"}},[_c('v-icon',{attrs:{\"name\":\"upload\",\"scale\":\"0.8\"}}),_vm._v(\"打开文件 \")],1),_c('input',{attrs:{\"type\":\"file\",\"id\":\"input-file\"},on:{\"change\":_vm.inputFileChange}})]),_c('div',{staticClass:\"settings-input-format\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.parser),expression:\"parser\"}],attrs:{\"id\":\"input-format\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.parser=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"json\",\"selected\":\"\"}},[_vm._v(\"JSON\")]),_c('option',{attrs:{\"value\":\"graphviz\"}},[_vm._v(\"Graphviz\")]),_c('option',{attrs:{\"value\":\"xdot\"}},[_vm._v(\"Xdot\")])])]),_c('button',{staticClass:\"setting-input-redraw\",on:{\"click\":_vm.redraw}},[_c('v-icon',{attrs:{\"name\":\"sync\",\"scale\":\"0.8\"}}),_vm._v(\"重绘 \")],1),_c('div',{staticClass:\"settings-input-examples\"},[_c('span',{staticClass:\"settings-input-example-label\"},[_vm._v(\"示例：\")]),_vm._l((_vm.examples),function(example,i){return _c('span',{key:example.name,staticClass:\"settings-input-example\",on:{\"click\":function($event){return _vm.selectExample(i)}}},[_vm._v(\" \"+_vm._s(example.name)+\" \")])})],2),_c('div',{staticClass:\"settings-input-display\"},[_c('div',{staticClass:\"settings-input-raw\"},[_c('label',{attrs:{\"for\":\"input-raw\"}},[_vm._v(\"输入数据：\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.rawInput),expression:\"rawInput\"}],attrs:{\"id\":\"input-raw\",\"rows\":\"10\"},domProps:{\"value\":(_vm.rawInput)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.rawInput=$event.target.value}}})])])]),_c('CollapsiblePane',{staticClass:\"main-pane-subpane\",attrs:{\"title\":\"设置\"}},[_c('h4',[_vm._v(\"以下设置是通用的\")]),_c('div',{staticClass:\"settings-settings-draggable\"},[_c('label',{attrs:{\"for\":\"enableDraggable\"}},[_vm._v(\"启用拖拽：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.enableDraggable),expression:\"enableDraggable\"}],attrs:{\"type\":\"checkbox\",\"id\":\"enableDraggable\",\"checked\":\"\"},domProps:{\"checked\":Array.isArray(_vm.enableDraggable)?_vm._i(_vm.enableDraggable,null)>-1:(_vm.enableDraggable)},on:{\"change\":function($event){var $$a=_vm.enableDraggable,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.enableDraggable=$$a.concat([$$v]))}else{$$i>-1&&(_vm.enableDraggable=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.enableDraggable=$$c}}}})]),_c('h4',[_vm._v(\"以下设置仅适用于Xdot格式\")]),_c('div',{staticClass:\"settings-settings-highlight\"},[_c('label',{attrs:{\"for\":\"enable-highlight\"}},[_vm._v(\"高亮模式：\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.highlightMode),expression:\"highlightMode\"}],attrs:{\"id\":\"enable-highlight\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.highlightMode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"no\",\"selected\":\"\"}},[_vm._v(\"不启用\")]),_c('option',{attrs:{\"value\":\"directInput\"}},[_vm._v(\"直接输入\")]),_c('option',{attrs:{\"value\":\"directOutput\"}},[_vm._v(\"直接输出\")]),_c('option',{attrs:{\"value\":\"allInput\"}},[_vm._v(\"所有输入\")]),_c('option',{attrs:{\"value\":\"allOutput\"}},[_vm._v(\"所有输出\")])])]),_c('h4',[_vm._v(\"以下设置仅适用于Graphviz格式\")]),_c('div',{staticClass:\"settings-settings-layout\"},[_c('label',{attrs:{\"for\":\"initial-layout\"}},[_vm._v(\"初始布局：\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.initialLayout),expression:\"initialLayout\"}],attrs:{\"id\":\"initial-layout\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.initialLayout=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"none\"}},[_vm._v(\"不启用\")]),_c('option',{attrs:{\"value\":\"KamadaKawai\",\"selected\":\"\"}},[_vm._v(\"KamadaKawai\")])])]),_c('div',{staticClass:\"settings-settings-physics\"},[_c('label',{attrs:{\"for\":\"physics-layout\"}},[_vm._v(\"物理布局：\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.physicsLayout),expression:\"physicsLayout\"}],attrs:{\"id\":\"physics-layout\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.physicsLayout=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"none\"}},[_vm._v(\"不启用\")]),_c('option',{attrs:{\"value\":\"BarnesHut\",\"selected\":\"\"}},[_vm._v(\"默认\")])])]),_c('div',{staticClass:\"settings-settings-component\"},[_c('label',{attrs:{\"for\":\"component-layout\"}},[_vm._v(\"连通分量布局：\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.componentLayout),expression:\"componentLayout\"}],attrs:{\"id\":\"component-layout\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.componentLayout=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"default\",\"selected\":\"\"}},[_vm._v(\"默认\")]),_c('option',{attrs:{\"value\":\"linearLR\"}},[_vm._v(\"自左至右\")]),_c('option',{attrs:{\"value\":\"linearRL\"}},[_vm._v(\"自右至左\")]),_c('option',{attrs:{\"value\":\"linearTD\"}},[_vm._v(\"自上至下\")]),_c('option',{attrs:{\"value\":\"linearDT\"}},[_vm._v(\"自下至上\")])])]),_c('div',{staticClass:\"settings-settings-direction\"},[_c('label',{attrs:{\"for\":\"preferred-direction\"}},[_vm._v(\"大体方向\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.preferredDirection),expression:\"preferredDirection\"}],attrs:{\"id\":\"preferred-direction\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.preferredDirection=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"default\"}},[_vm._v(\"默认\")]),_c('option',{attrs:{\"value\":\"left\"}},[_vm._v(\"向左\")]),_c('option',{attrs:{\"value\":\"right\",\"selected\":\"\"}},[_vm._v(\"向右\")]),_c('option',{attrs:{\"value\":\"top\"}},[_vm._v(\"向上\")]),_c('option',{attrs:{\"value\":\"down\"}},[_vm._v(\"向下\")])])]),_c('div',{staticClass:\"settings-settings-edge-type\"},[_c('label',{attrs:{\"for\":\"edge-type\"}},[_vm._v(\"边的形状：\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.edgeShape),expression:\"edgeShape\"}],attrs:{\"id\":\"edge-type\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.edgeShape=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"straight\"}},[_vm._v(\"直线\")]),_c('option',{attrs:{\"value\":\"quadratic\",\"selected\":\"\"}},[_vm._v(\"二次\")])])])])],1)]):_vm._e()])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',{staticClass:\"pane-title\",on:{\"click\":_vm.click}},[_vm._v(\" \"+_vm._s(_vm.title)+\" \"),_c('v-icon',{staticClass:\"pane-arrow\",class:{ 'pane-arrow-expand': _vm.expand },attrs:{\"name\":\"angle-up\"}})],1),_c('div',{ref:\"paneContent\",staticClass:\"pane-content\",style:(_vm.animationHeight !== null ?\n               { height: _vm.animationHeight + 'px' } : {})},[_vm._t(\"default\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport 'vue-awesome/icons/angle-up';\nimport { Vue, Component, Prop } from 'vue-property-decorator';\n\n@Component\nexport default class CollapsiblePane extends Vue {\n  @Prop(String) public readonly title: string | undefined;\n  private expand = true;\n  private realHeight = 0;\n  private animationHeight: number|null = null;\n  public mounted() {\n    const content = this.$refs.paneContent as HTMLElement;\n    this.realHeight = content.offsetHeight;\n    content.addEventListener('transitionend', this.transitionEnd.bind(this));\n  }\n  public click() {\n    this.expand = !this.expand;\n    if (this.expand) {\n      this.animationHeight = 0;\n      setTimeout(() => {\n        this.animationHeight = this.realHeight;\n      });\n    } else {\n      const content = this.$refs.paneContent as HTMLElement;\n      this.realHeight = content.offsetHeight;\n      this.animationHeight = this.realHeight;\n      setTimeout(() => {\n        this.animationHeight = 0;\n      });\n    }\n  }\n  public transitionEnd() {\n    if (this.animationHeight !== 0) {\n      this.animationHeight = null;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CollapsiblePane.vue?vue&type=template&id=08120549&scoped=true&\"\nimport script from \"./CollapsiblePane.vue?vue&type=script&lang=ts&\"\nexport * from \"./CollapsiblePane.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08120549\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"graph-container\"},[_c('my-canvas',{ref:\"mainCanvas\",attrs:{\"width\":_vm.width,\"height\":_vm.height,\"data\":_vm.mainCanvasData},on:{\"mousedown\":_vm.mousedown,\"mouseup\":_vm.mouseup,\"mousemove\":_vm.mousemove,\"wheel\":_vm.wheel}}),_c('div',{staticClass:\"thumbnail\",style:({\n    width: _vm.thumbnailWidth + 'px',\n    height: _vm.thumbnailHeight + 'px'\n  })},[_c('my-canvas',_vm._g({ref:\"thumbnailCanvas\",attrs:{\"width\":_vm.thumbnailWidth,\"height\":_vm.thumbnailHeight,\"data\":_vm.thumbnailCanvasData},on:{\"mousedown\":_vm.thumbnailMousedown}},_vm.thumbnailMouseDragActive ? {\n                 mouseup: _vm.thumbnailMouseup,\n                 mousemove: _vm.thumbnailMousemove,\n               } : {}))],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class EventEmitter {\n  private readonly events: { [event: string]: Array<(...args: any[]) => any> } = {};\n\n  public addEventListener(event: string, listener: (...args: any[]) => any) {\n    if (this.events[event] === undefined) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  public removeEventListener(event: string, listener: (...args: any[]) => any) {\n    if (this.events[event] !== undefined) {\n      const index = this.events[event].indexOf(listener);\n      if (index > -1) {\n        this.events[event].splice(index, 1);\n      }\n    }\n  }\n\n  public emit(event: string, ...args: any[]) {\n    if (this.events[event] !== undefined) {\n      for (const listener of this.events[event]) {\n        listener.apply(this, args);\n      }\n    }\n  }\n}\n","import {Position} from '@/graph/base/dataInput';\n\nexport default class Positioned {\n  public parent: Positioned | null;\n  public fixed: boolean;\n  public position: Position;\n  public constructor(parent: Positioned | null) {\n    this.parent = parent;\n    this.fixed = false;\n    this.position = { x: 0, y: 0 };\n  }\n  public setPosition(position: Position): void {\n    this.position = position;\n  }\n  public getPosition(): Position {\n    return this.position;\n  }\n  public getAbsolutePosition(parent: Positioned): Position {\n    let x = 0;\n    let y = 0;\n    let node: Positioned | null = this;\n    while (node !== parent) {\n      if (node === null) {\n        throw new Error('Incorrect parent parameter');\n      }\n      x += node.position.x;\n      y += node.position.y;\n      node = node.parent;\n    }\n    return {x, y};\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport {GraphLayoutData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport Edge from '@/graph/edge/Edge';\nimport Renderable from '@/graph/base/Renderable';\nimport Node from '@/graph/node/Node';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport interface LayoutEdgeData {\n  from: Port;\n  to: Port;\n  fromBelonging: Node | Graph;\n  toBelonging: Node | Graph;\n  edge: Edge;\n}\n\nexport interface LayoutData {\n  ports: Array<Node | Graph>;\n  edges: LayoutEdgeData[];\n  children: Renderable[];\n}\n\nexport default abstract class GraphLayout extends Positioned {\n  protected readonly graph: Graph;\n  protected data: LayoutData;\n  public constructor(graph: Graph, parent: Positioned | null) {\n    super(parent);\n    this.graph = graph;\n    this.data = {\n      ports: [],\n      edges: [],\n      children: [],\n    };\n  }\n  public solve(config: GraphLayoutData | undefined,\n               data: LayoutData,\n               index: number): void {\n    this.data = data;\n  }\n  public informAllEdgesFullyUpdatePosition() {\n    if (this.data) {\n      for (const edge of this.data.edges) {\n        edge.edge.fullyUpdatePosition();\n      }\n    }\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: this.data.children.map((x) => x.render()),\n    };\n  }\n  public getContentSize(): Size {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport {KamadaKawaiGraphLayoutData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface KamadaKawaiGraphLayoutConfig {\n  springLength: number;\n  springConstant: number;\n  preferredEdgeDirection: number | 'any';\n}\n\nexport default class KamadaKawaiGraphLayout extends GraphLayout {\n  private static defaultConfig: KamadaKawaiGraphLayoutConfig = {\n    springLength: 150,\n    springConstant: 0.05,\n    preferredEdgeDirection: 'any',\n  };\n  private contentSize: Size;\n  constructor(graph: Graph, parent: Positioned | null) {\n    super(graph, parent);\n    this.contentSize = { width: 0, height: 0 };\n  }\n  public solve(config: KamadaKawaiGraphLayoutData | undefined,\n               data: LayoutData,\n               index: number) {\n    super.solve(config, data, index);\n    const newConfig: KamadaKawaiGraphLayoutConfig = Object.assign({},\n      KamadaKawaiGraphLayout.defaultConfig, config);\n    const portToIndex: Map<Port, number> = new Map();\n    for (let i = 0; i < data.ports.length; ++i) {\n      portToIndex.set(data.ports[i], i);\n    }\n    // Initial random placement\n    for (const port of data.ports) {\n      if (!port.initialPlaced) {\n        port.position = {\n          x: newConfig.springLength * ( Math.random() - 0.5),\n          y: newConfig.springLength * ( Math.random() - 0.5),\n        };\n        port.initialPlaced = true;\n      }\n    }\n    // Compute distance matrix by Floyd Warshall\n    const distanceMatrix: number[][] = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      distanceMatrix.push(Array(data.ports.length).fill(Infinity));\n      distanceMatrix[distanceMatrix.length - 1][i] = 0;\n    }\n    for (const {fromBelonging, toBelonging} of data.edges) {\n      const fromIndex = portToIndex.get(fromBelonging)!;\n      const toIndex = portToIndex.get(toBelonging)!;\n      distanceMatrix[fromIndex][toIndex] = 1;\n      distanceMatrix[toIndex][fromIndex] = 1;\n    }\n    for (let k = 0; k < data.ports.length; ++k) {\n      for (let i = 0; i < data.ports.length; ++i) {\n        for (let j = 0; j < data.ports.length; ++j) {\n          const dist = distanceMatrix[i][k] + distanceMatrix[k][j];\n          if (distanceMatrix[i][j] > dist) {\n            distanceMatrix[i][j] = dist;\n          }\n        }\n      }\n    }\n    // Place ports using Kamada Kawai\n    // Compute length matrix\n    const lengthMatrix = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const length = [];\n      for (let j = 0; j < data.ports.length; ++j) {\n        length.push(newConfig.springLength * distanceMatrix[i][j]);\n      }\n      lengthMatrix.push(length);\n    }\n    // Compute k matrix\n    const kMatrix = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const k = [];\n      for (let j = 0; j < data.ports.length; ++j) {\n        k.push(newConfig.springConstant *\n          Math.pow(distanceMatrix[i][j], -2));\n      }\n      kMatrix.push(k);\n    }\n    // Compute energy matrix\n    const energyMatrix = [];\n    for (const port of data.ports) {\n      energyMatrix.push(Array(data.ports.length));\n    }\n    for (let m = 0; m < data.ports.length; ++m) {\n      const mPos = data.ports[m].position;\n      energyMatrix[m][m] = [0, 0];\n      for (let i = m + 1; i < data.ports.length; ++i) {\n        const iPos = data.ports[i].position;\n        const denominator = 1.0 / Math.sqrt(\n          Math.pow(mPos.x - iPos.x, 2) + Math.pow(mPos.y - iPos.y, 2));\n        energyMatrix[m][i] = [\n          kMatrix[m][i] * (mPos.x - iPos.x) *\n            (1 - lengthMatrix[m][i] * denominator),\n          kMatrix[m][i] * (mPos.y - iPos.y) *\n            (1 - lengthMatrix[m][i] * denominator),\n        ];\n        energyMatrix[i][m] = [\n          -energyMatrix[m][i][0],\n          -energyMatrix[m][i][1],\n        ];\n      }\n    }\n    const energySum = [];\n    for (let i = 0; i < data.ports.length; ++i) {\n      const sum = [0, 0];\n      for (let j = 0; j < data.ports.length; ++j) {\n        sum[0] += energyMatrix[i][j][0];\n        sum[1] += energyMatrix[i][j][1];\n      }\n      energySum.push(sum);\n    }\n    // Compute position\n    const threshold = 0.01;\n    const maxIterations = Math.max(1000,\n      Math.min(10 * data.ports.length, 6000));\n    const maxInnerIterations = 5;\n    let iterations = 0;\n    let maxEnergy;\n    while (iterations < maxIterations) {\n      iterations += 1;\n      // Get port with highest energy\n      let m = 0;\n      let deDx = 0;\n      let deDy = 0;\n      maxEnergy = -1;\n      for (let i = 0; i < data.ports.length; ++i) {\n        const e = Math.sqrt(Math.pow(energySum[i][0], 2) +\n          Math.pow(energySum[i][1], 2));\n        if (e > maxEnergy) {\n          m = i;\n          deDx = energySum[i][0];\n          deDy = energySum[i][1];\n          maxEnergy = e;\n        }\n      }\n      if (maxEnergy <= threshold) {\n        break;\n      }\n      const mPos = data.ports[m].position;\n      let delta = maxEnergy;\n      let subIterations = 0;\n      while (delta > threshold && subIterations < maxInnerIterations) {\n        subIterations += 1;\n        // Move port\n        let d2eDx2 = 0;\n        let d2eDxDy = 0;\n        let d2eDy2 = 0;\n        for (let i = 0; i < data.ports.length; ++i) {\n          if (i !== m) {\n            const iPos = data.ports[i].position;\n            const factor = 1.0 / Math.pow(Math.pow(mPos.x - iPos.x, 2) +\n              Math.pow(mPos.y - iPos.y, 2), 1.5);\n            const k = kMatrix[m][i];\n            const l = lengthMatrix[m][i];\n            d2eDx2 += k * (1 - l * Math.pow(mPos.y - iPos.y, 2) * factor);\n            d2eDxDy += k * l * (mPos.x - iPos.x) * (mPos.y - iPos.y) *\n              factor;\n            d2eDy2 += k * (1 - l * Math.pow(mPos.x - iPos.x, 2) * factor);\n          }\n        }\n        // Solve equation using Cramer's rule\n        const denominator = d2eDx2 * d2eDy2 - Math.pow(d2eDxDy, 2);\n        const dx = (d2eDxDy * deDy - d2eDy2 * deDx) / denominator;\n        const dy = (d2eDxDy * deDx - d2eDx2 * deDy) / denominator;\n        mPos.x += dx;\n        mPos.y += dy;\n        // Recalculate energy matrix\n        let sumX = 0;\n        let sumY = 0;\n        for (let i = 0; i < data.ports.length; ++i) {\n          if (i !== m) {\n            const [oldDx, oldDy] = energyMatrix[m][i];\n            const iPos = data.ports[i].position;\n            const factor = 1.0 / Math.sqrt(\n              Math.pow(mPos.x - iPos.x, 2) + Math.pow(mPos.y - iPos.y, 2));\n            const deltaX = kMatrix[m][i] * (mPos.x - iPos.x) *\n              (1 - lengthMatrix[m][i] * factor);\n            const deltaY = kMatrix[m][i] * (mPos.y - iPos.y) *\n              (1 - lengthMatrix[m][i] * factor);\n            energyMatrix[m][i] = [deltaX, deltaY];\n            energyMatrix[i][m] = [-deltaX, -deltaY];\n            energySum[i][0] += oldDx - deltaX;\n            energySum[i][1] += oldDy - deltaY;\n            sumX += deltaX;\n            sumY += deltaY;\n          }\n        }\n        energySum[m] = [sumX, sumY];\n        // Update\n        delta = Math.sqrt(Math.pow(energySum[m][0], 2) +\n          Math.pow(energySum[m][1], 2));\n        deDx = energySum[m][0];\n        deDy = energySum[m][1];\n      } // for kamada kawai inner iteration\n    } // for kamada kawai outer iteration\n    // Rotate graph to satisfy preferred edge direction\n    if (typeof newConfig.preferredEdgeDirection === 'number') {\n      const preferredEdgeDirection: number = newConfig.preferredEdgeDirection /\n        180 * Math.PI;\n      let totalX = 0;\n      let totalY = 0;\n      for (const edge of data.edges) {\n        totalX += edge.toBelonging.position.x - edge.fromBelonging.position.x;\n        totalY += edge.toBelonging.position.y - edge.fromBelonging.position.y;\n      }\n      const currentAngle = Math.atan2(totalY, totalX);\n      const rotateAngle = preferredEdgeDirection - currentAngle;\n      const rotateMatrix: number[][] = [\n        [Math.cos(rotateAngle), -Math.sin(rotateAngle)],\n        [Math.sin(rotateAngle), Math.cos(rotateAngle)],\n      ];\n      for (const node of data.ports) {\n        node.position = {\n          x: rotateMatrix[0][0] * node.position.x +\n            rotateMatrix[0][1] * node.position.y,\n          y: rotateMatrix[1][0] * node.position.x +\n            rotateMatrix[1][1] * node.position.y,\n        };\n      }\n    }\n    // Calculate component size and position\n    const upperLeft = [Infinity, Infinity];\n    const lowerRight = [-Infinity, -Infinity];\n    for (const port of data.ports) {\n      const pos = port.position;\n      const size = port.getBoundingBoxSize();\n      const halfWidth = size.width / 2;\n      const halfHeight = size.height / 2;\n      if (pos.x - halfWidth < upperLeft[0]) {\n        upperLeft[0] = pos.x - halfWidth;\n      }\n      if (pos.x + halfWidth > lowerRight[0]) {\n        lowerRight[0] = pos.x + halfWidth;\n      }\n      if (pos.y - halfHeight < upperLeft[1]) {\n        upperLeft[1] = pos.y - halfHeight;\n      }\n      if (pos.y + halfHeight > lowerRight[1]) {\n        lowerRight[1] = pos.y + halfHeight;\n      }\n    }\n    const position = {\n      x: (upperLeft[0] + lowerRight[0]) / 2,\n      y: (upperLeft[1] + lowerRight[1]) / 2,\n    };\n    this.contentSize = {\n      width: lowerRight[0] - upperLeft[0],\n      height: lowerRight[1] - upperLeft[1],\n    };\n    // Move ports to center\n    for (const port of data.ports) {\n      port.position.x -= position.x;\n      port.position.y -= position.y;\n    }\n    this.informAllEdgesFullyUpdatePosition();\n  } // solve method\n\n  public getContentSize() {\n    return this.contentSize;\n  }\n}\n","import GraphLayout from '@/graph/graph/layout/GraphLayout';\n\nexport default class NoneGraphLayout extends GraphLayout {}\n","import KamadaKawaiGraphLayout from './KamadaKawaiGraphLayout';\nimport {GraphLayoutData} from '@/graph/base/dataInput';\nimport GraphLayout from '@/graph/graph/layout/GraphLayout';\nimport Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport NoneGraphLayout from '@/graph/graph/layout/NoneGraphLayout';\n\nexport default function layoutFactory(data: GraphLayoutData | undefined)\n    : new (graph: Graph, parent: Positioned | null) => GraphLayout {\n  switch (data && data.type) {\n    case 'none':\n      return NoneGraphLayout;\n    default:\n      return KamadaKawaiGraphLayout;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\nimport {ComponentLayoutData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class ComponentLayout extends Positioned {\n  protected readonly graph: Graph;\n  public constructor(graph: Graph, parent: Positioned | null) {\n    super(parent);\n    this.graph = graph;\n  }\n  public updateData(config: ComponentLayoutData | undefined): void {\n    // do nothing\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: this.graph.layouts.map((x) => x.render()),\n    };\n  }\n  public getContentSize(): Size {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n}\n","import ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport Graph from '@/graph/graph/Graph';\nimport {LinearComponentLayoutData, Size} from '@/graph/base/dataInput';\nimport Positioned from '@/graph/base/Positioned';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface LinearComponentLayoutConfig {\n  direction: 'TD' | 'DT' | 'LR' | 'RL';\n  spaceBetween: number;\n}\n\nexport default class LinearComponentLayout extends ComponentLayout {\n  private static defaultConfig = {\n    direction: 'TD',\n    spaceBetween: 12,\n  };\n  private contentSize: Size;\n  constructor(graph: Graph, parent: Positioned | null) {\n    super(graph, parent);\n    this.contentSize = { width: 0, height: 0 };\n  }\n  public updateData(config: LinearComponentLayoutData | undefined) {\n    const newConfig: LinearComponentLayoutConfig = Object.assign({},\n      LinearComponentLayout.defaultConfig, config);\n    const components = this.graph.layouts;\n    const componentsSize = components.map((x) => x.getContentSize()!);\n    if (newConfig.direction === 'LR' || newConfig.direction === 'RL') {\n      this.contentSize = {\n        width: componentsSize.map((x) => x.width).reduce((a, b) => a + b, 0) +\n          Math.max(components.length - 1, 0) * newConfig.spaceBetween,\n        height: Math.max(...componentsSize.map((x) => x.height), 0),\n      };\n      let begin = newConfig.direction === 'LR' ?\n        -this.contentSize.width / 2 : this.contentSize.width / 2;\n      for (let i = 0; i < components.length; ++i) {\n        const deltaX = (newConfig.direction === 'LR' ?\n          componentsSize[i].width / 2 : -componentsSize[i].width / 2) +\n          begin;\n        components[i].position = { x: deltaX, y: 0 };\n        if (newConfig.direction === 'LR') {\n          begin += componentsSize[i].width + newConfig.spaceBetween;\n        } else {\n          begin -= componentsSize[i].width + newConfig.spaceBetween;\n        }\n      }\n    } else {\n      this.contentSize = {\n        width: Math.max(...componentsSize.map((x) => x.width), 0),\n        height: componentsSize.map((x) => x.height).reduce((a, b) => a + b, 0) +\n          Math.max(components.length - 1, 0) * newConfig.spaceBetween,\n      };\n      let begin = newConfig.direction === 'DT' ?\n        this.contentSize.height / 2 : -this.contentSize.height / 2;\n      for (let i = 0; i < components.length; ++i) {\n        const deltaY = (newConfig.direction === 'DT' ?\n          -componentsSize[i].height / 2 : componentsSize[i].height / 2) +\n          begin;\n        components[i].position = { x: 0, y: deltaY };\n        if (newConfig.direction === 'DT') {\n          begin -= componentsSize[i].height + newConfig.spaceBetween;\n        } else {\n          begin += componentsSize[i].height + newConfig.spaceBetween;\n        }\n      }\n    } // position calculation\n  }\n  public getContentSize() {\n    return this.contentSize;\n  }\n}\n","import ComponentLayout from '@/graph/graph/component/ComponentLayout';\n\nexport default class NoneComponentLayout extends ComponentLayout {}\n","import {ComponentLayoutData} from '@/graph/base/dataInput';\nimport Graph from '@/graph/graph/Graph';\nimport ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport LinearComponentLayout from '@/graph/graph/component/LinearComponentLayout';\nimport Positioned from '@/graph/base/Positioned';\nimport NoneComponentLayout from '@/graph/graph/component/NoneComponentLayout';\n\nexport default function componentFactory(data: ComponentLayoutData | undefined)\n  : new (graph: Graph, parent: Positioned | null) => ComponentLayout {\n  switch (data && data.type) {\n    case 'none':\n      return NoneComponentLayout;\n    default:\n      return LinearComponentLayout;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport {GraphData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class GraphType {\n  protected parent: Graph;\n  protected constructor(parent: Graph) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: GraphData): void;\n  public abstract render(): AnyShape[];\n  public getBoundingBoxSize(): Size {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n  public distanceToBorder(angle: number): number {\n    return 0;\n  }\n  public onSelect(select: boolean): boolean {\n    return false;\n  }\n}\n","import GraphType from '@/graph/graph/type/GraphType';\nimport Graph from '@/graph/graph/Graph';\nimport {BoxGraphData, GraphData, Position, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface BoxGraphConfig {\n  label: string | null;\n  labelPosition: 'top' | 'right' | 'bottom' | 'left';\n  style: 'solid' | 'filled' | 'none';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n  spaceBetween: number;\n}\n\nexport default class BoxGraphType extends GraphType {\n  public static defaultConfig = {\n    label: null,\n    labelPosition: 'top', // or 'right', 'bottom', 'left'\n    style: 'none',  // or 'filled'\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 0,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 6,\n    align: 'center',\n    spaceBetween: 12,\n  };\n  private config!: BoxGraphConfig;\n  private textSize!: Size;\n  private contentSize!: Size;\n  private textPosition!: Position;\n  private borderSize!: Size;\n  constructor(parent: Graph, data: GraphData) {\n    if (data.shape !== 'box') {\n      throw new Error('Expect box shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: BoxGraphData) {\n    const newConfig = Object.assign({}, BoxGraphType.defaultConfig, data);\n    delete newConfig.layout;\n    delete newConfig.children;\n    const textSizeNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    if (textSizeNeedsUpdate) {\n      const ctx = this.parent.root.ctx;\n      ctx.font = `${newConfig.fontSize}px ${newConfig.fontFamily}`;\n      const lines = newConfig.label ? (newConfig.label as string)\n        .split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * newConfig.fontSize * newConfig.lineHeight,\n      };\n    }\n    const layoutContentSize = this.parent.componentLayout.getContentSize()!;\n    this.contentSize = {\n      width: layoutContentSize.width + 2 * newConfig.padding,\n      height: layoutContentSize.height + 2 * newConfig.padding,\n    };\n    this.parent.componentLayout.position = { x: 0, y: 0 };\n    this.textPosition = { x: 0, y: 0 };\n    if (newConfig.label) {\n      if (newConfig.labelPosition === 'left' ||\n          newConfig.labelPosition === 'right') {\n        this.contentSize.width += this.textSize.width + newConfig.spaceBetween;\n        if (this.textSize.height > layoutContentSize.height) {\n          this.contentSize.height = this.textSize.height +\n            2 * newConfig.padding;\n        }\n        if (newConfig.labelPosition === 'left') {\n          this.parent.componentLayout.position.x = (this.textSize.width +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.x = -(layoutContentSize.width +\n            newConfig.spaceBetween) / 2;\n        } else {\n          this.parent.componentLayout.position.x = -(this.textSize.width +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.x = (layoutContentSize.width +\n            newConfig.spaceBetween) / 2;\n        }\n      } else {\n        this.contentSize.height += this.textSize.height +\n          newConfig.spaceBetween;\n        if (this.textSize.width > layoutContentSize.width) {\n          this.contentSize.width = this.textSize.width + 2 * newConfig.padding;\n        }\n        if (newConfig.labelPosition === 'bottom') {\n          this.parent.componentLayout.position.y = -(this.textSize.height +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.y = (layoutContentSize.height +\n            newConfig.spaceBetween) / 2;\n        } else {\n          this.parent.componentLayout.position.y = (this.textSize.height +\n            newConfig.spaceBetween) / 2;\n          this.textPosition.y = -(layoutContentSize.height +\n            newConfig.spaceBetween) / 2;\n        }\n      }\n    }\n    this.borderSize = {\n      width: this.contentSize.width + newConfig.strokeWidth,\n      height: this.contentSize.height + newConfig.strokeWidth,\n    };\n    this.config = newConfig;\n  }\n  public render(): AnyShape[] {\n    const rendered: AnyShape[] = [];\n    if (this.config.style && this.config.style !== 'none') {\n      const rect: AnyShape = {\n        is: 'rect',\n        x: -this.contentSize.width / 2,\n        y: -this.contentSize.height / 2,\n        width: this.contentSize.width,\n        height: this.contentSize.height,\n        fill: this.config.style === 'filled' ?\n          this.config.fillColor : undefined,\n        stroke: this.config.strokeWidth > 0 ?\n          this.config.strokeColor : undefined,\n        strokeWidth: this.config.strokeWidth,\n      };\n      rendered.push(rect);\n    }\n    if (this.config.label) {\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.textSize.width / 2,\n        y: this.textPosition.y - this.textSize.height / 2,\n        text: this.config.label,\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        lineHeight: this.config.lineHeight,\n        align: this.config.align,\n      };\n      rendered.push(text);\n    }\n    rendered.push(this.parent.componentLayout.render());\n    return rendered;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import {XdotPen} from '@/graph/base/dataXdot';\n\nexport const selectedBoundingBoxPen: XdotPen = {\n  color: [0, 0xff, 0xff, 1],\n  fillcolor: [0, 0, 0, 1],\n  linewidth: 2,\n  fontsize: 14,\n  fontname: 'Times-Roman',\n  bold: false,\n  italic: false,\n  underline: false,\n  superscript: false,\n  subscript: false,\n  strikethrough: false,\n  overline: false,\n  dash: [6],\n};\n","import GraphType from '@/graph/graph/type/GraphType';\nimport {XdotShape} from '@/graph/base/dataXdot';\nimport {GraphData, Size, XdotGraphData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Graph from '@/graph/graph/Graph';\nimport {selectedBoundingBoxPen} from '@/graph/palette';\n\nexport default class XdotGraphType extends GraphType {\n  private shapes!: XdotShape[];\n  private size!: Size;\n  private boundingBox: [number, number, number, number] | undefined;\n  private selected!: boolean;\n  constructor(parent: Graph, data: GraphData) {\n    if (data.shape !== 'xdot') {\n      throw new Error('Expect xdot shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: XdotGraphData): void {\n    this.shapes = data.shapes ? ([] as XdotShape[]).concat(\n      ...Object.keys(data.shapes).map((x) => data.shapes![x])) : [];\n    if (data.boundingBox) {\n      this.size = {\n        width: data.boundingBox[2] - data.boundingBox[0],\n        height: data.boundingBox[3] - data.boundingBox[1],\n      };\n      this.boundingBox = data.boundingBox;\n    } else {\n      this.size = {\n        width: 0,\n        height: 0,\n      };\n    }\n    this.selected = false;\n  }\n  public render(): AnyShape[] {\n    const shapes: AnyShape[] = this.shapes.map(\n      (x) => Object.assign({}, x, {\n        pen: this.parent.root.applyHighlighted(x.pen, this.parent.highlighted),\n      }));\n    shapes.push(this.parent.componentLayout.render());\n    if (this.selected && this.boundingBox) {\n      return shapes.concat({\n        is: 'xdot',\n        type: 'polygon',\n        pen: selectedBoundingBoxPen,\n        points: [\n          [this.boundingBox[0], this.boundingBox[1]],\n          [this.boundingBox[2], this.boundingBox[1]],\n          [this.boundingBox[2], this.boundingBox[3]],\n          [this.boundingBox[0], this.boundingBox[3]],\n        ],\n        filled: false,\n      });\n    } else {\n      return shapes;\n    }\n  }\n  public getBoundingBoxSize(): Size {\n    return this.size;\n  }\n  public onSelect(select: boolean): boolean {\n    this.selected = select;\n    return !!this.boundingBox;\n  }\n}\n","import BoxGraphType from '@/graph/graph/type/BoxGraphType';\nimport GraphType from '@/graph/graph/type/GraphType';\nimport Graph from '@/graph/graph/Graph';\nimport {GraphData} from '@/graph/base/dataInput';\nimport XdotGraphType from '@/graph/graph/type/XdotGraphType';\n\n// noinspection JSUnusedLocalSymbols\nexport default function graphTypeFactory(data: GraphData)\n    : new (parent: Graph, data: GraphData) => GraphType {\n  switch (data.shape) {\n    case 'xdot':\n      return XdotGraphType;\n    default:\n      data.shape = 'box';\n      return BoxGraphType;\n  }\n}\n","import Positioned from '@/graph/base/Positioned';\nimport {Size} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\n\nexport default abstract class Port extends Positioned {\n  public readonly root: Root;\n  public initialPlaced: boolean; // for graph layout\n  public id: string;\n  protected constructor(root: Root, parent: Positioned | null = null) {\n    super(parent);\n    this.root = root;\n    this.initialPlaced = false;\n    this.id = '';\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    return null;\n  }\n  public abstract getBoundingBoxSize(): Size;\n  public abstract distanceToBorder(angle: number): number;\n  // Return true to trigger a refresh\n  public onHover(hover: boolean): boolean {\n    return false;\n  }\n  // Return true to trigger a refresh\n  public onSelect(select: boolean): boolean {\n    return false;\n  }\n}\n","import Graph from '@/graph/graph/Graph';\nimport {GraphPhysicsData} from '@/graph/base/dataInput';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\n\nexport default abstract class GraphPhysics {\n  protected readonly graph: Graph;\n  protected readonly layout: GraphLayout;\n  public constructor(graph: Graph, layout: GraphLayout) {\n    this.graph = graph;\n    this.layout = layout;\n  }\n  public abstract solve(config: GraphPhysicsData | undefined,\n                        data: LayoutData): void;\n  public abstract step(): boolean;\n}\n","import GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport {BarnesHutGraphPhysicsData, Position, Vector} from '@/graph/base/dataInput';\nimport GraphLayout, {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport Graph from '@/graph/graph/Graph';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface BarnesHutGraphPhysicsConfig {\n  theta: number;\n  gravitationalConstant: number;\n  centralGravity: number;\n  springLength: number;\n  springConstant: number;\n  damping: number;\n  maxVelocity: number;\n}\n\ninterface BarnesHutTree {\n  centerOfMass: Position;\n  mass: number;\n  range: {\n    minX: number;\n    maxX: number;\n    minY: number;\n    maxY: number;\n  };\n  children?: {\n    NW: BarnesHutTree;\n    NE: BarnesHutTree;\n    SW: BarnesHutTree;\n    SE: BarnesHutTree;\n  };\n  data?: Positioned;\n  size: number;\n}\n\nexport default class BarnesHutGraphPhysics extends GraphPhysics {\n  private static defaultConfig: BarnesHutGraphPhysicsConfig = {\n    theta: 1,\n    gravitationalConstant: -2000,\n    centralGravity: 0.05,\n    springLength: 150,\n    springConstant: 0.04,\n    damping: 0.09,\n    maxVelocity: 50,\n  };\n  private static splitBranch(branch: BarnesHutTree) {\n    if (branch.children) {\n      throw new Error('Cannot split branch on an already split branch');\n    }\n    const containedNode: Positioned | undefined = branch.data;\n    if (containedNode) {\n      branch.mass = 0;\n      branch.centerOfMass.x = 0;\n      branch.centerOfMass.y = 0;\n    }\n    delete branch.data;\n    const childSize = 0.5 * branch.size;\n    branch.children = {\n      NW: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX, maxX: branch.range.minX + childSize,\n          minY: branch.range.minY, maxY: branch.range.minY + childSize,\n        },\n        size: childSize,\n      },\n      NE: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX + childSize, maxX: branch.range.maxX,\n          minY: branch.range.minY, maxY: branch.range.minY + childSize,\n        },\n        size: childSize,\n      },\n      SW: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX, maxX: branch.range.minX + childSize,\n          minY: branch.range.minY + childSize, maxY: branch.range.maxY,\n        },\n        size: childSize,\n      },\n      SE: {\n        centerOfMass: { x: 0, y: 0},\n        mass: 0,\n        range: {\n          minX: branch.range.minX + childSize, maxX: branch.range.maxX,\n          minY: branch.range.minY + childSize, maxY: branch.range.maxY,\n        },\n        size: childSize,\n      },\n    };\n    if (containedNode) {\n      this.placeInTree(branch, containedNode);\n    }\n  }\n  private static placeInTree(branch: BarnesHutTree,\n                             node: Positioned): void {\n    if (!branch.children) {\n      throw new Error('Place in tree can be only called on a split branch');\n    }\n    this.updateBranchMass(branch, node);\n    const range = branch.children.NW.range;\n    const pos = node.position;\n    let region: 'NW' | 'SW' | 'NE' | 'SE';\n    if (range.maxX > pos.x) {\n      if (range.maxY > pos.y) {\n        region = 'NW';\n      } else {\n        region = 'SW';\n      }\n    } else {\n      if (range.maxY > pos.y) {\n        region = 'NE';\n      } else {\n        region = 'SE';\n      }\n    }\n    const child = branch.children[region];\n    if (child.children) {\n      this.placeInTree(child, node);\n    } else if (child.data) {\n      // ignore overlapping node\n      if (child.data.position.x === pos.x &&\n          child.data.position.y === pos.y ) {\n        pos.x += Math.random() - 0.5;\n        pos.y += Math.random() - 0.5;\n      } else {\n        this.splitBranch(child);\n        this.placeInTree(child, node);\n      }\n    } else {\n      child.data = node;\n      this.updateBranchMass(child, node);\n    }\n  }\n  private static updateBranchMass(branch: BarnesHutTree,\n                                  node: Positioned) {\n    const nodeMass = 1;\n    const totalMass = branch.mass + nodeMass;\n    branch.centerOfMass.x = (branch.centerOfMass.x * branch.mass +\n      node.position.x * nodeMass) / totalMass;\n    branch.centerOfMass.y = (branch.centerOfMass.y * branch.mass +\n      node.position.y * nodeMass) / totalMass;\n    branch.mass = totalMass;\n  }\n  private config: BarnesHutGraphPhysicsConfig;\n  private layoutData: LayoutData;\n  private nodeToIndex: Map<Positioned, number>;\n  private nodes: Positioned[];\n  private forces: Vector[];\n  private velocities: Vector[];\n  public constructor(graph: Graph, layout: GraphLayout) {\n    super(graph, layout);\n    this.config = BarnesHutGraphPhysics.defaultConfig;\n    this.layoutData = {\n      ports: [],\n      edges: [],\n      children: [],\n    };\n    this.nodeToIndex = new Map();\n    this.nodes = [];\n    this.forces = [];\n    this.velocities = [];\n  }\n  public solve(config: BarnesHutGraphPhysicsData | undefined,\n               data: LayoutData) {\n    this.config = Object.assign({},\n      BarnesHutGraphPhysics.defaultConfig, config);\n    this.layoutData = data;\n    this.nodeToIndex = new Map();\n    this.nodes = [];\n    // Create Index\n    let i = 0;\n    for (; i < this.layoutData.ports.length; ++i) {\n      this.nodeToIndex.set(this.layoutData.ports[i], i);\n      this.nodes.push(this.layoutData.ports[i]);\n    }\n    for (const edge of this.layoutData.edges) {\n      const controlPoints = edge.edge.getControlPoints();\n      for (const point of controlPoints) {\n        this.nodeToIndex.set(point, i);\n        this.nodes.push(point);\n        ++i;\n      }\n    }\n    this.forces = [];\n    this.velocities = [];\n    for (i = 0; i < this.nodeToIndex.size; ++i) {\n      this.forces.push({ x: 0, y: 0 });\n      this.velocities.push({ x: 0, y: 0 });\n    }\n  }\n  public formBarnesHutTree(): BarnesHutTree {\n    if (this.nodes.length < 1) {\n      throw new Error('Expect at least one node to form Barnes Hut tree');\n    }\n    let minX = this.nodes[0].position.x;\n    let maxX = this.nodes[0].position.x;\n    let minY = this.nodes[0].position.y;\n    let maxY = this.nodes[0].position.y;\n    for (let i = 1; i < this.nodes.length; ++i) {\n      const positioned = this.nodes[i];\n      const pos = positioned.position;\n      if (pos.x < minX) {\n        minX = pos.x;\n      }\n      if (pos.x > maxX) {\n        maxX = pos.x;\n      }\n      if (pos.y < minY) {\n        minY = pos.y;\n      }\n      if (pos.y > maxY)  {\n        maxY = pos.y;\n      }\n    }\n    const sizeDiff = Math.abs(maxX - minX) - Math.abs(maxY - minY);\n    if (sizeDiff > 0) {\n      minY -= 0.5 * sizeDiff;\n      maxY += 0.5 * sizeDiff;\n    } else {\n      minX += 0.5 * sizeDiff;\n      maxX -= 0.5 * sizeDiff;\n    }\n    const rootSize = Math.abs(maxX - minX);\n    const halfRootSize = 0.5 * rootSize;\n    const centerX = 0.5 * (minX + maxX);\n    const centerY = 0.5 * (minY + maxY);\n    const tree: BarnesHutTree = {\n      centerOfMass: { x: 0, y: 0},\n      mass: 0,\n      range: {\n        minX: centerX - halfRootSize, maxX: centerX + halfRootSize,\n        minY: centerY - halfRootSize, maxY: centerY + halfRootSize,\n      },\n      size: rootSize,\n    };\n    BarnesHutGraphPhysics.splitBranch(tree);\n    for (const node of this.nodes) {\n      BarnesHutGraphPhysics.placeInTree(tree, node);\n    }\n    return tree;\n  }\n  public step(): boolean {\n    for (const force of this.forces) {\n      force.x = 0;\n      force.y = 0;\n    }\n    const that = this;\n    // Calculate central gravity\n    for (let i = 0; i < this.nodes.length; ++i) {\n      const node = this.nodes[i];\n      const dx = -node.position.x;\n      const dy = -node.position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      const gravityForce = (distance === 0) ? 0 :\n        (this.config.centralGravity / distance);\n      this.forces[i].x = dx * gravityForce;\n      this.forces[i].y = dy * gravityForce;\n    }\n    // Calculate node repulsive force\n    if (this.nodes.length) {\n      function calculateForces(dx: number, dy: number,\n                               node: Positioned,\n                               branch: BarnesHutTree) {\n        if (dx === 0 && dy === 0) {\n          dx = 0.1;\n        }\n        const nodeMass = 1;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const gravityForce = that.config.gravitationalConstant * branch.mass *\n          nodeMass / Math.pow(distance, 3);\n        const force = that.forces[that.nodeToIndex.get(node)!];\n        force.x += dx * gravityForce;\n        force.y += dy * gravityForce;\n      }\n      function getForceContributions(branch: BarnesHutTree, node: Positioned) {\n        if (!branch.children) {\n          throw new Error('Get force contributions ' +\n            'can be only called on a split branch');\n        }\n        getForceContribution(branch.children.NW, node);\n        getForceContribution(branch.children.NE, node);\n        getForceContribution(branch.children.SW, node);\n        getForceContribution(branch.children.SE, node);\n      }\n      function getForceContribution(branch: BarnesHutTree, node: Positioned) {\n        if (!branch.children && !branch.data) {\n          return;\n        }\n        const dx = branch.centerOfMass.x - node.position.x;\n        const dy = branch.centerOfMass.y - node.position.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (branch.size / distance < that.config.theta) {\n          calculateForces(dx, dy, node, branch);\n        } else if (branch.children) {\n          getForceContributions(branch, node);\n        } else if (branch.data !== node) {\n          calculateForces(dx, dy, node, branch);\n        }\n      }\n      const tree = this.formBarnesHutTree();\n      for (const node of this.nodes) {\n        getForceContributions(tree, node);\n      }\n      // Naive method\n      // for (let i = 0; i < this.nodes.length - 1; ++i) {\n      //   const node1 = this.nodes[i];\n      //   const pos1 = node1.position;\n      //   for (let j = i + 1; j < this.nodes.length; ++j) {\n      //     const node2 = this.nodes[j];\n      //     const pos2 = node2.position;\n      //     const dx = pos1.x - pos2.x;\n      //     const dy = pos1.y - pos2.y;\n      //     const distance = Math.sqrt(dx * dx + dy * dy);\n      //     const gravityForce = -2000 / Math.pow(distance + 1e-3, 3);\n      //     this.forces[i].x -= dx * gravityForce;\n      //     this.forces[i].y -= dy * gravityForce;\n      //     this.forces[j].x += dx * gravityForce;\n      //     this.forces[j].y += dy * gravityForce;\n      //   }\n      // }\n    }\n    // Calculate spring force\n    for (const edge of this.layoutData.edges) {\n      if (edge.fromBelonging !== edge.toBelonging) {\n        const items = [\n          edge.fromBelonging,\n          ...edge.edge.getControlPoints(),\n          edge.toBelonging,\n        ];\n        for (let i = 0; i < items.length - 1; ++i) {\n          const item1 = items[i];\n          const item2 = items[i + 1];\n          const edgeLength = this.config.springLength / (items.length - 1);\n          const dx = item1.position.x - item2.position.x;\n          const dy = item1.position.y - item2.position.y;\n          const distance = Math.max(Math.sqrt(dx * dx + dy * dy), 0.01);\n          const springForce = this.config.springConstant *\n            (edgeLength - distance) / distance;\n          const fx = dx * springForce;\n          const fy = dy * springForce;\n          this.forces[this.nodeToIndex.get(item1)!].x += fx;\n          this.forces[this.nodeToIndex.get(item1)!].y += fy;\n          this.forces[this.nodeToIndex.get(item2)!].x -= fx;\n          this.forces[this.nodeToIndex.get(item2)!].y -= fy;\n        }\n      }\n    }\n    // Move nodes\n    function calculateVelocity(velocity: number,\n                               force: number,\n                               mass: number): number {\n      const df = that.config.damping * velocity;\n      const a = (force - df) / mass;\n      velocity += a; // * time;\n      if (Math.abs(velocity) > that.config.maxVelocity) {\n        velocity = velocity > 0 ? that.config.maxVelocity :\n          -that.config.maxVelocity;\n      }\n      return velocity;\n    }\n    for (let i = 0; i < this.nodes.length; ++i) {\n      const item = this.nodes[i];\n      const pos = item.position;\n      const force = this.forces[i];\n      const velocity = this.velocities[i];\n      if (item.fixed) {\n        velocity.x = 0;\n        velocity.y = 0;\n      } else {\n        velocity.x = calculateVelocity(velocity.x, force.x, 1);\n        velocity.y = calculateVelocity(velocity.y, force.y, 1);\n      }\n      item.position = {\n        x: pos.x + velocity.x, // * time\n        y: pos.y + velocity.y, // * time\n      };\n    }\n    for (const edge of this.layoutData.edges) {\n      edge.edge.updatePosition();\n    }\n    return true;\n  }\n}\n","import GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport {LayoutData} from '@/graph/graph/layout/GraphLayout';\nimport {NoneGraphPhysicsData} from '@/graph/base/dataInput';\n\nexport default class NoneGraphPhysics extends GraphPhysics {\n  public solve(config: NoneGraphPhysicsData | undefined,\n               data: LayoutData): void {\n    // do nothing\n  }\n  public step(): boolean {\n    return false;\n  }\n}\n","import {GraphPhysicsData} from '@/graph/base/dataInput';\nimport Graph from '@/graph/graph/Graph';\nimport GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport BarnesHutGraphPhysics from '@/graph/graph/physics/BarnesHutGraphPhysics';\nimport GraphLayout from '@/graph/graph/layout/GraphLayout';\nimport NoneGraphPhysics from '@/graph/graph/physics/NoneGraphPhysics';\n\nexport default function physicsFactory(data: GraphPhysicsData | undefined)\n    : new (graph: Graph, layout: GraphLayout) => GraphPhysics {\n  switch (data && data.type) {\n    case 'none':\n      return NoneGraphPhysics;\n    default:\n      return BarnesHutGraphPhysics;\n  }\n}\n","import {GraphData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport renderableFactory from '@/graph/base/renderableFactory';\nimport Edge from '@/graph/edge/Edge';\nimport layoutFactory from '@/graph/graph/layout/graphLayoutFactory';\nimport componentFactory from '@/graph/graph/component/componentLayoutFactory';\nimport graphTypeFactory from '@/graph/graph/type/graphTypeFactory';\nimport Port from '@/graph/base/Port';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\nimport GraphLayout, {LayoutData, LayoutEdgeData} from '@/graph/graph/layout/GraphLayout';\nimport ComponentLayout from '@/graph/graph/component/ComponentLayout';\nimport GraphType from '@/graph/graph/type/GraphType';\nimport GraphPhysics from '@/graph/graph/physics/GraphPhysics';\nimport physicsFactory from '@/graph/graph/physics/graphPhysicsFactory';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Node from '@/graph/node/Node';\n\nexport default class Graph extends Port implements Renderable {\n  public static getId(data: GraphData) {\n    if (!data.id) {\n      throw new Error('Missing id field for graph');\n    }\n    return data.id;\n  }\n  public readonly graph: Graph | null;\n  public fullId!: string;\n  public depth!: number;\n  public highlighted!: boolean;\n  public fromEdges!: Set<Edge>;\n  public toEdges!: Set<Edge>;\n  public children!: Map<string, Renderable>;\n  public ports!: Map<string, Node | Graph>;\n  public edges!: Map<string, Edge>;\n  public subgraphs!: Map<string, Graph>;\n  public layouts!: GraphLayout[];\n  public physics!: GraphPhysics[];\n  public layoutsData!: LayoutData[];\n  public componentLayout!: ComponentLayout;\n  private graphType!: GraphType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'graph') {\n      throw new Error('Expect node type');\n    }\n    super(root, parent);\n    this.graph = graph;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: GraphData, parentData: ParentData | null) {\n    this.id = Graph.getId(data);\n    const newChildren = new Map();\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    this.highlighted = false;\n    this.fromEdges = new Set();\n    this.toEdges = new Set();\n    const oldChildren = this.children;\n    this.children = new Map();\n    this.edges = new Map();\n    this.ports = new Map();\n    this.subgraphs = new Map();\n    if (data.children) {\n      for (const child of data.children) {\n        const type = renderableFactory(child);\n        const id = type.getId(child);\n        if (this.children.has(id)) {\n          // tslint:disable-next-line:no-console\n          console.log(new Error(`Duplicated id ${id}`));\n          continue;\n        }\n        let newChild: Renderable;\n        if (oldChildren && oldChildren.has(id) &&\n            oldChildren.get(id)!.constructor === type) {\n          newChild = oldChildren.get(id)!;\n          newChild.updateData(child, {\n            parentId: this.fullId,\n            depth: this.depth,\n          });\n        } else {\n          newChild = new type(this.root, this, null, child, {\n            parentId: this.fullId,\n            depth: this.depth,\n          });\n        }\n        this.children.set(id, newChild);\n        if (newChild instanceof Edge) {\n          this.edges.set(id, newChild);\n        } else {\n          this.ports.set(id, newChild as any);\n          if (newChild instanceof Graph) {\n            this.subgraphs.set(id, newChild);\n          }\n        }\n      }\n    }\n    // Create adjacency list\n    const adjacencyList: Map<Node | Graph, Array<Node | Graph>> = new Map();\n    const edgesData: LayoutEdgeData[] = [];\n    for (const edge of this.edges.values()) {\n      const from = this.findPort(edge.from.split(':'));\n      const to = this.findPort(edge.to.split(':'));\n      const fromBelonging = this.findBelongingPort(edge.from);\n      const toBelonging = this.findBelongingPort(edge.to);\n      if (from && to && fromBelonging && toBelonging) {\n        if (!adjacencyList.has(fromBelonging)) {\n          adjacencyList.set(fromBelonging, []);\n        }\n        if (!adjacencyList.has(toBelonging)) {\n          adjacencyList.set(toBelonging, []);\n        }\n        adjacencyList.get(fromBelonging)!.push(toBelonging);\n        adjacencyList.get(toBelonging)!.push(fromBelonging);\n        edgesData.push({ from, to, fromBelonging, toBelonging, edge });\n      } else {\n        throw new Error('Cannot find starting or ending port of edge');\n      }\n    }\n    // Compute connected components by DFS\n    const unvisited: Set<Node | Graph> = new Set(this.ports.values());\n    this.layoutsData = [];\n    const calculateConnectedComponent = (from: Node | Graph) => {\n      unvisited.delete(from);\n      const component = this.layoutsData[this.layoutsData.length - 1];\n      component.ports.push(from);\n      const adjacency = adjacencyList.get(from);\n      if (adjacency) {\n        for (const to of adjacency) {\n          if (unvisited.has(to)) {\n            calculateConnectedComponent(to);\n          }\n        }\n      }\n    };\n    while (unvisited.size) {\n      const node = unvisited.values().next().value;\n      const component: LayoutData = {\n        ports: [],\n        edges: [],\n        children: [],\n      };\n      this.layoutsData.push(component);\n      calculateConnectedComponent(node);\n    }\n    // Classify edges to belonging component\n    const portToComponent: Map<Port, LayoutData> = new Map();\n    for (const component of this.layoutsData) {\n      for (const port of component.ports) {\n        portToComponent.set(port, component);\n      }\n    }\n    for (const edgeData of edgesData) {\n      const {fromBelonging} = edgeData;\n      portToComponent.get(fromBelonging)!.edges.push(edgeData);\n    }\n    // Add children\n    for (const component of this.layoutsData) {\n      component.children = (component.ports as any[])\n        .concat(component.edges.map((x) => x.edge));\n    }\n    // Create layout\n    const componentClass = componentFactory(data.component);\n    if (!this.componentLayout ||\n        this.componentLayout.constructor !== componentClass) {\n      this.componentLayout = new componentClass(this, this);\n    }\n    const layoutClass = layoutFactory(data.layout);\n    const physicsClass = physicsFactory(data.physics);\n    const newLayouts: GraphLayout[] = [];\n    const newPhysics: GraphPhysics[] = [];\n    for (let i = 0; i < this.layoutsData.length; ++i) {\n      const layout = this.layouts && i < this.layouts.length &&\n        this.layouts[i].constructor === layoutClass ?\n        this.layouts[i] : new layoutClass(this, this.componentLayout);\n      const physics = this.physics && i < this.physics.length &&\n        this.physics[i].constructor === physicsClass ?\n        this.physics[i] : new physicsClass(this, layout);\n      for (const child of this.layoutsData[i].children) {\n        (child as any).parent = layout;\n      }\n      layout.solve(data.layout, this.layoutsData[i], i);\n      physics.solve(data.physics, this.layoutsData[i]);\n      newLayouts.push(layout);\n      newPhysics.push(physics);\n    }\n    this.layouts = newLayouts;\n    this.physics = newPhysics;\n    this.componentLayout.updateData(data.component);\n    const typeClass = graphTypeFactory(data);\n    if (!this.graphType || this.graphType.constructor !== typeClass) {\n      this.graphType = new typeClass(this, data);\n    } else {\n      this.graphType.updateData(data);\n    }\n  }\n  public step(): boolean {\n    let updated = false;\n    if (this.subgraphs) {\n      for (const subgraph of this.subgraphs.values()) {\n        if (subgraph.step()) {\n          updated = true;\n        }\n      }\n    }\n    if (this.physics) {\n      for (const physics of this.physics) {\n        if (physics.step()) {\n          updated = true;\n        }\n      }\n    }\n    return updated;\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      draggable: true,\n      id: this.fullId,\n      x: this.position.x,\n      y: this.position.y,\n      children: this.graphType.render(),\n    };\n  }\n  public findBelongingPort(id: string): Node | Graph | null {\n    id = id.split(':')[0];\n    if (this.ports.has(id)) {\n      return this.ports.get(id)!;\n    }\n    for (const graph of this.subgraphs.values()) {\n      if (graph.findBelongingPort(id)) {\n        return graph;\n      }\n    }\n    return null;\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    if (this.ports.has(id[0])) {\n      const node = this.ports.get(id[0])!;\n      return node.findPort(id.slice(1));\n    }\n    for (const graph of this.subgraphs.values()) {\n      const node = graph.findPort(id);\n      if (node) {\n        return node;\n      }\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.graphType.getBoundingBoxSize();\n  }\n  public distanceToBorder(angle: number) {\n    return this.graphType.distanceToBorder(angle);\n  }\n  public onSelect(select: boolean): boolean {\n    return this.graphType.onSelect(select);\n  }\n}\n","import Edge from '@/graph/edge/Edge';\nimport {EdgeData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Positioned from '@/graph/base/Positioned';\n\nexport default abstract class EdgeType {\n  public readonly parent: Edge;\n  protected constructor(parent: Edge) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: EdgeData): void;\n  public fullyUpdatePosition(): void {\n    // do nothing\n  }\n  public updatePosition(): void {\n    // do nothing\n  }\n  public getControlPoints(): Positioned[] {\n    return [];\n  }\n  public abstract render(): AnyShape;\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, Position, StraightEdgeData} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport interface StraightEdgeConfig {\n  fromPointer: boolean;\n  toPointer: boolean;\n  lineColor: string;\n  lineWidth: number;\n  pointerColor: string;\n  pointerWidth: number;\n  pointerHeight: number;\n}\n\nexport default class StraightEdgeType extends EdgeType {\n  private static defaultConfig: StraightEdgeConfig = {\n    fromPointer: false,\n    toPointer: true,\n    lineColor: 'black',\n    lineWidth: 1,\n    pointerColor: 'black',\n    pointerWidth: 10,\n    pointerHeight: 15,\n  };\n  private config!: StraightEdgeConfig;\n  private fromPointerPos: Position;\n  private toPointerPos: Position;\n  private fromAngle: number;\n  private toAngle: number;\n  private lineFromPos: Position;\n  private lineToPos: Position;\n  public constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'straight') {\n      throw new Error('Expect straight shape');\n    }\n    super(parent);\n    this.updateData(data);\n    this.fromPointerPos = { x: 0, y: 0 };\n    this.toPointerPos = { x: 0, y: 0 };\n    this.fromAngle = this.toAngle = 0;\n    this.lineFromPos = { x: 0, y: 0 };\n    this.lineToPos = { x: 0, y: 0 };\n  }\n  public updateData(data: StraightEdgeData): void {\n    this.config = Object.assign({}, StraightEdgeType.defaultConfig, data);\n  }\n  public fullyUpdatePosition(): void {\n    this.updatePosition();\n  }\n  public updatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    this.fromAngle = Math.atan2(toPos.y - fromPos.y, toPos.x - fromPos.x);\n    this.toAngle = Math.PI + this.fromAngle;\n    const fromDistance = fromPort.distanceToBorder(this.fromAngle);\n    const toDistance = toPort.distanceToBorder(this.toAngle);\n    let realFromPosX = fromPos.x + fromDistance * Math.cos(this.fromAngle);\n    let realFromPosY = fromPos.y + fromDistance * Math.sin(this.fromAngle);\n    let realToPosX = toPos.x + toDistance * Math.cos(this.toAngle);\n    let realToPosY = toPos.y + toDistance * Math.sin(this.toAngle);\n    this.fromPointerPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    if (this.config.fromPointer) {\n      realFromPosX += this.config.pointerWidth * Math.cos(this.fromAngle);\n      realFromPosY += this.config.pointerWidth * Math.sin(this.fromAngle);\n    }\n    this.lineFromPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    this.toPointerPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n    if (this.config.toPointer) {\n      realToPosX += this.config.pointerWidth * Math.cos(this.toAngle);\n      realToPosY += this.config.pointerWidth * Math.sin(this.toAngle);\n    }\n    this.lineToPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n  }\n\n  public render(): AnyShape {\n    const children: AnyShape[] = [];\n    if (this.config.fromPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.fromPointerPos.x,\n        y: this.fromPointerPos.y,\n        angle: this.fromAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    if (this.config.toPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.toPointerPos.x,\n        y: this.toPointerPos.y,\n        angle: this.toAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    children.unshift({\n      is: 'line',\n      points: [\n        this.lineFromPos.x, this.lineFromPos.y,\n        this.lineToPos.x, this.lineToPos.y,\n      ],\n      stroke: this.config.lineColor,\n      strokeWidth: this.config.lineWidth,\n    });\n    return {\n      is: 'group',\n      children,\n    };\n  }\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, Position, QuadraticEdgeData} from '@/graph/base/dataInput';\nimport Positioned from '@/graph/base/Positioned';\nimport Edge from '@/graph/edge/Edge';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport interface QuadraticEdgeConfig {\n  fromPointer: boolean;\n  toPointer: boolean;\n  lineColor: string;\n  lineWidth: number;\n  pointerColor: string;\n  pointerWidth: number;\n  pointerHeight: number;\n}\n\nexport default class QuadraticEdgeType extends EdgeType {\n  private static defaultConfig: QuadraticEdgeConfig = {\n    fromPointer: false,\n    toPointer: true,\n    lineColor: 'black',\n    lineWidth: 1,\n    pointerColor: 'black',\n    pointerWidth: 10,\n    pointerHeight: 15,\n  };\n  private config!: QuadraticEdgeConfig;\n  private controlPoint!: Positioned;\n  private fromPointerPos: Position;\n  private toPointerPos: Position;\n  private fromAngle: number;\n  private toAngle: number;\n  private lineFromPos: Position;\n  private lineToPos: Position;\n  public constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'quadratic') {\n      throw new Error('Expect quadratic shape');\n    }\n    super(parent);\n    this.updateData(data);\n    this.controlPoint = new Positioned(this.parent.parent);\n    this.fromPointerPos = { x: 0, y: 0 };\n    this.toPointerPos = { x: 0, y: 0 };\n    this.fromAngle = this.toAngle = 0;\n    this.lineFromPos = { x: 0, y: 0 };\n    this.lineToPos = { x: 0, y: 0 };\n  }\n  public updateData(data: QuadraticEdgeData): void {\n    this.config = Object.assign({}, QuadraticEdgeType.defaultConfig, data);\n  }\n  public fullyUpdatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    this.controlPoint.position = {\n      x: 0.5 * (fromPos.x + toPos.x),\n      y: 0.5 * (fromPos.y + toPos.y),\n    };\n    this.updatePosition();\n  }\n  public updatePosition(): void {\n    if (!this.parent.parent) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    const fromPort = this.parent.fromPort;\n    const toPort = this.parent.toPort;\n    const fromPos = fromPort.getAbsolutePosition(this.parent.parent);\n    const toPos = toPort.getAbsolutePosition(this.parent.parent);\n    const viaPos = this.controlPoint.position;\n    this.fromAngle = Math.atan2(viaPos.y - fromPos.y, viaPos.x - fromPos.x);\n    this.toAngle = Math.PI + Math.atan2(toPos.y - viaPos.y, toPos.x - viaPos.x);\n    const fromDistance = fromPort.distanceToBorder(this.fromAngle);\n    const toDistance = toPort.distanceToBorder(this.toAngle);\n    let realFromPosX = fromPos.x + fromDistance * Math.cos(this.fromAngle);\n    let realFromPosY = fromPos.y + fromDistance * Math.sin(this.fromAngle);\n    let realToPosX = toPos.x + toDistance * Math.cos(this.toAngle);\n    let realToPosY = toPos.y + toDistance * Math.sin(this.toAngle);\n    this.fromPointerPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    if (this.config.fromPointer) {\n      realFromPosX += this.config.pointerWidth * Math.cos(this.fromAngle);\n      realFromPosY += this.config.pointerWidth * Math.sin(this.fromAngle);\n    }\n    this.lineFromPos = {\n      x: realFromPosX,\n      y: realFromPosY,\n    };\n    this.toPointerPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n    if (this.config.toPointer) {\n      realToPosX += this.config.pointerWidth * Math.cos(this.toAngle);\n      realToPosY += this.config.pointerWidth * Math.sin(this.toAngle);\n    }\n    this.lineToPos = {\n      x: realToPosX,\n      y: realToPosY,\n    };\n  }\n  public getControlPoints(): Positioned[] {\n    return [this.controlPoint];\n  }\n  public render(): AnyShape {\n    const children: AnyShape[] = [];\n    if (this.config.fromPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.fromPointerPos.x,\n        y: this.fromPointerPos.y,\n        angle: this.fromAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    if (this.config.toPointer) {\n      children.push({\n        is: 'pointer',\n        x: this.toPointerPos.x,\n        y: this.toPointerPos.y,\n        angle: this.toAngle,\n        width: this.config.pointerWidth,\n        height: this.config.pointerHeight,\n        fill: this.config.pointerColor,\n      });\n    }\n    children.unshift({\n      is: 'quadraticLine',\n      points: [\n        this.lineFromPos.x, this.lineFromPos.y,\n        this.controlPoint.position.x,\n        this.controlPoint.position.y,\n        this.lineToPos.x, this.lineToPos.y,\n      ],\n      stroke: this.config.lineColor,\n      strokeWidth: this.config.lineWidth,\n    });\n    return {\n      is: 'group',\n      children,\n    };\n  }\n}\n","import EdgeType from '@/graph/edge/type/EdgeType';\nimport {EdgeData, XdotEdgeData} from '@/graph/base/dataInput';\nimport {XdotShape} from '@/graph/base/dataXdot';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport default class XdotEdgeType extends EdgeType {\n  private shapes!: XdotShape[];\n  constructor(parent: Edge, data: EdgeData) {\n    if (data.shape !== 'xdot') {\n      throw new Error('Expect xdot shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: XdotEdgeData): void {\n    this.shapes = data.shapes ? ([] as XdotShape[]).concat(\n      ...Object.keys(data.shapes).map((x) => data.shapes![x])) : [];\n  }\n  public render(): AnyShape {\n    const shapes = this.shapes.map(\n      (x) => Object.assign({}, x, {\n        pen: this.parent.root.applyHighlighted(x.pen, this.parent.highlighted),\n      }));\n    return{\n      is: 'group',\n      children: shapes,\n    };\n  }\n}\n","import {EdgeData} from '@/graph/base/dataInput';\nimport Edge from '@/graph/edge/Edge';\nimport StraightEdgeType from '@/graph/edge/type/StraightEdgeType';\nimport EdgeType from '@/graph/edge/type/EdgeType';\nimport QuadraticEdgeType from '@/graph/edge/type/QuadraticEdgeType';\nimport XdotEdgeType from '@/graph/edge/type/XdotEdgeType';\n\nexport default function edgeTypeFactory(data: EdgeData)\n    : new (parent: Edge, data: EdgeData) => EdgeType {\n  switch (data.shape) {\n    case 'straight':\n      return StraightEdgeType;\n    case 'xdot':\n      return XdotEdgeType;\n    default:\n      data.shape = 'quadratic';\n      return QuadraticEdgeType;\n  }\n}\n","/*\n * recordLabel\n *   : field ('|' field )*\n *   ;\n * field\n *   : (’<’ string ’>’)? string?\n *   | '{' recordLabel '}'\n *   ;\n */\n\nenum TokenEnum {\n  EOF,\n  VERTICAL_BAR,\n  LEFT_CURLY_BRACE,\n  RIGHT_CURLY_BRACE,\n  LEFT_ANGLE_BRACE,\n  RIGHT_ANGLE_BRACE,\n  STRING,\n}\n\ninterface Token {\n  type: TokenEnum;\n  text?: string;\n}\n\nexport interface Record {\n  type: 'record';\n  children: RecordData[];\n}\n\nexport interface Field {\n  type: 'field';\n  port?: string;\n  text?: string;\n}\n\nexport type RecordData = Record | Field;\n\nexport default function recordParser(record: string): RecordData {\n  let position = 0;\n  const buffer: Token[] = [];\n  function lexer(): Token {\n    if (buffer.length) {\n      return buffer.pop()!;\n    }\n    while (position < record.length &&\n           ' \\t\\n\\r\\v'.indexOf(record[position]) > -1) {\n      ++position;\n    }\n    if (position >= record.length) {\n      return { type: TokenEnum.EOF };\n    }\n    switch (record[position]) {\n      case '|':\n        ++position;\n        return { type: TokenEnum.VERTICAL_BAR };\n      case '{':\n        ++position;\n        return { type: TokenEnum.LEFT_CURLY_BRACE };\n      case '}':\n        ++position;\n        return { type: TokenEnum.RIGHT_CURLY_BRACE };\n      case '<':\n        ++position;\n        return { type: TokenEnum.LEFT_ANGLE_BRACE };\n      case '>':\n        ++position;\n        return { type: TokenEnum.RIGHT_ANGLE_BRACE };\n      default: {\n        let text = '';\n        while (position < record.length &&\n               ' \\t\\n\\r\\v|{}<>'.indexOf(record[position]) === -1) {\n          if (record[position] === '\\\\') {\n            ++position;\n            if (position === record.length) {\n              throw new Error('Unexpected end of escape sequence');\n            }\n            switch (record[position]) {\n              case 'n':\n                text += '\\n';\n                break;\n              default:\n                text += record[position];\n            }\n          } else {\n            text += record[position];\n          }\n          ++position;\n        }\n        return { type: TokenEnum.STRING, text };\n      }\n    }\n  }\n  function parseRecordLabel(): Record {\n    const children = [parseField()];\n    let token;\n    while ((token = lexer())!.type === TokenEnum.VERTICAL_BAR) {\n      children.push(parseField());\n    }\n    buffer.push(token);\n    return { type: 'record', children };\n  }\n  function parseField(): RecordData {\n    let token = lexer();\n    if (token.type === TokenEnum.LEFT_CURLY_BRACE) {\n      const ret = parseRecordLabel();\n      if (lexer().type !== TokenEnum.RIGHT_CURLY_BRACE) {\n        throw new Error('Expect \\'}\\'');\n      }\n      return ret;\n    }\n    const result: Field = { type: 'field' };\n    if (token.type === TokenEnum.LEFT_ANGLE_BRACE) {\n      token = lexer();\n      if (token.type === TokenEnum.STRING) {\n        let port = token.text;\n        while ((token = lexer()).type === TokenEnum.STRING) {\n          port += ' ' + token.text;\n        }\n        result.port = port;\n      }\n      if (token.type !== TokenEnum.RIGHT_ANGLE_BRACE) {\n        throw new Error('Expect \\'>\\'');\n      }\n      token = lexer();\n    }\n    if (token.type === TokenEnum.STRING) {\n      let text = token.text;\n      while ((token = lexer()).type === TokenEnum.STRING) {\n        text += ' ' + token.text;\n      }\n      result.text = text;\n    }\n    buffer.push(token);\n    return result;\n  }\n  const tree = parseRecordLabel();\n  if (lexer().type !== TokenEnum.EOF) {\n    throw new Error('Unexpected token');\n  }\n  return tree;\n}\n","import Node from '@/graph/node/Node';\nimport {NodeData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default abstract class NodeType {\n  public readonly parent: Node;\n  protected constructor(parent: Node) {\n    this.parent = parent;\n  }\n  public abstract updateData(data: NodeData): void;\n  public abstract render(): AnyShape[];\n  public findPort(id: string[]): Port | null {\n    return null;\n  }\n  public getBoundingBoxSize(): Size {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n  public distanceToBorder(angle: number): number {\n    return 0;\n  }\n  public onSelect(select: boolean): boolean {\n    return false;\n  }\n}\n","import NodeType from '@/graph/node/type/NodeType';\nimport Node from '@/graph/node/Node';\nimport {BoxNodeData, NodeData, Size} from '@/graph/base/dataInput';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface BoxNodeConfig {\n  label: string | null;\n  style: 'solid' | 'filled';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n}\n\nexport default class BoxNodeType extends NodeType {\n  private static defaultConfig: BoxNodeConfig = {\n    label: null,\n    style: 'solid',  // or 'filled'\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 4,\n    align: 'center',\n  };\n  private config!: BoxNodeConfig;\n  private textSize!: Size;\n  private contentSize!: Size;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'box') {\n      throw new Error('Expect box shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: BoxNodeData) {\n    const newConfig = Object.assign({}, BoxNodeType.defaultConfig, data);\n    const textSizeNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    const contentSizeNeedsUpdate = textSizeNeedsUpdate ||\n      this.config.padding !== newConfig.padding;\n    const borderSizeNeedsUpdate = contentSizeNeedsUpdate ||\n      this.config.strokeWidth !== newConfig.strokeWidth;\n    this.config = newConfig;\n    if (textSizeNeedsUpdate) {\n      const ctx = this.parent.root.ctx;\n      ctx.font = `${newConfig.fontSize}px ${newConfig.fontFamily}`;\n      const lines = newConfig.label ? newConfig.label.split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * newConfig.fontSize * newConfig.lineHeight,\n      };\n    }\n    if (contentSizeNeedsUpdate) {\n      this.contentSize = {\n        width: this.textSize.width + 2 * newConfig.padding,\n        height: this.textSize.height + 2 * newConfig.padding,\n      };\n    }\n    if (borderSizeNeedsUpdate) {\n      // Konva's border extends towards both inner and outer\n      this.borderSize = {\n        width: this.contentSize.width + newConfig.strokeWidth,\n        height: this.contentSize.height + newConfig.strokeWidth,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    const rect: AnyShape = {\n      is: 'rect',\n      x: -this.contentSize.width / 2,\n      y: -this.contentSize.height / 2,\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n      fill: this.config.style === 'filled' ?\n        this.config.fillColor : undefined,\n      stroke: this.config.strokeWidth > 0 ?\n        this.config.strokeColor : undefined,\n      strokeWidth: this.config.strokeWidth,\n    };\n    const rendered: AnyShape[] = [rect];\n    if (this.config.label) {\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.contentSize.width / 2,\n        y: -this.contentSize.height / 2,\n        text: this.config.label,\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        lineHeight: this.config.lineHeight,\n        padding: this.config.padding,\n        align: this.config.align,\n      };\n      rendered.push(text);\n    }\n    return rendered;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import RecordNodeType from '@/graph/node/type/RecordNodeType';\nimport {Field, Record, RecordData} from '@/graph/node/type/recordParser';\nimport {Size} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\nexport default class RecordCell extends Port {\n  private readonly nodeType: RecordNodeType;\n  private isField!: boolean;\n  private isHorizontal!: boolean;\n  private label?: string;\n  private children?: RecordCell[];\n  private textSize?: Size;\n  private contentSize?: Size;\n  private cellSize!: Size;\n  constructor(root: Root, parent: Port, nodeType: RecordNodeType,\n              data: RecordData, isHorizontal = true) {\n    super(root, parent);\n    this.nodeType = nodeType;\n    this.updateData(data, isHorizontal);\n  }\n  public updateData(data: RecordData, isHorizontal = true) {\n    this.isField = data.type === 'field';\n    this.isHorizontal = isHorizontal;\n    if (this.isField) {\n      const fieldData = data as Field;\n      if (fieldData.port) {\n        this.nodeType.getPorts()!.set(fieldData.port, this);\n      }\n      const ctx = this.root.ctx;\n      const config = this.nodeType.getConfig()!;\n      this.label = fieldData.text || '';\n      ctx.font = `${config.fontSize}px ${config.fontFamily}`;\n      const lines =  this.label ?  this.label.split('\\n') : [];\n      this.textSize = {\n        width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n        height: lines.length * config.fontSize * config.lineHeight,\n      };\n      this.contentSize = {\n        width: this.textSize.width + 2 * config.padding,\n        height: this.textSize.height + 2 * config.padding,\n      };\n      this.cellSize = {\n        width: this.contentSize.width,\n        height: this.contentSize.height,\n      };\n    } else {\n      const recordData = data as Record;\n      this.children = [];\n      for (const child of recordData.children) {\n        const cell = new RecordCell(this.root, this, this.nodeType,\n          child, !isHorizontal);\n        this.children.push(cell);\n      }\n      if (isHorizontal) {\n        this.cellSize = {\n          width: this.children.map((x: RecordCell) => x.cellSize.width)\n            .reduce((a, b) => a + b, 0),\n          height: Math.max(...this.children.map(\n            (x: RecordCell) => x.cellSize.height)),\n        };\n      } else {\n        this.cellSize = {\n          width: Math.max(...this.children.map(\n            (x: RecordCell) => x.cellSize.width)),\n          height: this.children.map((x: RecordCell) => x.cellSize.height)\n            .reduce((a, b) => a + b, 0),\n        };\n      }\n    }\n  }\n  public updateCellSize(width: number, height: number) {\n    if (!this.isField) {\n      if (!this.children) {\n        throw new Error('Non-field record should have children');\n      }\n      if (this.isHorizontal) {\n        const deltaWidth = (width - this.cellSize.width) / this.children.length;\n        let startX = -width / 2;\n        for (const child of this.children) {\n          child.updateCellSize(child.cellSize.width + deltaWidth, height);\n          child.position = {\n            x: startX + child.cellSize.width / 2,\n            y: 0,\n          };\n          startX += child.cellSize.width;\n        }\n      } else {\n        const deltaHeight = (height - this.cellSize.height) /\n          this.children.length;\n        let startY = -height / 2;\n        for (const child of this.children) {\n          child.updateCellSize(width, child.cellSize.height + deltaHeight);\n          child.position = {\n            x: 0,\n            y: startY + child.cellSize.height / 2,\n          };\n          startY += child.cellSize.height;\n        }\n      }\n    }\n    this.cellSize = { width, height };\n  }\n  public getCellSize(): Size | undefined {\n    return this.cellSize;\n  }\n  public render(): AnyShape[] {\n    let rendered: AnyShape[];\n    if (this.isField) {\n      const config = this.nodeType.getConfig()!;\n      rendered = [\n        {\n          is: 'rect',\n          x: -this.cellSize.width / 2,\n          y: -this.cellSize.height / 2,\n          width: this.cellSize.width,\n          height: this.cellSize.height,\n          fill: config.style === 'filled' ? config.fillColor : undefined,\n          stroke: config.strokeWidth > 0 ? config.strokeColor : undefined,\n          strokeWidth: config.strokeWidth,\n        },\n      ];\n      if (this.label) {\n        if (!this.contentSize) {\n          throw new Error('Field record should have content size');\n        }\n        rendered.push({\n          is: 'text',\n          x: -this.contentSize.width / 2,\n          y: -this.contentSize.height / 2,\n          text: this.label,\n          fontSize: config.fontSize,\n          fontFamily: config.fontFamily,\n          lineHeight: config.lineHeight,\n          padding: config.padding,\n          align: config.align,\n        });\n      }\n    } else {\n      if (!this.children) {\n        throw new Error('Non-field record should have children');\n      }\n      rendered = this.children.map((x) => {\n        const position = x.position;\n        return {\n          is: 'group',\n          x: position.x,\n          y: position.y,\n          children: x.render(),\n        };\n      });\n    }\n    return rendered;\n  }\n  public getBoundingBoxSize(): Size {\n    const config = this.nodeType.getConfig()!;\n    return {\n      width: this.cellSize.width + config.strokeWidth,\n      height: this.cellSize.height + config.strokeWidth,\n    };\n  }\n  public distanceToBorder(angle: number): number {\n    const borderSize = this.getBoundingBoxSize();\n    return Math.min(\n      Math.abs(borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import NodeType from './NodeType';\nimport Node from '@/graph/node/Node';\nimport recordParser from './recordParser';\nimport RecordCell from './RecordCell';\nimport {NodeData, RecordNodeData, Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface RecordNodeConfig {\n  label: string;\n  direction: 'horizontal' | 'vertical';\n  style: 'solid' | 'filled';\n  fillColor: string;\n  strokeColor: string;\n  strokeWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n  padding: number;\n  align: 'left' | 'center' | 'right';\n}\n\nexport default class RecordNodeType extends NodeType {\n  public static defaultConfig: RecordNodeConfig = {\n    label: '',\n    direction: 'horizontal', // or 'vertical'\n    style: 'solid',\n    fillColor: 'white',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n    padding: 4,\n    align: 'center',\n  };\n  private config!: RecordNodeConfig;\n  private ports!: Map<string, Port>;\n  private root!: RecordCell;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'record') {\n      throw new Error('Expect record shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public getConfig(): RecordNodeConfig | undefined {\n    return this.config;\n  }\n  public getPorts(): Map<string, Port> | undefined {\n    return this.ports;\n  }\n  public updateData(data: RecordNodeData) {\n    const newConfig = Object.assign({}, RecordNodeType.defaultConfig, data);\n    const contentNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.direction !== newConfig.direction ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight ||\n      this.config.padding !== newConfig.padding;\n    const borderNeedsUpdate = contentNeedsUpdate ||\n      this.config.strokeWidth !== newConfig.strokeWidth;\n    this.config = newConfig;\n    if (contentNeedsUpdate) {\n      const record = recordParser(data.label);\n      this.ports = new Map();\n      this.root = new RecordCell(this.parent.root, this.parent, this,\n        record, this.config.direction === 'horizontal');\n      const rootCellSize = this.root.getCellSize()!;\n      this.root.updateCellSize(rootCellSize.width, rootCellSize.height);\n    }\n    if (borderNeedsUpdate) {\n      const rootCellSize = this.root.getCellSize()!;\n      this.borderSize = {\n        width: rootCellSize.width + this.config.strokeWidth,\n        height: rootCellSize.height + this.config.strokeWidth,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    return this.root.render();\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 1) {\n      const founded = this.ports.get(id[0]);\n      if (founded) {\n        return founded;\n      }\n      return null;\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import TableNodeType from '@/graph/node/type/TableNodeType';\nimport Root from '@/graph/Root';\nimport {Element} from 'xml-js';\nimport {Size} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface TableCellConfig {\n  rowSpan: number;\n  columnSpan: number;\n  border: number;\n  backgroundColor: string;\n}\n\nexport default class TableCell extends Port {\n  public rowOffset!: number;\n  public columnOffset!: number;\n  public contentSize!: Size;\n  public cellSize!: Size;\n  private readonly nodeType: TableNodeType;\n  private config!: TableCellConfig;\n  private port?: string;\n  private label!: string;\n  private textSize!: Size;\n  constructor(root: Root, parent: Port, nodeType: TableNodeType, data: any) {\n     super(root, parent);\n     this.nodeType = nodeType;\n     this.updateData(data);\n  }\n  public updateData(data: any) {\n    this.config = {\n      rowSpan: 1,\n      columnSpan: 1,\n      border: this.nodeType.getTableConfig()!.cellBorder,\n      backgroundColor: 'white',\n    };\n    if (data.attributes) {\n      for (const attribute of Object.keys(data.attributes)) {\n        const value = data.attributes[attribute];\n        switch (attribute.toLowerCase()) {\n          case 'rowspan':\n            this.config.rowSpan = parseInt(value, 10);\n            break;\n          case 'colspan':\n            this.config.columnSpan = parseInt(value, 10);\n            break;\n          case 'border':\n            this.config.border = parseInt(value, 10);\n            break;\n          case 'bgcolor':\n            this.config.backgroundColor = value;\n            break;\n          case 'port':\n            this.port = value;\n            break;\n          default:\n            throw new Error('Unknown attribute for table cell');\n        }\n      }\n    }\n    function getText(element: Element): string {\n      switch (element.type) {\n        case 'text':\n          if (typeof element.text === 'string') {\n            return element.text;\n          }\n          return '';\n        case 'element':\n          if (element.name && element.name.toLowerCase() === 'br') {\n            return '\\n';\n          }\n          if (element.elements) {\n            return element.elements.map(getText).join('');\n          } else {\n            return '';\n          }\n        default:\n          throw new Error('Unknown element type');\n      }\n    }\n    this.label = getText(data);\n    const parentConfig = this.nodeType.getConfig()!;\n    const tableConfig = this.nodeType.getTableConfig()!;\n    const ctx = this.root.ctx;\n    ctx.font = `${parentConfig.fontSize}px ${parentConfig.fontFamily}`;\n    const lines = this.label ? this.label.split('\\n') : [];\n    this.textSize = {\n      width: Math.max(...lines.map((x) => ctx.measureText(x).width), 0),\n      height: lines.length * parentConfig.fontSize * parentConfig.lineHeight,\n    };\n    this.contentSize = {\n      width: this.textSize.width + 2 * tableConfig.cellPadding,\n      height: this.textSize.height + 2 * tableConfig.cellPadding,\n    };\n    this.cellSize = {\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n    };\n    this.rowOffset = 0;\n    this.columnOffset = 0;\n  }\n  public render(): AnyShape {\n    const rect: AnyShape = {\n      is: 'rect',\n      x: -this.cellSize!.width / 2,\n      y: -this.cellSize!.height / 2,\n      width: this.cellSize!.width,\n      height: this.cellSize!.height,\n      fill: this.config!.backgroundColor,\n      stroke: this.config!.border > 0 ? 'black' : undefined,\n      strokeWidth: this.config!.border,\n    };\n    const rendered: AnyShape[] = [rect];\n    if (this.label) {\n      const parentConfig = this.nodeType.getConfig()!;\n      const text: AnyShape = {\n        is: 'text',\n        x: -this.contentSize!.width / 2,\n        y: -this.contentSize!.height / 2,\n        text: this.label,\n        fontSize: parentConfig.fontSize,\n        fontFamily: parentConfig.fontFamily,\n        lineHeight: parentConfig.lineHeight,\n        padding: this.nodeType.getTableConfig()!.cellPadding,\n        align: 'center',\n      };\n      rendered.push(text);\n    }\n    return {\n      is: 'group',\n      x: this.position.x,\n      y: this.position.y,\n      children: rendered,\n    };\n  }\n  public getConfig(): TableCellConfig | undefined {\n    return this.config;\n  }\n  public getPort(): string | undefined {\n    return this.port;\n  }\n  public getBoundingBoxSize() {\n    return {\n      width: this.cellSize!.width + this.config!.border,\n      height: this.cellSize!.height + this.config!.border,\n    };\n  }\n  public distanceToBorder(angle: number) {\n    const borderSize = this.getBoundingBoxSize();\n    return Math.min(\n      Math.abs(borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import convert, {Element} from 'xml-js';\nimport NodeType from './NodeType';\nimport TableCell from './TableCell';\nimport Node from '@/graph/node/Node';\nimport {NodeData, Size, TableNodeData} from '@/graph/base/dataInput';\nimport Port from '@/graph/base/Port';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\ninterface TableNodeConfig {\n  label: string;\n  fontSize: number;\n  fontFamily: string;\n  lineHeight: number;\n}\n\ninterface TableConfig {\n  border: number;\n  cellBorder: number;\n  cellSpacing: number;\n  cellPadding: number;\n}\n\nexport default class TableNodeType extends NodeType {\n  public static defaultConfig: TableNodeConfig = {\n    label: '',\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    lineHeight: 1.2,\n  };\n  private config!: TableNodeConfig;\n  private tableConfig!: TableConfig;\n  private table!: TableCell[][];\n  private ports!: Map<string, Port>;\n  private contentSize!: Size;\n  private borderSize!: Size;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'table') {\n      throw new Error('Expect record shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public updateData(data: TableNodeData) {\n    const newConfig = Object.assign({}, TableNodeType.defaultConfig, data);\n    const layoutNeedsUpdate = !this.config ||\n      this.config.label !== newConfig.label ||\n      this.config.fontSize !== newConfig.fontSize ||\n      this.config.fontFamily !== newConfig.fontFamily ||\n      this.config.lineHeight !== newConfig.lineHeight;\n    this.config = newConfig;\n    if (layoutNeedsUpdate) {\n      const jsonObj = convert.xml2js(this.config.label) as Element;\n      if (!jsonObj.elements || !jsonObj.elements[0] ||\n          !jsonObj.elements[0].name ||\n          jsonObj.elements[0].name.toLowerCase() !== 'table') {\n        throw new Error('Expect table element');\n      }\n      const tableElement = jsonObj.elements[0];\n      this.tableConfig = {\n        border: 0,\n        cellBorder: 1,\n        cellSpacing: 0,\n        cellPadding: 4,\n      };\n      if (tableElement.attributes) {\n        for (const attribute of Object.keys(tableElement.attributes)) {\n          const value = tableElement.attributes[attribute] as string;\n          switch (attribute.toLowerCase()) {\n            case 'border':\n              this.tableConfig.border = parseInt(value, 10);\n              break;\n            case 'cellborder':\n              this.tableConfig.cellBorder = parseInt(value, 10);\n              break;\n            case 'cellspacing':\n              this.tableConfig.cellSpacing = parseInt(value, 10);\n              break;\n            case 'cellpadding':\n              this.tableConfig.cellPadding = parseInt(value, 10);\n              break;\n            default:\n              throw new Error('Unknown attribute for table');\n          }\n        }\n      }\n      // Parse table and get numbers of rows and columns\n      this.table = [];\n      this.ports = new Map();\n      let rows = 0;\n      let columns = 0;\n      let firstRow = true;\n      if (tableElement.elements) {\n        for (const tr of tableElement.elements) {\n          if (!tr.name || tr.name.toLowerCase() !== 'tr') {\n            throw new Error('Expect tr element');\n          }\n          const row = [];\n          if (tr.elements) {\n            for (const td of tr.elements) {\n              if (!td.name || td.name.toLowerCase() !== 'td') {\n                throw new Error('Expect td element');\n              }\n              const cell = new TableCell(this.parent.root, this.parent,\n                this, td);\n              const port = cell.getPort();\n              if (port) {\n                this.ports.set(port, cell);\n              }\n              if (firstRow) {\n                columns += cell.getConfig()!.columnSpan;\n              }\n              row.push(cell);\n            }\n          }\n          ++rows;\n          if (firstRow) {\n            firstRow = false;\n          }\n          this.table.push(row);\n        }\n      }\n      // Create empty cell size table\n      const cellSizes = [];\n      for (let i = 0; i < rows; ++i) {\n        cellSizes.push(Array(columns).fill(null));\n      }\n      // Fill size table with minimum required size\n      for (let rowOffset = 0; rowOffset < rows; ++rowOffset) {\n        let columnOffset = 0;\n        for (const cell of this.table[rowOffset]) {\n          while (columnOffset < columns && cellSizes[rowOffset][columnOffset]) {\n            ++columnOffset;\n          }\n          cell.rowOffset = rowOffset;\n          cell.columnOffset = columnOffset;\n          const {rowSpan, columnSpan} = cell.getConfig()!;\n          const cellHeight = (cell.contentSize.height -\n            (rowSpan - 1) * this.tableConfig.cellSpacing) / rowSpan;\n          const cellWidth = (cell.contentSize.width -\n            (columnSpan - 1) * this.tableConfig.cellSpacing) / columnSpan;\n          for (let i = 0; i < rowSpan; ++i) {\n            for (let j = 0; j < columnSpan; ++j) {\n              cellSizes[rowOffset + i][columnOffset + j] = {\n                width: cellWidth,\n                height: cellHeight,\n              };\n            }\n          }\n          columnOffset += columnSpan;\n        }\n      }\n      // Get height of rows and width of columns\n      const rowHeight = [];\n      const columnWidth = [];\n      for (let i = 0; i < rows; ++i) {\n        let max = -Infinity;\n        for (let j = 0; j < columns; ++j) {\n          if (cellSizes[i][j].height > max) {\n            max = cellSizes[i][j].height;\n          }\n        }\n        rowHeight.push(max);\n      }\n      for (let j = 0; j < columns; ++j) {\n        let max = -Infinity;\n        for (let i = 0; i < rows; ++i) {\n          if (cellSizes[i][j].width > max) {\n            max = cellSizes[i][j].width;\n          }\n        }\n        columnWidth.push(max);\n      }\n      // Get accumulated height and width\n      const accRowHeight = [0];\n      const accColumnWidth = [0];\n      for (let i = 0; i < rows; ++i) {\n        accRowHeight.push(accRowHeight[i] + rowHeight[i] +\n          this.tableConfig.cellSpacing);\n      }\n      for (let i = 0; i < columns; ++i) {\n        accColumnWidth.push(accColumnWidth[i] + columnWidth[i] +\n          this.tableConfig.cellSpacing);\n      }\n      this.contentSize = {\n        width: accColumnWidth[accColumnWidth.length - 1] -\n          this.tableConfig.cellSpacing,\n        height: accRowHeight[accRowHeight.length - 1] -\n          this.tableConfig.cellSpacing,\n      };\n      // Set size and position to cells\n      for (const row of this.table) {\n        for (const cell of row) {\n          const {rowSpan, columnSpan} = cell.getConfig()!;\n          const {rowOffset, columnOffset} = cell;\n          const upperLeftX = accColumnWidth[columnOffset];\n          const upperLeftY = accRowHeight[rowOffset];\n          const width = accColumnWidth[columnOffset + columnSpan] -\n            upperLeftX - this.tableConfig.cellSpacing;\n          const height = accRowHeight[rowOffset + rowSpan] -\n            upperLeftY - this.tableConfig.cellSpacing;\n          cell.position = {\n            x: upperLeftX + width / 2 - this.contentSize.width / 2,\n            y: upperLeftY + height / 2 - this.contentSize.height / 2,\n          };\n          cell.cellSize = { width, height };\n        }\n      }\n      this.borderSize = {\n        width: this.contentSize.width + this.tableConfig.border +\n          2 * this.tableConfig.cellSpacing,\n        height: this.contentSize.height + this.tableConfig.border +\n          2 * this.tableConfig.cellSpacing,\n      };\n    }\n  }\n  public render(): AnyShape[] {\n    const rendered: AnyShape[] = [];\n    rendered.push({\n      is: 'rect',\n      x: -this.contentSize.width / 2 - this.tableConfig.cellSpacing,\n      y: -this.contentSize.height / 2 - this.tableConfig.cellSpacing,\n      width: this.contentSize.width + 2 * this.tableConfig.cellSpacing,\n      height: this.contentSize.height + 2 * this.tableConfig.cellSpacing,\n      fill: 'white',\n      stroke: this.tableConfig.border > 0 ? 'black' : undefined,\n      strokeWidth: this.tableConfig.border,\n    });\n    for (const row of this.table) {\n      for (const cell of row) {\n        rendered.push(cell.render());\n      }\n    }\n    return rendered;\n  }\n  public getConfig(): TableNodeConfig | undefined {\n    return this.config;\n  }\n  public getTableConfig(): TableConfig | undefined {\n    return this.tableConfig;\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 1) {\n      const founded = this.ports.get(id[0]);\n      if (founded) {\n        return founded;\n      }\n      return null;\n    }\n    return null;\n  }\n  public getBoundingBoxSize() {\n    return this.borderSize;\n  }\n  public distanceToBorder(angle: number) {\n    return Math.min(\n      Math.abs(this.borderSize.width / 2 / Math.cos(angle)),\n      Math.abs(this.borderSize.height / 2 / Math.sin(angle)),\n    );\n  }\n}\n","import Node from '@/graph/node/Node';\nimport {NodeData, XdotNodeData} from '@/graph/base/dataInput';\nimport NodeType from '@/graph/node/type/NodeType';\nimport {XdotShape} from '@/graph/base/dataXdot';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Port from '@/graph/base/Port';\nimport {selectedBoundingBoxPen} from '@/graph/palette';\n\nexport default class XdotNodeType extends NodeType {\n  private shapes!: XdotShape[];\n  private boundingBox: [number, number, number, number] | undefined;\n  private selected!: boolean;\n  constructor(parent: Node, data: NodeData) {\n    if (data.shape !== 'xdot') {\n      throw new Error('Expect xdot shape');\n    }\n    super(parent);\n    this.updateData(data);\n  }\n  public findPort(id: string[]): Port | null {\n    return this.parent;\n  }\n  public updateData(data: XdotNodeData): void {\n    this.shapes = data.shapes ? ([] as XdotShape[]).concat(\n      ...Object.keys(data.shapes).map((x) => data.shapes![x])) : [];\n    this.boundingBox = data.boundingBox;\n    this.selected = false;\n  }\n  public render(): AnyShape[] {\n    const shapes = this.shapes.map(\n      (x) => Object.assign({}, x, {\n        pen: this.parent.root.applyHighlighted(x.pen, this.parent.highlighted),\n      }));\n    if (this.selected && this.boundingBox) {\n      return shapes.concat({\n        is: 'xdot',\n        type: 'polygon',\n        pen: selectedBoundingBoxPen,\n        points: [\n          [this.boundingBox[0], this.boundingBox[1]],\n          [this.boundingBox[2], this.boundingBox[1]],\n          [this.boundingBox[2], this.boundingBox[3]],\n          [this.boundingBox[0], this.boundingBox[3]],\n        ],\n        filled: false,\n      });\n    } else {\n      return shapes;\n    }\n  }\n  public onSelect(select: boolean): boolean {\n    this.selected = select;\n    return !!this.boundingBox;\n  }\n}\n","import BoxNodeType from '@/graph/node/type/BoxNodeType';\nimport NodeType from '@/graph/node/type/NodeType';\nimport {NodeData} from '@/graph/base/dataInput';\nimport Node from '@/graph/node/Node';\nimport RecordNodeType from '@/graph/node/type/RecordNodeType';\nimport TableNodeType from '@/graph/node/type/TableNodeType';\nimport XdotNodeType from '@/graph/node/type/XdotNodeType';\n\nexport default function nodeTypeFactory(data: NodeData)\n    : new (parent: Node, data: NodeData) => NodeType {\n  switch (data.shape) {\n    case 'table':\n      return TableNodeType;\n    case 'record':\n      return RecordNodeType;\n    case 'xdot':\n      return XdotNodeType;\n    default:\n      data.shape = 'box';\n      return BoxNodeType;\n  }\n}\n","import {NodeData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport nodeTypeFactory from '@/graph/node/type/nodeTypeFactory';\nimport NodeType from '@/graph/node/type/NodeType';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Port from '@/graph/base/Port';\nimport Positioned from '@/graph/base/Positioned';\nimport Graph from '@/graph/graph/Graph';\nimport {AnyShape} from '@/graph/base/dataOutput';\nimport Edge from '@/graph/edge/Edge';\n\nexport default class Node extends Port implements Renderable {\n  public static getId(data: NodeData) {\n    if (!data.id) {\n      throw new Error('Missing id field for node');\n    }\n    return data.id;\n  }\n  public readonly graph: Graph | null;\n  public depth!: number;\n  public fullId!: string;\n  public highlighted!: boolean;\n  public fromEdges!: Set<Edge>;\n  public toEdges!: Set<Edge>;\n  private nodeType!: NodeType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'node') {\n      throw new Error('Expect node type');\n    }\n    super(root, parent);\n    this.graph = graph;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: NodeData, parentData: ParentData | null) {\n    this.id = Node.getId(data);\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    this.highlighted = false;\n    this.fromEdges = new Set();\n    this.toEdges = new Set();\n    const typeClass = nodeTypeFactory(data);\n    if (!this.nodeType || this.nodeType.constructor !== typeClass) {\n      this.nodeType = new typeClass(this, data);\n    } else {\n      this.nodeType.updateData(data);\n    }\n  }\n  public render(): AnyShape {\n    return {\n      is: 'group',\n      draggable: true,\n      id: this.fullId,\n      x: this.position.x,\n      y: this.position.y,\n      children: this.nodeType.render(),\n    };\n  }\n  public findPort(id: string[]): Port | null {\n    if (id.length === 0) {\n      return this;\n    }\n    return this.nodeType.findPort(id);\n  }\n  public getBoundingBoxSize() {\n    return this.nodeType.getBoundingBoxSize();\n  }\n  public distanceToBorder(angle: number) {\n    return this.nodeType.distanceToBorder(angle);\n  }\n  public onSelect(select: boolean): boolean {\n    return this.nodeType.onSelect(select);\n  }\n}\n","import {EdgeData, RenderableData} from '@/graph/base/dataInput';\nimport Root from '@/graph/Root';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\nimport Graph from '@/graph/graph/Graph';\nimport EdgeType from '@/graph/edge/type/EdgeType';\nimport edgeTypeFactory from '@/graph/edge/type/edgeTypeFactory';\nimport Port from '@/graph/base/Port';\nimport Node from '@/graph/node/Node';\n\nexport default class Edge implements Renderable {\n  public static getId(data: EdgeData) {\n    return data.id || `${data.from}-${data.to}`;\n  }\n  private static findParentNodeOrGraph(node: Positioned | null)\n    : Node | Graph | null {\n    while (node && !(node instanceof Graph || node instanceof Node)) {\n      node = node.parent;\n    }\n    return node;\n  }\n  public from!: string;\n  public to!: string;\n  public depth!: number;\n  public fullId!: string;\n  public highlighted!: boolean;\n  public readonly root: Root;\n  public readonly graph: Graph | null;\n  public readonly parent: Positioned | null;\n  public id!: string;\n  public fromPort!: Port;\n  public toPort!: Port;\n  public fromNodeOrGraph!: Node | Graph;\n  public toNodeOrGraph!: Node | Graph;\n  private edgeType!: EdgeType;\n  constructor(root: Root,\n              graph: Graph | null,\n              parent: Positioned | null,\n              data: RenderableData,\n              parentData: ParentData | null) {\n    if (data.type !== 'edge') {\n      throw new Error('Expect edge type');\n    }\n    this.root = root;\n    this.graph = graph;\n    this.parent = parent;\n    this.updateData(data, parentData);\n  }\n  public updateData(data: EdgeData, parentData: ParentData | null) {\n    this.id = Edge.getId(data);\n    this.from = data.from;\n    this.to = data.to;\n    this.depth = parentData ? parentData.depth + 1 : 0;\n    this.fullId = parentData ? `${parentData.parentId}:${this.id}` : this.id;\n    if (!this.graph) {\n      throw new Error('Top level edge cannot be rendered');\n    }\n    this.highlighted = false;\n    const fromPort = this.graph.findPort(this.from.split(':'));\n    const toPort = this.graph.findPort(this.to.split(':'));\n    if (!fromPort || !toPort) {\n      throw new Error(`Unknown start or end port ${this.from}-${this.to} for edge`);\n    }\n    this.fromPort = fromPort;\n    this.toPort = toPort;\n    if (this.fromNodeOrGraph) {\n      this.fromNodeOrGraph.fromEdges.delete(this);\n    }\n    if (this.toNodeOrGraph) {\n      this.toNodeOrGraph.toEdges.delete(this);\n    }\n    const fromNodeOrGraph = Edge.findParentNodeOrGraph(fromPort);\n    const toNodeOrGraph = Edge.findParentNodeOrGraph(toPort);\n    if (!fromNodeOrGraph || !toNodeOrGraph) {\n      throw new Error('Unknown start or end node for edge');\n    }\n    fromNodeOrGraph.fromEdges.add(this);\n    toNodeOrGraph.toEdges.add(this);\n    this.fromNodeOrGraph = fromNodeOrGraph;\n    this.toNodeOrGraph = toNodeOrGraph;\n    const typeClass = edgeTypeFactory(data);\n    if (!this.edgeType || this.edgeType.constructor !== typeClass) {\n      this.edgeType = new typeClass(this, data);\n    } else {\n      this.edgeType.updateData(data);\n    }\n  }\n  public fullyUpdatePosition() {\n    this.edgeType.fullyUpdatePosition();\n  }\n  public updatePosition() {\n    this.edgeType.updatePosition();\n  }\n  public getControlPoints(): Positioned[] {\n    return this.edgeType.getControlPoints();\n  }\n  public render() {\n    return this.edgeType.render();\n  }\n}\n","import Root from '@/graph/Root';\nimport Edge from '@/graph/edge/Edge';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\nimport {RenderableData} from '@/graph/base/dataInput';\nimport Renderable, {ParentData} from '@/graph/base/Renderable';\nimport Positioned from '@/graph/base/Positioned';\n\ninterface RenderableConstructor {\n  new (root: Root,\n       graph: Graph | null,\n       parent: Positioned | null,\n       data: RenderableData,\n       parentData: ParentData | null): Renderable;\n  getId(data: RenderableData): string;\n}\n\nexport default function renderableFactory(data: RenderableData)\n    : RenderableConstructor {\n  switch (data.type) {\n    case 'node':\n      return Node;\n    case 'edge':\n      return Edge;\n    case 'graph':\n      return Graph;\n    default:\n      throw new Error('Unknown renderable object');\n  }\n}\n","import Root from '@/graph/Root';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\nimport Edge from '@/graph/edge/Edge';\n\nexport type HighlightMode = 'no' | 'directInput' | 'directOutput'\n  | 'allInput' | 'allOutput';\n\nconst highlightSeeker: {\n  [mode: string]: (root: Root) => Set<Graph | Node | Edge>;\n} = {\n  no(root: Root) {\n    return new Set();\n  },\n  directInput(root: Root) {\n    const result = new Set<Graph | Node | Edge>();\n    for (const item of root.selected) {\n      const port = root.findPort(item);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      if (port instanceof Graph || port instanceof Node) {\n        result.add(port);\n        for (const edge of port.toEdges) {\n          result.add(edge);\n          result.add(edge.fromNodeOrGraph);\n        }\n      }\n    }\n    return result;\n  },\n  directOutput(root: Root) {\n    const result = new Set<Graph | Node | Edge>();\n    for (const item of root.selected) {\n      const port = root.findPort(item);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      if (port instanceof Graph || port instanceof Node) {\n        result.add(port);\n        for (const edge of port.fromEdges) {\n          result.add(edge);\n          result.add(edge.toNodeOrGraph);\n        }\n      }\n    }\n    return result;\n  },\n  allInput(root: Root) {\n    const result = new Set<Graph | Node | Edge>();\n    function traversal(node: Graph | Node) {\n      result.add(node);\n      for (const edge of node.toEdges) {\n        result.add(edge);\n        if (!result.has(edge.fromNodeOrGraph)) {\n          traversal(edge.fromNodeOrGraph);\n        }\n      }\n    }\n    for (const item of root.selected) {\n      const port = root.findPort(item);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      if (port instanceof Graph || port instanceof Node) {\n        traversal(port);\n      }\n    }\n    return result;\n  },\n  allOutput(root: Root) {\n    const result = new Set<Graph | Node | Edge>();\n    function traversal(node: Graph | Node) {\n      result.add(node);\n      for (const edge of node.fromEdges) {\n        result.add(edge);\n        if (!result.has(edge.toNodeOrGraph)) {\n          traversal(edge.toNodeOrGraph);\n        }\n      }\n    }\n    for (const item of root.selected) {\n      const port = root.findPort(item);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      if (port instanceof Graph || port instanceof Node) {\n        traversal(port);\n      }\n    }\n    return result;\n  },\n};\n\nexport default highlightSeeker;\n","import EventEmitter from '@/graph/base/EventEmitter';\nimport { RenderableData } from '@/graph/base/dataInput';\nimport renderableFactory from '@/graph/base/renderableFactory';\nimport Renderable from '@/graph/base/Renderable';\nimport Port from '@/graph/base/Port';\nimport Graph from '@/graph/graph/Graph';\nimport Node from '@/graph/node/Node';\nimport Edge from '@/graph/edge/Edge';\nimport highlightSeeker, {HighlightMode} from '@/graph/highlightSeeker';\nimport {add} from 'lodash-es';\nimport {XdotPen} from '@/graph/base/dataXdot';\n\nexport default class Root extends EventEmitter {\n  public ctx: CanvasRenderingContext2D;\n  public child: (Renderable & Port) | null;\n  public selected: Set<string>;\n  public highlightMode: HighlightMode;\n  public highlighted: Set<Graph | Node | Edge>;\n  private stepTimer: number;\n  private fixed: Set<string>;\n  public constructor() {\n    super();\n    this.ctx = document.createElement('canvas').getContext('2d')!;\n    this.child = null;\n    this.stepTimer = setInterval(() => {\n      if (this.child instanceof Graph) {\n        if (this.child.step()) {\n          this.informRender();\n        }\n      }\n    }, 1000 / 60);\n    this.fixed = new Set();\n    this.selected = new Set();\n    this.highlightMode = 'no';\n    this.highlighted = new Set();\n  }\n  public findPort(id: string) {\n    const idArray = id.split(':');\n    if (this.child) {\n      if (this.child.id !== idArray[0]) {\n        return null;\n      }\n      return this.child.findPort(idArray.slice(1));\n    }\n    return null;\n  }\n  public setFixed(fixed: string[]) {\n    const newFixed = new Set(fixed);\n    const removed = [...this.fixed].filter((x) => !newFixed.has(x));\n    for (const item of removed) {\n      const port = this.findPort(item);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      port.fixed = false;\n    }\n    const added = [...newFixed].filter((x) => !this.fixed.has(x));\n    for (const item of added) {\n      const port = this.findPort(item);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      port.fixed = true;\n    }\n    this.fixed = newFixed;\n  }\n  public setSelected(selected: string[]) {\n    const newSelected = new Set(selected);\n    let refresh = false;\n    const removed = [...this.selected].filter((x) => !newSelected.has(x));\n    for (const item of removed) {\n      const port = this.findPort(item);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      refresh = port.onSelect(false) || refresh;\n    }\n    const added = [...newSelected].filter((x) => !this.selected.has(x));\n    for (const item of added) {\n      const port = this.findPort(item);\n      if (port === null) {\n        throw new Error('Cannot find the port');\n      }\n      refresh = port.onSelect(true) || refresh;\n    }\n    this.selected = newSelected;\n    if (this.updateHighlighted() || refresh) {\n      this.informRender();\n    }\n  }\n  public setHighlightMode(mode: HighlightMode) {\n    const refresh = (this.highlightMode === 'no' || mode === 'no') &&\n      this.highlightMode !== mode;\n    this.highlightMode = mode;\n    if (this.updateHighlighted() || refresh) {\n      this.informRender();\n    }\n  }\n  public updateHighlighted(): boolean {\n    const newHighlighted = highlightSeeker[this.highlightMode](this);\n    const removed = [...this.highlighted].filter(\n      (x) => !newHighlighted.has(x));\n    for (const item of removed) {\n      item.highlighted = false;\n    }\n    const added = [...newHighlighted].filter(\n      (x) => !this.highlighted.has(x));\n    for (const item of added) {\n      item.highlighted = true;\n    }\n    this.highlighted = newHighlighted;\n    return !!(removed.length || added.length);\n  }\n  public applyHighlighted(pen: XdotPen, highlighted: boolean): XdotPen {\n    if (this.highlightMode === 'no') {\n      return pen;\n    }\n    if (!highlighted) {\n      const newPen = Object.assign({}, pen);\n      newPen.color = [\n        newPen.color[0],\n        newPen.color[1],\n        newPen.color[2],\n        0.2,\n      ];\n      newPen.fillcolor = [\n        newPen.fillcolor[0],\n        newPen.fillcolor[1],\n        newPen.fillcolor[2],\n        0.2,\n      ];\n      return newPen;\n    } else {\n      return pen;\n    }\n  }\n  public movePort(id: string,\n                  delta: { deltaX: number, deltaY: number }) {\n    const port = this.findPort(id);\n    if (port === null) {\n      throw new Error('Cannot find the port');\n    }\n    if (!(port instanceof Graph || port instanceof Node)) {\n      throw new Error('Wrong type of port');\n    }\n    port.position.x += delta.deltaX;\n    port.position.y += delta.deltaY;\n    for (const edge of [...port.fromEdges, ...port.toEdges]) {\n      edge.updatePosition();\n    }\n    this.informRender();\n  }\n  public updateData(data: RenderableData) {\n    const newClass = renderableFactory(data);\n    if (!this.child || this.child.constructor !== newClass) {\n      const renderable = new newClass(this, null, null, data, null);\n      // noinspection SuspiciousTypeOfGuard\n      if (!(renderable instanceof Port)) {\n        throw new Error('Root element must be renderable port');\n      }\n      this.child = renderable;\n    } else {\n      this.child.updateData(data, null);\n    }\n    this.informRender();\n  }\n  public fullyUpdateData(data: RenderableData) {\n    const renderable = new (renderableFactory(data))(\n      this, null, null, data, null);\n    // noinspection SuspiciousTypeOfGuard\n    if (!(renderable instanceof Port)) {\n      throw new Error('Root element must be renderable port');\n    }\n    this.child = renderable;\n    this.informRender();\n  }\n  public informRender() {\n    if (this.child) {\n      const data = [this.child.render()];\n      Object.freeze(data);\n      this.emit('render', data);\n    }\n  }\n}\n\nexport const globalGraphRoot = new Root();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({ width: _vm.width, height: _vm.height, position: 'relative' })},[_c('canvas',{ref:\"hitCanvas\",staticStyle:{\"position\":\"absolute\",\"display\":\"none\"}}),_c('canvas',_vm._g({ref:\"canvas\",staticStyle:{\"position\":\"absolute\"}},_vm.$listeners))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Provide, Prop, Watch} from 'vue-property-decorator';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\n@Component\nexport default class MyCanvas extends Vue {\n  @Prop({ type: Number, required: true }) public readonly width!: number;\n  @Prop({ type: Number, required: true }) public readonly height!: number;\n  @Prop(Object) public readonly data: AnyShape | undefined;\n  private context: CanvasRenderingContext2D | null = null;\n  private hitContext: CanvasRenderingContext2D | null = null;\n  private hitColorMap: { [color: string]: string } = {};\n  private hitIdMap: { [id: string]: string } = {};\n  public mounted() {\n    this.context = (this.$refs.canvas as HTMLCanvasElement)\n      .getContext('2d');\n    (this.$refs.canvas as HTMLCanvasElement).width = this.width;\n    (this.$refs.canvas as HTMLCanvasElement).height = this.height;\n    this.hitContext = (this.$refs.hitCanvas as HTMLCanvasElement)\n      .getContext('2d');\n    (this.$refs.hitCanvas as HTMLCanvasElement).width = this.width;\n    (this.$refs.hitCanvas as HTMLCanvasElement).height = this.height;\n  }\n  @Provide()\n  public generateHitColor(id: string): string {\n    if (this.hitIdMap[id]) {\n      return this.hitIdMap[id];\n    }\n    while (true) {\n      const r = Math.round(Math.random() * 255);\n      const g = Math.round(Math.random() * 255);\n      const b = Math.round(Math.random() * 255);\n      const color = `rgb(${r},${g},${b})`;\n      if (!this.hitColorMap[color]) {\n        this.hitColorMap[color] = id;\n        this.hitIdMap[id] = color;\n        return color;\n      }\n    }\n  }\n  public updateCanvas() {\n    if (!this.context || !this.hitContext) {\n      return;\n    }\n    const ctx: CanvasRenderingContext2D = this.context;\n    const hitCtx: CanvasRenderingContext2D = this.hitContext;\n    ctx.clearRect(0, 0, this.width, this.height);\n    hitCtx.clearRect(0, 0, this.width, this.height);\n    this.hitColorMap = {};\n    this.hitIdMap = {};\n    const updateShape = (shape: AnyShape,\n                         draggable: boolean,\n                         draggableId: string) => {\n      const finalDraggable = shape.draggable || draggable;\n      const finalId = shape.id || draggableId;\n      switch (shape.is) {\n        case 'group': {\n          ctx.save();\n          ctx.translate(shape.x || 0, shape.y || 0);\n          ctx.scale(shape.scaleX || 1, shape.scaleY || 1);\n          hitCtx.save();\n          hitCtx.translate(shape.x || 0, shape.y || 0);\n          hitCtx.scale(shape.scaleX || 1, shape.scaleY || 1);\n          if (shape.children) {\n            for (const childShape of shape.children) {\n              updateShape(childShape, shape.draggable || draggable,\n                shape.id || draggableId);\n            }\n          }\n          ctx.restore();\n          hitCtx.restore();\n          break;\n        }\n        case 'rect': {\n          ctx.beginPath();\n          ctx.rect(shape.x || 0, shape.y || 0,\n            shape.width || 0, shape.height || 0);\n          if (shape.fill) {\n            ctx.fillStyle = shape.fill;\n            ctx.fill();\n          }\n          if (shape.stroke) {\n            ctx.lineWidth = shape.strokeWidth || 1;\n            ctx.strokeStyle = shape.stroke;\n            ctx.stroke();\n          }\n          if (finalDraggable && finalId) {\n            const color = this.generateHitColor(finalId);\n            hitCtx.beginPath();\n            hitCtx.rect(shape.x || 0, shape.y || 0,\n              shape.width || 0, shape.height || 0);\n            hitCtx.fillStyle = color;\n            hitCtx.fill();\n            if (shape.stroke) {\n              hitCtx.lineWidth = shape.strokeWidth || 1;\n              hitCtx.strokeStyle = color;\n              hitCtx.stroke();\n            }\n          }\n          break;\n        }\n        case 'text': {\n          const fontSize = shape.fontSize || 12;\n          const lineHeight = shape.lineHeight || 1.2;\n          const padding = shape.padding || 4;\n          ctx.font = `${fontSize}px ${shape.fontFamily || 'sans-serif'}`;\n          const lines = shape.text ? shape.text.split('\\n') : [];\n          const linesWidth = lines.map((x: string) => ctx.measureText(x).width);\n          const width = Math.max(...linesWidth, 0);\n          let posY = (shape.y || 0) + padding;\n          ctx.textBaseline = 'top';\n          ctx.fillStyle = shape.fill || 'black';\n          for (let i = 0; i < lines.length; ++i) {\n            let posX = (shape.x || 0) + padding;\n            if (shape.align === 'left') {\n              // do nothing\n            } else if (shape.align === 'right') {\n              posX += width - linesWidth[i];\n            } else {\n              posX += (width - linesWidth[i]) / 2;\n            }\n            ctx.fillText(lines[i], posX,\n              posY + 0.5 * (lineHeight - 1) * fontSize);\n            posY += lineHeight * fontSize;\n          }\n          break;\n        }\n        case 'line': {\n          const points = shape.points || [];\n          ctx.strokeStyle = shape.stroke || 'black';\n          ctx.lineWidth = shape.strokeWidth || 1;\n          ctx.beginPath();\n          ctx.moveTo(points[0] || 0, points[1] || 0);\n          ctx.lineTo(points[2] || 0, points[3] || 0);\n          ctx.stroke();\n          break;\n        }\n        case 'quadraticLine': {\n          const points = shape.points || [];\n          ctx.strokeStyle = shape.stroke || 'black';\n          ctx.lineWidth = shape.strokeWidth || 1;\n          ctx.beginPath();\n          ctx.moveTo(points[0] || 0, points[1] || 0);\n          ctx.quadraticCurveTo(points[2] || 0, points[3] || 0,\n            points[4] || 0, points[5] || 0);\n          ctx.stroke();\n          break;\n        }\n        case 'pointer': {\n          const x = shape.x || 0;\n          const y = shape.y || 0;\n          const angle = shape.angle || 0;\n          const width = shape.width || 10;\n          const height = shape.height || 15;\n          const middleX = x + height * Math.cos(angle);\n          const middleY = y + height * Math.sin(angle);\n          const deltaX = width / 2 * Math.sin(angle);\n          const deltaY = -width / 2 * Math.cos(angle);\n          ctx.fillStyle = shape.fill || 'black';\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          ctx.lineTo(middleX + deltaX, middleY + deltaY);\n          ctx.lineTo(middleX - deltaX, middleY - deltaY);\n          ctx.closePath();\n          ctx.fill();\n          break;\n        }\n        case 'rectWithWhole': {\n          ctx.beginPath();\n          ctx.moveTo(shape.outerLeft || 0, shape.outerTop || 0);\n          ctx.lineTo(shape.outerRight || 0, shape.outerTop || 0);\n          ctx.lineTo(shape.outerRight || 0, shape.outerBottom || 0);\n          ctx.lineTo(shape.outerLeft || 0, shape.outerBottom || 0);\n          ctx.lineTo(shape.outerLeft || 0, shape.outerTop || 0);\n          ctx.moveTo(shape.innerLeft || 0, shape.innerTop || 0);\n          ctx.lineTo(shape.innerLeft || 0, shape.innerBottom || 0);\n          ctx.lineTo(shape.innerRight || 0, shape.innerBottom || 0);\n          ctx.lineTo(shape.innerRight || 0, shape.innerTop || 0);\n          ctx.lineTo(shape.innerLeft || 0, shape.innerTop || 0);\n          ctx.fillStyle = shape.fill || 'white';\n          ctx.fill();\n          break;\n        }\n        case 'xdot': {\n          switch (shape.type) {\n            case 'text': {\n              ctx.font = `${shape.pen.fontsize}px ${shape.pen.fontname}`;\n              ctx.fillStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                shape.pen.color[3] + ')';\n              ctx.textAlign = shape.centering === -1 ? 'left' :\n                shape.centering === 0 ? 'center' : 'right';\n              ctx.textBaseline = 'alphabetic';\n              ctx.fillText(shape.text, shape.x, shape.y, shape.width);\n              break;\n            }\n            case 'ellipse': {\n              ctx.save();\n              ctx.translate(shape.x, shape.y);\n              ctx.scale(shape.width, shape.height);\n              ctx.beginPath();\n              ctx.moveTo(1.0, 0.0);\n              ctx.arc(0.0, 0.0, 1.0, 0, 2.0 * Math.PI);\n              ctx.restore();\n              if (shape.filled) {\n                ctx.fillStyle = 'rgba(' + shape.pen.fillcolor[0] + ',' +\n                  shape.pen.fillcolor[1] + ',' + shape.pen.fillcolor[2] + ',' +\n                  shape.pen.fillcolor[3] + ')';\n                ctx.fill();\n              } else {\n                ctx.setLineDash(shape.pen.dash);\n                ctx.lineWidth = shape.pen.linewidth;\n                ctx.strokeStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                  shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                  shape.pen.color[3] + ')';\n                ctx.stroke();\n              }\n              if (finalDraggable && finalId) {\n                const color = this.generateHitColor(finalId);\n                hitCtx.save();\n                hitCtx.translate(shape.x, shape.y);\n                hitCtx.scale(shape.width, shape.height);\n                hitCtx.beginPath();\n                hitCtx.moveTo(1.0, 0.0);\n                hitCtx.arc(0.0, 0.0, 1.0, 0, 2.0 * Math.PI);\n                hitCtx.restore();\n                hitCtx.fillStyle = color;\n                hitCtx.fill();\n                if (!shape.filled) {\n                  hitCtx.setLineDash(shape.pen.dash);\n                  hitCtx.lineWidth = shape.pen.linewidth;\n                  hitCtx.strokeStyle = color;\n                  hitCtx.stroke();\n                }\n              }\n              break;\n            }\n            case 'line': {\n              ctx.beginPath();\n              const p0 = shape.points[0];\n              ctx.moveTo(p0[0], p0[1]);\n              for (let i = 1; i < shape.points.length; ++i) {\n                const p = shape.points[i];\n                ctx.lineTo(p[0], p[1]);\n              }\n              ctx.setLineDash(shape.pen.dash);\n              ctx.lineWidth = shape.pen.linewidth;\n              ctx.strokeStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                shape.pen.color[3] + ')';\n              ctx.stroke();\n              if (finalDraggable && finalId) {\n                const color = this.generateHitColor(finalId);\n                hitCtx.beginPath();\n                hitCtx.moveTo(p0[0], p0[1]);\n                for (let i = 1; i < shape.points.length; ++i) {\n                  const p = shape.points[i];\n                  hitCtx.lineTo(p[0], p[1]);\n                }\n                hitCtx.setLineDash(shape.pen.dash);\n                hitCtx.lineWidth = shape.pen.linewidth;\n                hitCtx.strokeStyle = color;\n                hitCtx.stroke();\n              }\n              break;\n            }\n            case 'bezier': {\n              ctx.beginPath();\n              const p0 = shape.points[0];\n              ctx.moveTo(p0[0], p0[1]);\n              for (let i = 1; i < shape.points.length; i += 3) {\n                const [p1, p2, p3] = shape.points.slice(i, i + 3);\n                ctx.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n              }\n              if (shape.filled) {\n                ctx.fillStyle = 'rgba(' + shape.pen.fillcolor[0] + ',' +\n                  shape.pen.fillcolor[1] + ',' + shape.pen.fillcolor[2] + ',' +\n                  shape.pen.fillcolor[3] + ')';\n                ctx.fill();\n              } else {\n                ctx.setLineDash(shape.pen.dash);\n                ctx.lineWidth = shape.pen.linewidth;\n                ctx.strokeStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                  shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                  shape.pen.color[3] + ')';\n                ctx.stroke();\n              }\n              if (finalDraggable && finalId) {\n                const color = this.generateHitColor(finalId);\n                hitCtx.beginPath();\n                hitCtx.moveTo(p0[0], p0[1]);\n                for (let i = 1; i < shape.points.length; i += 3) {\n                  const [p1, p2, p3] = shape.points.slice(i, i + 3);\n                  hitCtx.bezierCurveTo(p1[0], p1[1],\n                    p2[0], p2[1], p3[0], p3[1]);\n                }\n                if (shape.filled) {\n                  hitCtx.fillStyle = color;\n                  hitCtx.fill();\n                } else {\n                  hitCtx.setLineDash(shape.pen.dash);\n                  hitCtx.lineWidth = shape.pen.linewidth;\n                  hitCtx.strokeStyle = color;\n                  hitCtx.stroke();\n                }\n              }\n              break;\n            }\n            case 'polygon': {\n              ctx.beginPath();\n              const p0 = shape.points[shape.points.length - 1];\n              ctx.moveTo(p0[0], p0[1]);\n              for (const p of shape.points) {\n                ctx.lineTo(p[0], p[1]);\n              }\n              ctx.closePath();\n              if (shape.filled) {\n                ctx.fillStyle = 'rgba(' + shape.pen.fillcolor[0] + ',' +\n                  shape.pen.fillcolor[1] + ',' + shape.pen.fillcolor[2] + ',' +\n                  shape.pen.fillcolor[3] + ')';\n                ctx.fill();\n              } else {\n                ctx.setLineDash(shape.pen.dash);\n                ctx.lineWidth = shape.pen.linewidth;\n                ctx.strokeStyle = 'rgba(' + shape.pen.color[0] + ',' +\n                  shape.pen.color[1] + ',' + shape.pen.color[2] + ',' +\n                  shape.pen.color[3] + ')';\n                ctx.stroke();\n              }\n              if (finalDraggable && finalId) {\n                const color = this.generateHitColor(finalId);\n                hitCtx.beginPath();\n                hitCtx.moveTo(p0[0], p0[1]);\n                for (const p of shape.points) {\n                  hitCtx.lineTo(p[0], p[1]);\n                }\n                hitCtx.closePath();\n                hitCtx.fillStyle = color;\n                hitCtx.fill();\n                if (!shape.filled) {\n                  hitCtx.setLineDash(shape.pen.dash);\n                  hitCtx.lineWidth = shape.pen.linewidth;\n                  hitCtx.strokeStyle = color;\n                  hitCtx.stroke();\n                }\n              }\n              break;\n            }\n            case 'image':\n              throw new Error('Image is not supported');\n            default:\n              throw new Error('Unknown type of xdot shape');\n          }\n          break;\n        }\n        default:\n          throw new Error('Unknown shape');\n      }\n    };\n    if (this.data) {\n      ctx.lineCap = 'butt';\n      ctx.lineJoin = 'miter';\n      updateShape(this.data, false, '');\n    }\n  }\n  public getIdFromHitPoint(x: number, y: number): string | undefined {\n    if (this.hitContext) {\n      const pixel = this.hitContext.getImageData(x, y, 1, 1).data;\n      const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\n      return this.hitColorMap[color];\n    }\n  }\n  @Watch('width')\n  public onWidthChanged() {\n    (this.$refs.canvas as HTMLCanvasElement).width = this.width;\n    (this.$refs.hitCanvas as HTMLCanvasElement).width = this.width;\n    this.updateCanvas();\n  }\n  @Watch('height')\n  public onHeightChanged() {\n    (this.$refs.canvas as HTMLCanvasElement).height = this.height;\n    (this.$refs.hitCanvas as HTMLCanvasElement).height = this.height;\n    this.updateCanvas();\n  }\n  @Watch('data')\n  public onDataChanged() {\n    this.updateCanvas();\n  }\n}\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MyCanvas.vue?vue&type=template&id=65200f34&\"\nimport script from \"./MyCanvas.vue?vue&type=script&lang=ts&\"\nexport * from \"./MyCanvas.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\nimport {globalGraphRoot} from '@/graph/Root';\nimport MyCanvas from '@/components/MyCanvas.vue';\nimport Port from '@/graph/base/Port';\n\n@Component({\n  components: {\n    MyCanvas,\n  },\n})\nexport default class Graph extends Vue {\n  @Prop({ type: Number, required: true }) public readonly width!: number;\n  @Prop({ type: Number, required: true }) public readonly height!: number;\n  @Prop({ type: Array, default() { return []; }})\n  public readonly data!: object[];\n  private x = 0;\n  private y = 0;\n  private scale = 1;\n  private size = { width: 0, height: 0 };\n  private draggedId: null | string = null;\n  private mouseDragActive = false;\n  private mouseLastCoords = {\n    x: 0,\n    y: 0,\n  };\n  private moved = false;\n  private maxThumbnailLength = 160;\n  private minThumbnailLength = 100;\n  private thumbnailPadding = 10;\n  private thumbnailMouseDragActive = false;\n  private thumbnailMouseLastCoords = {\n    x: 0,\n    y: 0,\n  };\n  private enableDraggable = true;\n  get stageX() {\n    return this.width / 2 + this.x;\n  }\n  get stageY() {\n    return this.height / 2 + this.y;\n  }\n  public mounted() {\n    this.updateSize();\n  }\n  @Watch('data')\n  public onDataChanged() {\n    this.updateSize();\n  }\n  public updateSize() {\n    // noinspection SuspiciousTypeOfGuard\n    if (globalGraphRoot.child instanceof Port) {\n      this.size = globalGraphRoot.child.getBoundingBoxSize();\n    }\n  }\n  get mainCanvasData() {\n    return {\n      is: 'group',\n      x: this.stageX,\n      y: this.stageY,\n      scaleX: this.scale,\n      scaleY: this.scale,\n      children: this.data,\n    };\n  }\n  get thumbnailCanvasData() {\n    const scale = 1 / this.thumbnailFactor;\n    function deepCopyAndRemoveDraggable(shape: any) {\n      const copy = Object.assign({}, shape);\n      if (copy.draggable) {\n        delete copy.draggable;\n      }\n      if (copy.children) {\n        copy.children = copy.children.map((x: any) =>\n          deepCopyAndRemoveDraggable(x));\n      }\n      return copy;\n    }\n    const data = this.data.map((x: any) => deepCopyAndRemoveDraggable(x));\n    const viewportX = (-this.width / 2 - this.x) / this.scale;\n    const viewportY = (-this.height / 2 - this.y) / this.scale;\n    const viewportWidth = this.width / this.scale;\n    const viewportHeight = this.height / this.scale;\n    data.push({\n      is: 'rectWithWhole',\n      id: 'mask',\n      fill: 'rgba(0,0,0,0.2)',\n      outerLeft: -this.thumbnailWidth * this.thumbnailFactor / 2,\n      outerRight: this.thumbnailWidth * this.thumbnailFactor / 2,\n      outerTop: -this.thumbnailHeight * this.thumbnailFactor / 2,\n      outerBottom: this.thumbnailHeight * this.thumbnailFactor / 2,\n      innerLeft: viewportX,\n      innerRight: viewportX + viewportWidth,\n      innerTop: viewportY,\n      innerBottom: viewportY + viewportHeight,\n    });\n    data.push({\n      is: 'rect',\n      id: 'viewport',\n      draggable: true,\n      x: viewportX,\n      y: viewportY,\n      width: viewportWidth,\n      height: viewportHeight,\n      stroke: '#3eaf7c',\n      strokeWidth: this.thumbnailFactor,\n    });\n    return {\n      is: 'group',\n      x: this.thumbnailWidth / 2,\n      y: this.thumbnailHeight / 2,\n      scaleX: scale,\n      scaleY: scale,\n      children: data,\n    };\n  }\n  get thumbnailFactor() {\n    return Math.max(this.size.width / this.maxThumbnailLength,\n      this.size.height / this.maxThumbnailLength, 1);\n  }\n  get thumbnailWidth() {\n    return Math.max(this.size.width / this.thumbnailFactor,\n      this.minThumbnailLength) + 2 * this.thumbnailPadding;\n  }\n  get thumbnailHeight() {\n    return Math.max(this.size.height / this.thumbnailFactor,\n      this.minThumbnailLength) + 2 * this.thumbnailPadding;\n  }\n  public wheel(e: WheelEvent) {\n    const scaleBy = 1.1;\n    e.preventDefault();\n    const pos = this.translateMouseEvent(e);\n    const mousePointTo = {\n      x: (pos.x - this.stageX) / this.scale,\n      y: (pos.y - this.stageY) / this.scale,\n    };\n    this.scale = e.deltaY < 0 ? this.scale * scaleBy : this.scale / scaleBy;\n    const newPos = {\n      x: -(mousePointTo.x - pos.x / this.scale) *\n        this.scale,\n      y: -(mousePointTo.y - pos.y / this.scale) *\n        this.scale,\n    };\n    this.x = newPos.x - this.width / 2;\n    this.y = newPos.y - this.height / 2;\n  }\n  public translateMouseEvent(e: MouseEvent): {x: number, y: number} {\n    let elementOffsetX = 0;\n    let elementOffsetY = 0;\n    let target = e.currentTarget;\n    while (target) {\n      elementOffsetX += (target as HTMLElement).offsetLeft;\n      elementOffsetY += (target as HTMLElement).offsetTop;\n      target = (target as HTMLElement).offsetParent;\n    }\n    return {\n      x: e.pageX - elementOffsetX,\n      y: e.pageY - elementOffsetY,\n    };\n  }\n  public mousedown(e: MouseEvent) {\n    this.mouseDragActive = true;\n    this.mouseLastCoords = {\n      x: e.pageX,\n      y: e.pageY,\n    };\n    const pos = this.translateMouseEvent(e);\n    const id = (this.$refs.mainCanvas as any).getIdFromHitPoint(pos.x, pos.y);\n    if (id) {\n      if (this.enableDraggable) {\n        this.draggedId = id;\n        globalGraphRoot.setFixed([id]);\n      }\n    }\n    this.moved = false;\n  }\n  public mouseup(e: MouseEvent) {\n    this.mouseDragActive = false;\n    this.draggedId = null;\n    globalGraphRoot.setFixed([]);\n    if (!this.moved) {\n      const pos = this.translateMouseEvent(e);\n      const id = (this.$refs.mainCanvas as any).getIdFromHitPoint(pos.x, pos.y);\n      if (id) {\n        globalGraphRoot.setSelected([id]);\n      } else {\n        globalGraphRoot.setSelected([]);\n      }\n    }\n  }\n  public mousemove(e: MouseEvent) {\n    this.moved = true;\n    if (e.buttons === 0) {\n      this.mouseDragActive = false;\n      // const pos = this.translateMouseEvent(e);\n      // const id = (this.$refs.mainCanvas as any).getIdFromHitPoint(pos.x, pos.y);\n      // tslint:disable-next-line:no-console\n      // console.log(id);\n    }\n    if (this.mouseDragActive || this.draggedId) {\n      const newCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      const deltaX = newCoords.x - this.mouseLastCoords.x;\n      const deltaY = newCoords.y - this.mouseLastCoords.y;\n      if (this.draggedId) {\n        globalGraphRoot.movePort(this.draggedId, {\n          deltaX: deltaX / this.scale,\n          deltaY: deltaY / this.scale,\n        });\n      } else {\n        this.x += deltaX;\n        this.y += deltaY;\n      }\n      this.mouseLastCoords = newCoords;\n    }\n  }\n  public thumbnailMousedown(e: MouseEvent) {\n    const pos = this.translateMouseEvent(e);\n    const id = (this.$refs.thumbnailCanvas as any)\n      .getIdFromHitPoint(pos.x, pos.y);\n    if (id === 'viewport') {\n      this.thumbnailMouseDragActive = true;\n      this.thumbnailMouseLastCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n    }\n  }\n  public thumbnailMouseup() {\n    this.thumbnailMouseDragActive = false;\n  }\n  public thumbnailMousemove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.thumbnailMouseDragActive = false;\n    }\n    if (this.thumbnailMouseDragActive) {\n      const newCoords = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      const oldCoords = this.thumbnailMouseLastCoords;\n      const scale = this.thumbnailFactor * this.scale;\n      this.x -= (newCoords.x - oldCoords.x) * scale;\n      this.y -= (newCoords.y - oldCoords.y) * scale;\n      this.thumbnailMouseLastCoords = newCoords;\n    }\n  }\n}\n","import BaseScanner from '@/graph/dot/BaseScanner';\n\nexport enum TokenEnum {\n  EOF = -1,\n  SKIP = -2,\n\n  ID = 0,\n  STR_ID = 1,\n  HTML_ID = 2,\n  EDGE_OP = 3,\n\n  LSQUARE = 4,\n  RSQUARE = 5,\n  LCURLY = 6,\n  RCURLY = 7,\n  COMMA = 8,\n  COLON = 9,\n  SEMI = 10,\n  EQUAL = 11,\n  PLUS = 12,\n\n  STRICT = 13,\n  GRAPH = 14,\n  DIGRAPH = 15,\n  NODE = 16,\n  EDGE = 17,\n  SUBGRAPH = 18,\n}\n\nexport default class DotScanner extends BaseScanner<TokenEnum> {\n  private static tokens: Array<[TokenEnum, string, boolean]> = [\n    [TokenEnum.SKIP, '[ \\\\t\\\\f\\\\r\\\\n\\\\v]+|//[^\\\\r\\\\n]*|/\\\\*(?:.|\\\\n)*?\\\\*/|#[^\\\\r\\\\n]*',\n      false],\n    [TokenEnum.ID, '[a-zA-Z_\\\\x80-\\\\xff][a-zA-Z0-9_\\\\x80-\\\\xff]*', true],\n    [TokenEnum.ID, '-?(?:\\\\.[0-9]+|[0-9]+(?:\\\\.[0-9]*)?)', false],\n    [TokenEnum.STR_ID, '\"[^\"\\\\\\\\]*(?:\\\\\\\\(?:.|\\\\n)[^\"\\\\\\\\]*)*\"', false],\n    [TokenEnum.HTML_ID, '<[^<>]*(?:<[^<>]*>[^<>]*)*>', false],\n    [TokenEnum.EDGE_OP, '-[>-]', false],\n  ];\n  private static symbols: { [symbol: string]: TokenEnum } = {\n    '[': TokenEnum.LSQUARE,\n    ']': TokenEnum.RSQUARE,\n    '{': TokenEnum.LCURLY,\n    '}': TokenEnum.RCURLY,\n    ',': TokenEnum.COMMA,\n    ':': TokenEnum.COLON,\n    ';': TokenEnum.SEMI,\n    '=': TokenEnum.EQUAL,\n    '+': TokenEnum.PLUS,\n  };\n  private static literals: { [symbol: string]: TokenEnum } = {\n    strict: TokenEnum.STRICT,\n    graph: TokenEnum.GRAPH,\n    digraph: TokenEnum.DIGRAPH,\n    node: TokenEnum.NODE,\n    edge: TokenEnum.EDGE,\n    subgraph: TokenEnum.SUBGRAPH,\n  };\n  public constructor() {\n    super(\n      DotScanner.tokens,\n      DotScanner.symbols,\n      DotScanner.literals,\n      true,\n      TokenEnum.EOF,\n      TokenEnum.SKIP,\n    );\n  }\n  public * scan(input: string): Generator<[TokenEnum, string]> {\n    for (let [type, text] of super.scan(input)) {\n      if (type === TokenEnum.STR_ID) {\n        text = text.slice(1, -1);\n        text = text.replace(/\\\\(?:\\r\\n|\\r|\\n)/g, '');\n        text = text.replace(/\\\\\"/g, '\"');\n        type = TokenEnum.ID;\n      } else if (type === TokenEnum.HTML_ID) {\n        text = text.slice(1, -1);\n        type = TokenEnum.ID;\n      }\n      yield [type, text];\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Graph.vue?vue&type=template&id=7e8fd228&scoped=true&\"\nimport script from \"./Graph.vue?vue&type=script&lang=ts&\"\nexport * from \"./Graph.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Graph.vue?vue&type=style&index=0&id=7e8fd228&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7e8fd228\",\n  null\n  \n)\n\nexport default component.exports","export default class BaseScanner<T> {\n  private readonly tokens: Array<[T, string, boolean]>;\n  private readonly symbols: { [symbol: string]: T };\n  private readonly literals: { [symbol: string]: T };\n  private readonly eofToken: T;\n  private readonly skipToken?: T;\n  private readonly tokensRegex: RegExp;\n  public constructor(tokens: Array<[T, string, boolean]>,\n                     symbols: { [symbol: string]: T },\n                     literals: { [symbol: string]: T },\n                     ignoreCase: boolean,\n                     eofToken: T,\n                     skipToken: T | undefined) {\n    this.tokens = tokens;\n    this.symbols = symbols;\n    this.literals = literals;\n    this.eofToken = eofToken;\n    this.skipToken = skipToken;\n    let flags = '';\n    if (ignoreCase) {\n      flags += 'i';\n    }\n    this.tokensRegex = new RegExp('^(?:' + tokens.map(\n      (x) => '(' + x[1] + ')').join('|') + ')', flags);\n  }\n  public next(buf: string): [T, string, string] {\n    if (!buf.length) {\n      return [this.eofToken, '', ''];\n    }\n    const mo = buf.match(this.tokensRegex);\n    if (mo) {\n      let lastIndex = -1;\n      for (let i = 0; i < this.tokens.length; ++i) {\n        if (mo[i + 1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n      if (lastIndex < 0) {\n        throw new Error('Cannot find token index');\n      }\n      const [type, , testLit] = this.tokens[lastIndex];\n      const finalType = testLit ? this.literals[mo[0]] || type : type;\n      return [finalType, mo[0], buf.slice(mo[0].length)];\n    } else {\n      const type = this.symbols[buf[0]];\n      if (!type) {\n        throw new Error('Unexpected character');\n      }\n      return [type, buf[0], buf.slice(1)];\n    }\n  }\n  public * scan(input: string): Generator<[T, string]> {\n    while (true) {\n      const [type, text, newInput] = this.next(input);\n      input = newInput;\n      if (this.skipToken && type === this.skipToken) {\n        continue;\n      }\n      yield [type, text];\n      if (type === this.eofToken) {\n        break;\n      }\n    }\n  }\n}\n","/* tslint:disable:no-bitwise */\n\nimport {XdotPen, XdotShape} from '@/graph/base/dataXdot';\n\nenum FontCharacteristics {\n  BOLD = 1,\n  ITALIC = 2,\n  UNDERLINE = 4,\n  SUPERSCRIPT = 8,\n  SUBSCRIPT = 16,\n  STRIKE_THROUGH = 32,\n  OVERLINE = 64,\n}\n\nfunction HSVtoRGB(h: number, s: number, v: number): [number, number, number] {\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n  }\n  return [r, g, b];\n}\n\nexport default class XDotAttrParser {\n  private readonly pen: XdotPen;\n  private readonly input: string;\n  private pos: number;\n  public constructor(input: string) {\n    this.pen = {\n      color: [0.0, 0.0, 0.0, 1.0],\n      fillcolor: [0.0, 0.0, 0.0, 1.0],\n      linewidth: 1.0,\n      fontsize: 14.0,\n      fontname: 'Times-Roman',\n      bold: false,\n      italic: false,\n      underline: false,\n      superscript: false,\n      subscript: false,\n      strikethrough: false,\n      overline: false,\n      dash: [],\n    };\n    this.input = input;\n    this.pos = 0;\n  }\n  public parse(): XdotShape[] {\n    const shapes: XdotShape[] = [];\n    while (this.pos < this.input.length) {\n      const op = this.readCode();\n      switch (op) {\n        case 'c':\n          this.pen.color = this.readColor();\n          break;\n        case 'C':\n          this.pen.fillcolor = this.readColor();\n          break;\n        case 'S': {\n          const style = this.readText();\n          if (style.startsWith('setlinewidth')) {\n            const lw = style.split('(')[1].split(')')[0];\n            this.pen.linewidth = parseFloat(lw);\n          } else if (['solid', 'dashed', 'dotted'].indexOf(style) !== -1) {\n            if (style === 'solid') {\n              this.pen.dash = [];\n            } else if (style === 'dashed') {\n              this.pen.dash = [6];\n            } else {\n              this.pen.dash = [2, 4];\n            }\n          } else {\n            throw new Error('Unknown line style');\n          }\n          break;\n        }\n        case 'F':\n          this.pen.fontsize = this.readFloat();\n          this.pen.fontname = this.readText();\n          break;\n        case 'T': {\n          const [x, y] = this.readPoint();\n          const centering = this.readInt();\n          if ([-1, 0, 1].indexOf(centering) === -1) {\n            throw new Error('Wrong centering parameter');\n          }\n          const width = this.readFloat();\n          const text = this.readText();\n          shapes.push({\n            is: 'xdot',\n            type: 'text',\n            pen: Object.assign({}, this.pen),\n            x, y,\n            centering: centering as any,\n            width, text,\n          });\n          break;\n        }\n        case 't': {\n          const f = this.readInt();\n          this.pen.bold = !!(f & FontCharacteristics.BOLD);\n          this.pen.italic = !!(f & FontCharacteristics.ITALIC);\n          this.pen.underline = !!(f & FontCharacteristics.UNDERLINE);\n          this.pen.superscript = !!(f & FontCharacteristics.SUPERSCRIPT);\n          this.pen.subscript = !!(f & FontCharacteristics.SUBSCRIPT);\n          this.pen.strikethrough = !!(f & FontCharacteristics.STRIKE_THROUGH);\n          this.pen.overline = !!(f & FontCharacteristics.OVERLINE);\n          break;\n        }\n        case 'E': case 'e': {\n          const [x, y] = this.readPoint();\n          const width = this.readFloat();\n          const height = this.readFloat();\n          if (op === 'E') {\n            shapes.push({\n              is: 'xdot',\n              type: 'ellipse',\n              pen: Object.assign({}, this.pen),\n              x, y, width, height,\n              filled: true,\n            });\n          }\n          shapes.push({\n            is: 'xdot',\n            type: 'ellipse',\n            pen: Object.assign({}, this.pen),\n            x, y, width, height,\n            filled: false,\n          });\n          break;\n        }\n        case 'L': {\n          const points = this.readPolygon();\n          shapes.push({\n            is: 'xdot',\n            type: 'line',\n            pen: Object.assign({}, this.pen),\n            points,\n          });\n          break;\n        }\n        case 'B': case 'b': {\n          const points = this.readPolygon();\n          if (op === 'b') {\n            shapes.push({\n              is: 'xdot',\n              type: 'bezier',\n              pen: Object.assign({}, this.pen),\n              points: JSON.parse(JSON.stringify(points)),\n              filled: true,\n            });\n          }\n          shapes.push({\n            is: 'xdot',\n            type: 'bezier',\n            pen: Object.assign({}, this.pen),\n            points,\n            filled: false,\n          });\n          break;\n        }\n        case 'P': case 'p': {\n          const points = this.readPolygon();\n          if (op === 'P') {\n            shapes.push({\n              is: 'xdot',\n              type: 'polygon',\n              pen: Object.assign({}, this.pen),\n              points: JSON.parse(JSON.stringify(points)),\n              filled: true,\n            });\n          }\n          shapes.push({\n            is: 'xdot',\n            type: 'polygon',\n            pen: Object.assign({}, this.pen),\n            points,\n            filled: false,\n          });\n          break;\n        }\n        case 'I': {\n          const [x, y] = this.readPoint();\n          const width = this.readFloat();\n          const height = this.readFloat();\n          const path = this.readText();\n          shapes.push({\n            is: 'xdot',\n            type: 'image',\n            pen: Object.assign({}, this.pen),\n            x, y, width, height, path,\n          });\n          break;\n        }\n        default:\n          throw new Error(`Unknown operation code ${op}`);\n      }\n    }\n    return shapes;\n  }\n  private readCode(): string {\n    const pos = this.input.indexOf(' ', this.pos);\n    if (pos === -1) {\n      throw new Error('Unexpected ending of xdot attribute');\n    }\n    const res = this.input.slice(this.pos, pos);\n    this.pos = pos + 1;\n    this.skipSpace();\n    return res;\n  }\n  private skipSpace() {\n    while (this.pos < this.input.length && this.input[this.pos] === ' ') {\n      ++this.pos;\n    }\n  }\n  private readInt(): number {\n    return parseInt(this.readCode(), 10);\n  }\n  private readFloat(): number {\n    return parseFloat(this.readCode());\n  }\n  private readPoint(): [number, number] {\n    const x = this.readFloat();\n    const y = this.readFloat();\n    return [x, y];\n  }\n  private readText(): string {\n    const num = this.readInt();\n    const pos = this.input.indexOf('-', this.pos) + 1;\n    this.pos = pos + num;\n    const res = this.input.slice(pos, this.pos);\n    this.skipSpace();\n    return res;\n  }\n  private readPolygon(): Array<[number, number]> {\n    const n = this.readInt();\n    const p = [];\n    for (let i = 0; i < n; ++i) {\n      p.push(this.readPoint());\n    }\n    return p;\n  }\n  private readColor(): [number, number, number, number] {\n    const c = this.readText();\n    const c1 = c[0];\n    if (c1 === '#') {\n      const r = parseInt(c.slice(1, 3), 16);\n      const g = parseInt(c.slice(3, 5), 16);\n      const b = parseInt(c.slice(5, 7), 16);\n      const a = c.length >= 9 ? parseInt(c.slice(7, 9), 16) / 255.0 : 1.0;\n      return [r, g, b, a];\n    } else if ((c1 >= '0' && c1 <= '9') || c1 === '.') {\n      const hsv = c.replace(/,/g, ' ').split(/\\s+/);\n      if (hsv.length !== 3) {\n        throw new Error('Wrong HSV color');\n      }\n      const [h, s, v] = hsv.map(parseFloat);\n      const [r, g, b] = HSVtoRGB(h, s, v);\n      return [r, g, b, 1.0];\n    } else {\n      throw new Error('Unsupported color');\n    }\n  }\n}\n","export default class BaseParser<T> {\n  protected lookahead: [T, string];\n  private lexer: Generator<[T, string]>;\n  public constructor(lexer: Generator<[T, string]>) {\n    this.lexer = lexer;\n    const lookahead = lexer.next();\n    if (lookahead.done) {\n      throw new Error('Unexpected end of token');\n    }\n    this.lookahead = lookahead.value;\n  }\n  public match(types: T[]) {\n    if (types.indexOf(this.lookahead[0]) === -1) {\n      throw new Error(`Unexpected token ${this.lookahead[1]}`);\n    }\n  }\n  public consume(): [T, string] {\n    const token = this.lookahead;\n    const lookahead = this.lexer.next();\n    if (lookahead.done) {\n      throw new Error('Unexpected end of token');\n    }\n    this.lookahead = lookahead.value;\n    return token;\n  }\n}\n","import {TokenEnum} from '@/graph/dot/DotScanner';\nimport BaseParser from '@/graph/dot/BaseParser';\nimport {DotChildElement, DotGraph, DotNodeId, DotSubgraph} from '@/graph/base/dataXdot';\n\nexport default class DotParser extends BaseParser<TokenEnum> {\n  public constructor(lexer: Generator<[TokenEnum, string]>) {\n    super(lexer);\n  }\n  // public consume() {\n  //   const token = super.consume();\n  //   // tslint:disable-next-line:no-console\n  //   console.log(`${TokenEnum[token[0]]} ${token[1]}`);\n  //   return token;\n  // }\n  public parse() {\n    const graph = this.parseGraph();\n    this.match([TokenEnum.EOF]);\n    return graph;\n  }\n  public parseGraph(): DotGraph {\n    let strict = false;\n    if (this.lookahead[0] === TokenEnum.STRICT) {\n      strict = true;\n      this.consume();\n    }\n    this.match([TokenEnum.DIGRAPH, TokenEnum.GRAPH]);\n    const directed = this.consume()[0] === TokenEnum.DIGRAPH;\n    let id: string | undefined;\n    if (this.lookahead[0] === TokenEnum.ID) {\n      id = this.consume()[1];\n    }\n    this.match([TokenEnum.LCURLY]);\n    this.consume();\n    const children: DotChildElement[] = [];\n    while (this.lookahead[0] !== TokenEnum.RCURLY) {\n      const newChildren = this.parseStmt();\n      children.push(...newChildren);\n    }\n    this.consume();\n    return {\n      type: 'graph',\n      strict,\n      directed,\n      id,\n      children,\n    };\n  }\n  public parseStmt(): DotChildElement[] {\n    let children: DotChildElement[] = [];\n    switch (this.lookahead[0]) {\n      case TokenEnum.GRAPH: {\n        this.consume();\n        children.push({\n          type: 'graphAttr',\n          attrs: this.parseAttrs(),\n        });\n        break;\n      }\n      case TokenEnum.NODE: {\n        this.consume();\n        children.push({\n          type: 'nodeAttr',\n          attrs: this.parseAttrs(),\n        });\n        break;\n      }\n      case TokenEnum.EDGE: {\n        this.consume();\n        children.push({\n          type: 'edgeAttr',\n          attrs: this.parseAttrs(),\n        });\n        break;\n      }\n      case TokenEnum.SUBGRAPH:\n      case TokenEnum.LCURLY: {\n        children = [this.parseSubgraph()];\n        break;\n      }\n      default: {\n        const id = this.parseNodeId();\n        switch (this.lookahead[0]) {\n          case TokenEnum.EDGE_OP: {\n            this.consume();\n            const ids = [id, this.parseNodeId()];\n            while (this.lookahead[0] === TokenEnum.EDGE_OP) {\n              this.consume();\n              ids.push(this.parseNodeId());\n            }\n            const attrs = this.parseAttrs();\n            for (let i = 0; i < ids.length - 1; ++i) {\n              children.push({\n                type: 'edge',\n                from: ids[i],\n                to: ids[i + 1],\n                attrs,\n              });\n            }\n            break;\n          }\n          case TokenEnum.EQUAL: {\n            this.consume();\n            const value = this.parseId();\n            children.push({\n              type: 'graphAttr',\n              attrs: { [id.id]: value},\n            });\n            break;\n          }\n          default: {\n            const attrs = this.parseAttrs();\n            children.push({\n              type: 'node',\n              id,\n              attrs,\n            });\n          }\n        }\n        break;\n      }\n    }\n    if (this.lookahead[0] === TokenEnum.SEMI) {\n      this.consume();\n    }\n    return children;\n  }\n  public parseAttrs(): { [attr: string]: string } {\n    const attrs: { [attr: string]: string } = {};\n    while (this.lookahead[0] as TokenEnum === TokenEnum.LSQUARE) {\n      this.consume();\n      while (this.lookahead[0] !== TokenEnum.RSQUARE) {\n        const [name, value] = this.parseAttr();\n        attrs[name] = value;\n        if (this.lookahead[0] === TokenEnum.COMMA ||\n            this.lookahead[0] === TokenEnum.SEMI) {\n          this.consume();\n        }\n      }\n      this.consume();\n    }\n    return attrs;\n  }\n  public parseAttr(): [string, string] {\n    const name = this.parseId();\n    let value = 'true';\n    if (this.lookahead[0] === TokenEnum.EQUAL) {\n      this.consume();\n      value = this.parseId();\n    }\n    return [name, value];\n  }\n  public parseSubgraph(): DotSubgraph {\n    let id: string | undefined;\n    const children: DotChildElement[] = [];\n    if (this.lookahead[0] as TokenEnum === TokenEnum.SUBGRAPH) {\n      this.consume();\n      if (this.lookahead[0] === TokenEnum.ID) {\n        id = this.consume()[1];\n      }\n    }\n    if (this.lookahead[0] as TokenEnum === TokenEnum.LCURLY) {\n      this.consume();\n      while (this.lookahead[0] !== TokenEnum.RCURLY) {\n        const newChildren = this.parseStmt();\n        children.push(...newChildren);\n      }\n      this.consume();\n    }\n    return {\n      type: 'subgraph',\n      id,\n      children,\n    };\n  }\n  public parseNodeId(): DotNodeId {\n    const id = this.parseId();\n    let port: string | undefined;\n    let compass: string | undefined;\n    if (this.lookahead[0] === TokenEnum.COLON) {\n      this.consume();\n      port = this.parseId();\n      if (this.lookahead[0] === TokenEnum.COLON) {\n        this.consume();\n        compass = this.parseId();\n        if (['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw', 'c', '_']\n            .indexOf(compass) === -1) {\n          throw new Error('Error compass');\n        }\n      }\n    }\n    return {\n      id,\n      port,\n      compass: compass as any,\n    };\n  }\n  public parseId(): string {\n    this.match([TokenEnum.ID]);\n    return this.consume()[1];\n  }\n}\n","import XDotAttrParser from '@/graph/dot/XDotAttrParser';\nimport {DotChildElement, DotElement, DotGraph, DotSubgraph, XdotShape} from '@/graph/base/dataXdot';\nimport {RenderableData} from '@/graph/base/dataInput';\n\nexport function xdotComputedAttrPass(graph: DotGraph) {\n  function traversal(element: DotElement,\n                     graphAttrs: { [attr: string]: string },\n                     nodeAttrs: { [attr: string]: string },\n                     edgeAttrs: { [attr: string]: string }) {\n    switch (element.type) {\n      case 'graph':\n      case 'subgraph': {\n        const newGraphAttrs = Object.assign({}, graphAttrs);\n        const newNodeAttrs = Object.assign({}, nodeAttrs);\n        const newEdgeAttrs = Object.assign({}, edgeAttrs);\n        element.entities = [];\n        for (const child of element.children) {\n          switch (child.type) {\n            case 'graphAttr':\n              Object.assign(newGraphAttrs, child.attrs);\n              break;\n            case 'nodeAttr':\n              Object.assign(newNodeAttrs, child.attrs);\n              break;\n            case 'edgeAttr':\n              Object.assign(newEdgeAttrs, child.attrs);\n              break;\n            default:\n              element.entities.push(child);\n              traversal(child, newGraphAttrs, newNodeAttrs, newEdgeAttrs);\n              break;\n          }\n        }\n        element.computedAttrs = newGraphAttrs;\n        break;\n      }\n      case 'node':\n      case 'edge':\n        element.computedAttrs = Object.assign({}, nodeAttrs, element.attrs);\n        break;\n      default:\n        throw new Error('Should not reach here');\n    }\n  }\n  traversal(graph, {}, {}, {});\n}\n\nexport function xdotShapeAttrPass(graph: DotGraph) {\n  function traversal(element: DotElement) {\n    switch (element.type) {\n      case 'graph':\n      case 'subgraph':\n        if (element.computedAttrs) {\n          const isCluster = element.id && element.id.startsWith('cluster');\n          for (const attr of isCluster ? ['_draw_', '_ldraw_'] : ['_ldraw_']) {\n            if (element.computedAttrs[attr]) {\n              const parser = new XDotAttrParser(element.computedAttrs[attr]);\n              const newShapes = parser.parse();\n              element.shapes = element.shapes || {};\n              element.shapes[attr] = newShapes;\n            }\n          }\n        }\n        if (element.entities) {\n          for (const child of element.entities) {\n            traversal(child);\n          }\n        }\n        break;\n      case 'node':\n        if (element.computedAttrs) {\n          for (const attr of ['_draw_', '_ldraw_']) {\n            if (element.computedAttrs[attr]) {\n              const parser = new XDotAttrParser(element.computedAttrs[attr]);\n              const newShapes = parser.parse();\n              element.shapes = element.shapes || {};\n              element.shapes[attr] = newShapes;\n            }\n          }\n        }\n        break;\n      case 'edge':\n        if (element.computedAttrs) {\n          for (const attr of ['_draw_', '_ldraw_', '_hdraw_', '_tdraw_',\n            '_hldraw_', '_tldraw_']) {\n            if (element.computedAttrs[attr]) {\n              const parser = new XDotAttrParser(element.computedAttrs[attr]);\n              const newShapes = parser.parse();\n              element.shapes = element.shapes || {};\n              element.shapes[attr] = newShapes;\n            }\n          }\n        }\n        break;\n      default:\n        throw new Error('Should not reach here');\n    }\n  }\n  traversal(graph);\n}\n\nexport function xdotReverseY(graph: DotGraph) {\n  function convert(element: DotElement) {\n    if (element.boundingBox) {\n      element.boundingBox = [\n        element.boundingBox[0],\n        -element.boundingBox[3],\n        element.boundingBox[2],\n        -element.boundingBox[1],\n      ];\n    }\n    if (element.shapes) {\n      Object.keys(element.shapes).forEach((draw) => {\n        const shapes = element.shapes![draw];\n        shapes.forEach((shape) => {\n          switch (shape.type) {\n            case 'text':\n            case 'ellipse':\n            case 'image':\n              shape.y *= -1;\n              break;\n            case 'bezier':\n            case 'line':\n            case 'polygon':\n              shape.points.forEach((point) => point[1] *= -1);\n              break;\n            default:\n              throw new Error('Should not reach here');\n          }\n        });\n      });\n    }\n    if ((element.type === 'graph' || element.type === 'subgraph')\n        && element.entities) {\n      element.entities.forEach((child) => {\n        convert(child);\n      });\n    }\n  }\n  convert(graph);\n}\n\nexport function xdotToRenderablePass(graph: DotGraph): RenderableData {\n  function convert(element: DotElement): RenderableData {\n    switch (element.type) {\n      case 'node':\n        return {\n          type: 'node',\n          shape: 'xdot',\n          id: element.id.id,\n          xdotId: element.id,\n          attrs: element.computedAttrs || {},\n          shapes: element.shapes,\n          boundingBox: element.boundingBox,\n        };\n      case 'edge':\n        return {\n          type: 'edge',\n          shape: 'xdot',\n          from: element.from.port ? `${element.from.id}:${element.from.port}` :\n            element.from.id,\n          to: element.to.port ? `${element.to.id}:${element.to.port}` :\n            element.to.id,\n          xdotFrom: element.from,\n          xdotTo: element.to,\n          attrs: element.computedAttrs || {},\n          shapes: element.shapes,\n        };\n      case 'graph':\n        return {\n          type: 'graph',\n          id: element.id || '',\n          shape: 'xdot',\n          strict: element.strict,\n          directed: element.directed,\n          children: (element.entities || []).map((x) => convert(x)),\n          layout: { type: 'none' },\n          physics: { type: 'none' },\n          component: { type: 'none' },\n          attrs: element.computedAttrs || {},\n          shapes: element.shapes,\n          boundingBox: element.boundingBox,\n        };\n      case 'subgraph':\n        return {\n          type: 'graph',\n          id: element.id || '',\n          shape: 'xdot',\n          children: (element.entities || []).map((x) => convert(x)),\n          layout: { type: 'none' },\n          physics: { type: 'none' },\n          component: { type: 'none' },\n          attrs: element.computedAttrs || {},\n          shapes: element.shapes,\n          boundingBox: element.boundingBox,\n        };\n      default:\n        throw new Error('Should not reach here');\n    }\n  }\n  return convert(graph);\n}\n\nfunction getBoundingBoxFromPoints(points: Array<[number, number]>)\n  : [number, number, number, number] {\n  let [x0, y0] = points[0];\n  let [x1, y1] = [x0, y0];\n  for (let i = 1; i < points.length; ++i) {\n    const [x, y] = points[i];\n    [x0, x1] = [Math.min(x0, x), Math.max(x1, x)];\n    [y0, y1] = [Math.min(y0, y), Math.max(y1, y)];\n  }\n  return [x0, y0, x1, y1];\n}\n\nexport function getBoundingBox(shape: XdotShape,\n                               ctx: CanvasRenderingContext2D):\n    [number, number, number, number] {\n  switch (shape.type) {\n    case 'text': {\n      ctx.font = `${shape.pen.fontsize}px ${shape.pen.fontname}`;\n      ctx.textBaseline = 'alphabetic';\n      const metrics = ctx.measureText(shape.text);\n      return [\n        shape.x - 0.5 * (1 + shape.centering) * shape.width,\n        shape.y - metrics.actualBoundingBoxDescent,\n        shape.x + 0.5 * (1 - shape.centering) * shape.width,\n        shape.y + metrics.actualBoundingBoxAscent,\n      ];\n    }\n    case 'polygon': {\n      const [x0, y0, x1, y1] = getBoundingBoxFromPoints(shape.points);\n      const bt = shape.filled ? 0 : shape.pen.linewidth / 2;\n      return [x0 - bt, y0 - bt, x1 + bt, y1 + bt];\n    }\n    case 'ellipse': {\n      const bt = shape.filled ? 0 : shape.pen.linewidth / 2;\n      const width = shape.width + bt;\n      const height = shape.height + bt;\n      return [\n        shape.x - width, shape.y - height,\n        shape.x + width, shape.y + height,\n      ];\n    }\n    default:\n      return [Infinity, Infinity, -Infinity, -Infinity];\n  }\n}\n\nexport function xdotBoundingBoxPass(graph: DotGraph,\n                                    ctx: CanvasRenderingContext2D) {\n  function traversal(element: DotElement) {\n    switch (element.type) {\n      case 'graph':\n      case 'subgraph':\n        if (element.computedAttrs && element.computedAttrs.bb) {\n          element.boundingBox = element.computedAttrs.bb.split(',')\n            .map((x) => parseInt(x, 10)) as any;\n          if (element.entities) {\n            for (const child of element.entities) {\n              traversal(child);\n            }\n          }\n        }\n        break;\n      case 'node': {\n        if (element.shapes) {\n          const boundingBox = ([] as Array<[number, number, number, number]>)\n            .concat(...Object.keys(element.shapes).map((x) =>\n              element.shapes![x].map(\n                (y) => getBoundingBox(y, ctx))));\n          element.boundingBox = [\n            Math.min(...boundingBox.map((x) => x[0])),\n            Math.min(...boundingBox.map((x) => x[1])),\n            Math.max(...boundingBox.map((x) => x[2])),\n            Math.max(...boundingBox.map((x) => x[3])),\n          ];\n        }\n        break;\n      }\n      case 'edge': {\n        // do nothing\n        break;\n      }\n      default:\n        throw new Error('Should not reach here');\n    }\n  }\n  traversal(graph);\n}\n\nexport function xdotMovePass(graph: DotGraph, deltaX: number, deltaY: number) {\n\n  function convert(element: DotElement) {\n    if (element.boundingBox) {\n      element.boundingBox = [\n        element.boundingBox[0] + deltaX,\n        element.boundingBox[1] + deltaY,\n        element.boundingBox[2] + deltaX,\n        element.boundingBox[3] + deltaY,\n      ];\n    }\n    if (element.shapes) {\n      Object.keys(element.shapes).forEach((draw) => {\n        const shapes = element.shapes![draw];\n        shapes.forEach((shape) => {\n          switch (shape.type) {\n            case 'text':\n            case 'ellipse':\n            case 'image':\n              shape.x += deltaX;\n              shape.y += deltaY;\n              break;\n            case 'bezier':\n            case 'line':\n            case 'polygon':\n              shape.points.forEach((point) => {\n                point[0] += deltaX;\n                point[1] += deltaY;\n              });\n              break;\n            default:\n              throw new Error('Should not reach here');\n          }\n        });\n      });\n    }\n    if ((element.type === 'graph' || element.type === 'subgraph')\n      && element.entities) {\n      element.entities.forEach((child) => {\n        convert(child);\n      });\n    }\n  }\n  convert(graph);\n}\n","import {\n  EdgeData,\n  GraphData,\n  KamadaKawaiGraphLayoutData,\n  LinearComponentLayoutData,\n  NodeData,\n  RenderableData,\n} from '@/graph/base/dataInput';\nimport DotScanner from '@/graph/dot/DotScanner';\nimport DotParser from '@/graph/dot/DotParser';\nimport {\n  xdotShapeAttrPass,\n  xdotReverseY,\n  xdotToRenderablePass,\n  xdotComputedAttrPass,\n  xdotBoundingBoxPass,\n  xdotMovePass,\n} from '@/graph/dot/passes';\nimport {DotGraph, DotNode, DotSubgraph} from '@/graph/base/dataXdot';\nimport {globalGraphRoot} from '@/graph/Root';\n\nconst alnumChars: string = '0123456789' +\n  'abcdefghijklmnopqrstuvwxyz' +\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nfunction randomAlnumString(length: number): string {\n  let result = '';\n  for (let i = 0; i < length; ++i) {\n    result += alnumChars[Math.floor(Math.random() * alnumChars.length)];\n  }\n  return result;\n}\n\nfunction generateId(): string {\n  return randomAlnumString(16);\n}\n\nfunction unescapeString(str: string): string {\n  str = str.replace(/\\\\n/g, '\\n');\n  str = str.replace(/\\\\r/g, '\\r');\n  str = str.replace(/\\\\t/g, '\\t');\n  str = str.replace(/\\\\'/g, '\\'');\n  str = str.replace(/\\\\\"/g, '\\\"');\n  str = str.replace(/&gamma;/g, 'γ');\n  return str;\n}\n\nfunction normalizeColor(color: string): string {\n  let end = color.length - 1;\n  while (end >= 0 && (color[end] >= '0' && color[end] <= '9')) {\n    --end;\n  }\n  return color.slice(0, end + 1);\n}\n\nexport interface GraphParserConfig {\n  preferredEdgeDirection?: number | 'any';\n  edgeType?: 'straight' | 'quadratic';\n  initialLayout?: 'none' | 'kamadaKawai';\n  physicsLayout?: 'none' | 'BarnesHut';\n  componentLayout?: 'default' | 'linearLR' | 'linearRL'\n    | 'linearTD' | 'linearDT';\n}\n\nexport const graphParsers\n  : { [input: string]: (input: string, config?: GraphParserConfig) =>\n    RenderableData } = {\n  json(input: string): RenderableData {\n    return JSON.parse(input);\n  },\n  graphviz(input: string, config?: GraphParserConfig): RenderableData {\n    const dotScanner = new DotScanner();\n    const dotParser = new DotParser(dotScanner.scan(input));\n    const graph = dotParser.parse();\n    xdotComputedAttrPass(graph);\n\n    function parseNode(data: DotNode): NodeData {\n      const result: NodeData = {\n        type: 'node',\n        shape: 'box',\n        id: generateId(),\n        label: data.id.id,\n      };\n      if (data.id) {\n        result.id = unescapeString(data.id.id);\n      }\n      if (data.computedAttrs) {\n        if (data.computedAttrs.label !== undefined) {\n          result.label = unescapeString(data.computedAttrs.label);\n        }\n        if (data.computedAttrs.style !== undefined) {\n          result.style = data.computedAttrs.style as any;\n        }\n        if (data.computedAttrs.color !== undefined) {\n          result.strokeColor = normalizeColor(data.computedAttrs.color as any);\n        }\n        if (data.computedAttrs.fillcolor !== undefined) {\n          result.fillColor = normalizeColor(\n            data.computedAttrs.fillcolor as any);\n        }\n        if (data.computedAttrs.shape !== undefined) {\n          const shape = data.computedAttrs.shape as any;\n          result.shape = shape === 'none' ? 'table' : shape;\n        }\n      }\n      return result;\n    }\n\n    function parseGraph(data: DotGraph | DotSubgraph): GraphData {\n      let recordHorizontal = true;\n      const result: GraphData = {\n        type: 'graph',\n        shape: 'box',\n        id: generateId(),\n        component: {\n          type: 'linear',\n          direction: 'TD',\n        },\n        layout: config && config.initialLayout === 'none' ? {\n          type: 'none',\n        } : {\n          type: 'KamadaKawai',\n          preferredEdgeDirection: 90,\n        },\n        physics: {\n          type: (config && config.physicsLayout) || 'BarnesHut',\n        },\n        children: [],\n      };\n      if (data.id) {\n        result.id = data.id;\n      }\n      if (data.computedAttrs) {\n        if (data.computedAttrs.label !== undefined) {\n          result.label = unescapeString(data.computedAttrs.label);\n        }\n        if (data.computedAttrs.rankdir !== undefined) {\n          const rankdir = data.computedAttrs.rankdir;\n          if (result.component && result.component.type === 'linear') {\n            result.component.direction = ({\n              LR: 'TD',\n              TB: 'LR',\n              RL: 'TD',\n              BT: 'LR',\n            } as { [dir: string]: string })[rankdir as string] as any;\n          }\n          if (result.layout && result.layout.type === 'KamadaKawai') {\n            result.layout.preferredEdgeDirection = ({\n              LR: 0,\n              TB: 90,\n              RL: 180,\n              BT: 279,\n            } as { [dir: string]: number })[rankdir as string];\n            recordHorizontal = !(rankdir === 'LR' || rankdir === 'RL');\n          }\n        }\n        if (data.id && data.id.startsWith('cluster')) {\n          if (data.computedAttrs.style !== undefined) {\n            result.style = data.computedAttrs.style as any;\n          }\n          if (data.computedAttrs.color !== undefined) {\n            result.strokeColor = normalizeColor(data.computedAttrs.color as any);\n          }\n          if (data.computedAttrs.fillcolor !== undefined) {\n            result.fillColor = normalizeColor(\n              data.computedAttrs.fillcolor as any);\n          }\n        }\n      }\n      if (config && config.preferredEdgeDirection !== undefined &&\n        result.layout && result.layout.type === 'KamadaKawai') {\n        result.layout.preferredEdgeDirection =\n          config.preferredEdgeDirection;\n      }\n\n      if (config && config.componentLayout !== undefined &&\n        config.componentLayout !== 'default' &&\n        result.component && result.component.type === 'linear') {\n        (result.component as LinearComponentLayoutData)\n          .direction = ({\n          linearLR: 'LR',\n          linearRL: 'RL',\n          linearTD: 'TD',\n          linearDT: 'DT',\n        } as any)[config.componentLayout];\n      }\n      if (data.entities) {\n        for (const child of data.entities) {\n          switch (child.type) {\n            case 'node': {\n              const element = parseNode(child);\n              if (element.shape === 'record') {\n                element.direction = recordHorizontal ? 'horizontal' :\n                  'vertical';\n              }\n              result.children!.push(element);\n              break;\n            }\n            case 'edge': {\n              const element: EdgeData = {\n                type: 'edge',\n                shape: (config && config.edgeType) || 'quadratic',\n                id: generateId(),\n                from: child.from.id + (child.from.port ?\n                  ':' + child.from.port : ''),\n                to: child.to.id + (child.to.port ?\n                  ':' + child.to.port : ''),\n              };\n              result.children!.push(element);\n              break;\n            }\n            case 'subgraph':\n              result.children!.push(parseGraph(child));\n              break;\n            default:\n              throw new Error(`Unknown child type`);\n          }\n        }\n      }\n      return result;\n    }\n    return parseGraph(graph);\n  },\n  xdot(input: string, config?: GraphParserConfig) {\n    const dotScanner = new DotScanner();\n    const dotParser = new DotParser(dotScanner.scan(input));\n    const graph = dotParser.parse();\n    xdotComputedAttrPass(graph);\n    xdotShapeAttrPass(graph);\n    xdotBoundingBoxPass(graph, globalGraphRoot.ctx);\n    xdotReverseY(graph);\n    if (graph.boundingBox) {\n      const deltaX = -0.5 * (graph.boundingBox[0] + graph.boundingBox[2]);\n      const deltaY = -0.5 * (graph.boundingBox[1] + graph.boundingBox[3]);\n      xdotMovePass(graph, deltaX, deltaY);\n    }\n    return xdotToRenderablePass(graph);\n  },\n};\n","export default \"digraph stdThreadJoin {\\nlabel=\\\" VFG of stdThreadJoin\\\"\\ngraph [rankdir=\\\"LR\\\"]\\nsubgraph cluster_input {\\nlabel=\\\"Inputs\\\"\\nstyle=filled\\ncolor=black\\nfillcolor=darkolivegreen1\\nN912 [label=\\\"N912\\\\n[arg:stdThreadJoin_0]\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN913 [label=\\\"N913\\\\n[arg:stdThreadJoin_0]*\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\n} # end of input\\nsubgraph cluster_output {\\nlabel=\\\"Outputs\\\"\\nstyle=filled\\ncolor=black\\nfillcolor=goldenrod1\\nN940 [label=\\\"N940\\\\n_\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\n} # end of output\\n# body nodes\\nN919 [label=\\\"N919\\\\n&dummy\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN925 [label=\\\"N925\\\\n0\\\", style=filled, fillcolor=\\\"lightgrey\\\", shape=box]\\nN926 [label=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>>, shape=none]\\nN927 [label=\\\"N927\\\\nDEREF\\\", style=filled, fillcolor=\\\"gainsboro\\\", shape=box]\\nN928 [label=\\\"N928\\\\nstdThreadJoin::6*\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN930 [label=\\\"N930\\\\n[arg:_pthread_join_0]\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\nN931 [label=\\\"N931\\\\n[arg:_pthread_join_1]\\\", style=filled, fillcolor=\\\"cornflowerblue\\\", shape=box]\\nN932 [label=\\\"N932\\\\nstdThreadJoin::8\\\", style=filled, fillcolor=\\\"cyan3\\\", shape=box]\\nN933 [label=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>>, shape=none]\\nN934 [label=\\\"N934\\\\n1\\\", style=filled, fillcolor=\\\"lightgrey\\\", shape=box]\\nN937 [label=\\\"N937\\\\n&gamma;\\\", style=filled, fillcolor=\\\"darksalmon\\\", shape=box]\\n# proxy\\nP595 [label=\\\"\\\",style=filled,color=crimson,fillcolor=crimson,shape=circle,height=0.05,width=0.05]\\nP596 [label=\\\"\\\",style=filled,color=crimson,fillcolor=crimson,shape=circle,height=0.05,width=0.05]\\n# end of body\\nN937 -> N940\\nN912 -> N926:op_1\\nN925 -> N926:op_2\\nN925 -> N926:op_3\\nN926:top -> N927\\nN928 -> N930\\nN919 -> N931\\nN925 -> N933:op_1\\nN932 -> N933:op_2\\nN925 -> P595 [arrowhead=none]\\nP595 -> N937\\nN933:top -> P595 [label=\\\"N933\\\",style=dotted,color=crimson]\\nN934 -> P596 [arrowhead=none]\\nP596 -> N937\\nN933:top -> P596 [label=\\\"!(N933)\\\",style=dotted,color=crimson]\\nCS_31 [shape=record,style=bold,label=\\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\"]\\nN930 -> CS_31:cs_id_in_0\\nN931 -> CS_31:cs_id_in_1\\nCS_31:cs_id_out_0 -> N932\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"stdThreadJoin\\\",\\n  \\\"label\\\": \\\"VFG of stdThreadJoin\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"springLength\\\": 150,\\n    \\\"direction\\\": \\\"LR\\\",\\n    \\\"preferredEdgeDirection\\\": 0\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_input\\\",\\n      \\\"label\\\": \\\"Inputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darkolivegreen\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N912\\\",\\n          \\\"label\\\": \\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N913\\\",\\n          \\\"label\\\": \\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_output\\\",\\n      \\\"label\\\": \\\"Outputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"goldenrod\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N940\\\",\\n          \\\"label\\\": \\\"N940\\\\n_\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N919\\\",\\n      \\\"label\\\": \\\"N919\\\\n&dummy\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N925\\\",\\n      \\\"label\\\": \\\"N925\\\\n0\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"lightgrey\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N926\\\",\\n      \\\"label\\\": \\\"<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>\\\",\\n      \\\"shape\\\": \\\"table\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N927\\\",\\n      \\\"label\\\": \\\"N927\\\\nDEREF\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"gainsboro\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N928\\\",\\n      \\\"label\\\": \\\"N928\\\\nstdThreadJoin::6*\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N930\\\",\\n      \\\"label\\\": \\\"N930\\\\n[arg:_pthread_join_0]\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N931\\\",\\n      \\\"label\\\": \\\"N931\\\\n[arg:_pthread_join_1]\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N932\\\",\\n      \\\"label\\\": \\\"N932\\\\nstdThreadJoin::8\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"cyan\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N933\\\",\\n      \\\"label\\\": \\\"<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>\\\",\\n      \\\"shape\\\": \\\"table\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N934\\\",\\n      \\\"label\\\": \\\"N934\\\\n1\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"lightgrey\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"N937\\\",\\n      \\\"label\\\": \\\"N937\\\\n&gamma;\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darksalmon\\\",\\n      \\\"shape\\\": \\\"box\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"P595\\\",\\n      \\\"label\\\": \\\"\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"color\\\": \\\"crimson\\\",\\n      \\\"fillColor\\\": \\\"crimson\\\",\\n      \\\"shape\\\": \\\"circle\\\",\\n      \\\"radius\\\": 0.025\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"P596\\\",\\n      \\\"label\\\": \\\"\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"color\\\": \\\"crimson\\\",\\n      \\\"fillColor\\\": \\\"crimson\\\",\\n      \\\"shape\\\": \\\"circle\\\",\\n      \\\"radius\\\": 0.025\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N937\\\",\\n      \\\"to\\\": \\\"N940\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N912\\\",\\n      \\\"to\\\": \\\"N926:op_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N926:op_2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N926:op_3\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N926:top\\\",\\n      \\\"to\\\": \\\"N927\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N928\\\",\\n      \\\"to\\\": \\\"N930\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N919\\\",\\n      \\\"to\\\": \\\"N931\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"N933:op_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N932\\\",\\n      \\\"to\\\": \\\"N933:op_2\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N925\\\",\\n      \\\"to\\\": \\\"P595\\\",\\n      \\\"arrowHead\\\": \\\"none\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"P595\\\",\\n      \\\"to\\\": \\\"N937\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N933:top\\\",\\n      \\\"to\\\": \\\"P595\\\",\\n      \\\"label\\\": \\\"N933\\\",\\n      \\\"style\\\": \\\"dotted\\\",\\n      \\\"color\\\": \\\"crimson\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N934\\\",\\n      \\\"to\\\": \\\"P596\\\",\\n      \\\"arrowHead\\\": \\\"none\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"P596\\\",\\n      \\\"to\\\": \\\"N937\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N933:top\\\",\\n      \\\"to\\\": \\\"P596\\\",\\n      \\\"label\\\": \\\"!(N933)\\\",\\n      \\\"style\\\": \\\"dotted\\\",\\n      \\\"color\\\": \\\"crimson\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"node\\\",\\n      \\\"id\\\": \\\"CS_31\\\",\\n      \\\"shape\\\": \\\"record\\\",\\n      \\\"style\\\": \\\"bold\\\",\\n      \\\"direction\\\": \\\"vertical\\\",\\n      \\\"label\\\": \\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N930\\\",\\n      \\\"to\\\": \\\"CS_31:cs_id_in_0\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"N931\\\",\\n      \\\"to\\\": \\\"CS_31:cs_id_in_1\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"edge\\\",\\n      \\\"from\\\": \\\"CS_31:cs_id_out_0\\\",\\n      \\\"to\\\": \\\"N932\\\"\\n    }\\n  ]\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"node\\\",\\n  \\\"id\\\": \\\"N926\\\",\\n  \\\"label\\\": \\\"hello\\\\\\\\nworld |{ b |{c|<here> d|e}| f}| g | h\\\",\\n  \\\"shape\\\": \\\"record\\\"\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"graph\\\",\\n  \\\"id\\\": \\\"stdThreadJoin\\\",\\n  \\\"label\\\": \\\"VFG of stdThreadJoin\\\",\\n  \\\"layout\\\": {\\n    \\\"type\\\": \\\"KamadaKawai\\\",\\n    \\\"springLength\\\": 150\\n  },\\n  \\\"component\\\": {\\n    \\\"direction\\\": \\\"LR\\\"\\n  },\\n  \\\"children\\\": [\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_input\\\",\\n      \\\"component\\\": {\\n        \\\"direction\\\": \\\"TD\\\"\\n      },\\n      \\\"label\\\": \\\"Inputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"darkolivegreen\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N921\\\",\\n          \\\"label\\\": \\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N913\\\",\\n          \\\"label\\\": \\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cyan\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"graph\\\",\\n      \\\"id\\\": \\\"cluster_output\\\",\\n      \\\"label\\\": \\\"Outputs\\\",\\n      \\\"style\\\": \\\"filled\\\",\\n      \\\"fillColor\\\": \\\"goldenrod\\\",\\n      \\\"strokeWidth\\\": 1,\\n      \\\"strokeColor\\\": \\\"black\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"type\\\": \\\"node\\\",\\n          \\\"id\\\": \\\"N940\\\",\\n          \\\"label\\\": \\\"N940\\\\n_\\\",\\n          \\\"style\\\": \\\"filled\\\",\\n          \\\"fillColor\\\": \\\"cornflowerblue\\\",\\n          \\\"shape\\\": \\\"box\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\";","export default \"digraph icosahedron {\\n  0;1;2;3;4;5;6;7;8;9;10;11\\n  0->1\\n  1->2\\n  2->0\\n  0->3\\n  3->2\\n  3->4\\n  4->0\\n  4->5\\n  5->0\\n  5->1\\n  1->8\\n  8->5\\n  5->7\\n  7->4\\n  4->6\\n  6->3\\n  3->10\\n  10->2\\n  2->9\\n  9->1\\n  8->9\\n  9->10\\n  10->6\\n  6->7\\n  7->8\\n  11->8\\n  11->9\\n  11->10\\n  11->6\\n  11->7\\n}\\n\";","export default \"{\\n  \\\"type\\\": \\\"node\\\",\\n  \\\"id\\\": \\\"N926\\\",\\n  \\\"label\\\": \\\"<TABLE BORDER=\\\\\\\"1\\\\\\\" CELLBORDER=\\\\\\\"1\\\\\\\" CELLSPACING=\\\\\\\"2\\\\\\\" CELLPADDING=\\\\\\\"4\\\\\\\"><TR><TD ROWSPAN=\\\\\\\"3\\\\\\\"><FONT COLOR=\\\\\\\"red\\\\\\\">hello</FONT><BR/>world</TD><TD COLSPAN=\\\\\\\"3\\\\\\\">b</TD><TD ROWSPAN=\\\\\\\"3\\\\\\\" BGCOLOR=\\\\\\\"lightgrey\\\\\\\">g</TD><TD ROWSPAN=\\\\\\\"3\\\\\\\">h</TD></TR><TR><TD>c</TD><TD PORT=\\\\\\\"here\\\\\\\">d</TD><TD>e</TD></TR><TR><TD COLSPAN=\\\\\\\"3\\\\\\\">f</TD></TR></TABLE>\\\",\\n  \\\"shape\\\": \\\"table\\\"\\n}\\n\";","export default \"digraph edges {\\n  0\\n  1\\n  2\\n  0 -> 1 -> 2\\n}\\n\";","export default \"digraph stdThreadJoin {\\n\\tgraph [_draw_=\\\"c 9 -#fffffe00 C 7 -#ffffff P 4 0 0 0 363 1069 363 1069 0 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 534.5 7.8 0 126 21 - VFG of stdThreadJoin \\\",\\n\\t\\tbb=\\\"0,0,1069,363\\\",\\n\\t\\tlabel=\\\" VFG of stdThreadJoin\\\",\\n\\t\\tlheight=0.21,\\n\\t\\tlp=\\\"534.5,11.5\\\",\\n\\t\\tlwidth=1.75,\\n\\t\\trankdir=LR,\\n\\t\\txdotversion=1.7\\n\\t];\\n\\tnode [label=\\\"\\\\N\\\"];\\n\\tsubgraph cluster_input {\\n\\t\\tgraph [_draw_=\\\"c 7 -#000000 C 7 -#caff70 P 4 446 222 446 355 605 355 605 222 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 339.8 0 34 6 -Inputs \\\",\\n\\t\\t\\tbb=\\\"446,222,605,355\\\",\\n\\t\\t\\tcolor=black,\\n\\t\\t\\tfillcolor=darkolivegreen1,\\n\\t\\t\\tlabel=Inputs,\\n\\t\\t\\tlheight=0.21,\\n\\t\\t\\tlp=\\\"525.5,343.5\\\",\\n\\t\\t\\tlwidth=0.47,\\n\\t\\t\\tstyle=filled\\n\\t\\t];\\n\\t\\tN912\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 594 324 457 324 457 286 594 286 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 308.8 0 31 4 -N912 F 14 11 -Times-Roman c 7 -#000000 T 525.5 293.8 0 121 21 -[arg:stdThreadJoin_\\\\\\n0] \\\",\\n\\t\\t\\tfillcolor=cyan3,\\n\\t\\t\\theight=0.52778,\\n\\t\\t\\tlabel=\\\"N912\\\\n[arg:stdThreadJoin_0]\\\",\\n\\t\\t\\tpos=\\\"525.5,305\\\",\\n\\t\\t\\tshape=box,\\n\\t\\t\\tstyle=filled,\\n\\t\\t\\twidth=1.9028];\\n\\t\\tN913\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 597 268 454 268 454 230 597 230 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 252.8 0 31 4 -N913 F 14 11 -Times-Roman c 7 -#000000 T 525.5 237.8 0 127 22 -[arg:stdThreadJoin_\\\\\\n0]* \\\",\\n\\t\\t\\tfillcolor=cyan3,\\n\\t\\t\\theight=0.52778,\\n\\t\\t\\tlabel=\\\"N913\\\\n[arg:stdThreadJoin_0]*\\\",\\n\\t\\t\\tpos=\\\"525.5,249\\\",\\n\\t\\t\\tshape=box,\\n\\t\\t\\tstyle=filled,\\n\\t\\t\\twidth=1.9861];\\n\\t}\\n\\tsubgraph cluster_output {\\n\\t\\tgraph [_draw_=\\\"c 7 -#000000 C 7 -#ffc125 P 4 991 104 991 181 1061 181 1061 104 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 1026 165.8 0 43 7 -Outputs \\\",\\n\\t\\t\\tbb=\\\"991,104,1061,181\\\",\\n\\t\\t\\tcolor=black,\\n\\t\\t\\tfillcolor=goldenrod1,\\n\\t\\t\\tlabel=Outputs,\\n\\t\\t\\tlheight=0.21,\\n\\t\\t\\tlp=\\\"1026,169.5\\\",\\n\\t\\t\\tlwidth=0.60,\\n\\t\\t\\tstyle=filled\\n\\t\\t];\\n\\t\\tN940\\t[_draw_=\\\"c 7 -#000000 C 7 -#6495ed P 4 1053 150 999 150 999 112 1053 112 \\\",\\n\\t\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 1026 134.8 0 31 4 -N940 F 14 11 -Times-Roman c 7 -#000000 T 1026 119.8 0 7 1 -_ \\\",\\n\\t\\t\\tfillcolor=cornflowerblue,\\n\\t\\t\\theight=0.52778,\\n\\t\\t\\tlabel=\\\"N940\\\\n_\\\",\\n\\t\\t\\tpos=\\\"1026,131\\\",\\n\\t\\t\\tshape=box,\\n\\t\\t\\tstyle=filled,\\n\\t\\t\\twidth=0.75];\\n\\t}\\n\\tN926\\t[_ldraw_=\\\"S 5 -solid c 9 -#fffffe00 C 7 -#98fb98 P 4 642 288 642 324 724 324 724 288 S 5 -solid c 7 -#000000 p 4 642 288 642 324 724 324 724 \\\\\\n288 F 14 11 -Times-Roman c 7 -#000000 T 654 309.8 -1 58 8 -N926(%6) F 14 11 -Times-Roman c 7 -#000000 T 645 294.8 -1 76 13 -getelementptr \\\\\\nS 5 -solid c 7 -#000000 p 4 642 267 642 288 724 288 724 267 F 14 11 -Times-Roman c 7 -#000000 T 667.5 273.8 -1 31 4 -N912 S 5 -solid \\\\\\nc 7 -#000000 p 4 642 246 642 267 724 267 724 246 F 14 11 -Times-Roman c 7 -#000000 T 667.5 252.8 -1 31 4 -N925 S 5 -solid c 7 -#\\\\\\n000000 p 4 642 225 642 246 724 246 724 225 F 14 11 -Times-Roman c 7 -#000000 T 667.5 231.8 -1 31 4 -N925 \\\",\\n\\t\\theight=1.4861,\\n\\t\\tlabel=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N926(%6)<br/>getelementptr</td></tr><tr><td port='op_1' border='1'>N912</td></tr><tr><td port='op_2' border='1'>N925</td></tr><tr><td port='op_3' border='1'>N925</td></tr></table>>,\\n\\t\\tpos=\\\"683,275\\\",\\n\\t\\tshape=none,\\n\\t\\twidth=1.3611];\\n\\tN912 -> N926:op_1\\t[_draw_=\\\"c 7 -#000000 B 4 584.13 285.95 598.9 282.29 615.06 279.28 630.77 278.32 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 631.12 281.81 641 278 630.89 274.82 \\\",\\n\\t\\tpos=\\\"e,641,278 584.13,285.95 598.9,282.29 615.06,279.28 630.77,278.32\\\"];\\n\\tN919\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 92.5 85 21.5 85 21.5 47 92.5 47 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 57 69.8 0 31 4 -N919 F 14 11 -Times-Roman c 7 -#000000 T 57 54.8 0 55 6 -&dummy \\\",\\n\\t\\tfillcolor=cyan3,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N919\\\\n&dummy\\\",\\n\\t\\tpos=\\\"57,66\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.98611];\\n\\tN931\\t[_draw_=\\\"c 7 -#000000 C 7 -#6495ed P 4 286 85 151 85 151 47 286 47 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 218.5 69.8 0 31 4 -N931 F 14 11 -Times-Roman c 7 -#000000 T 218.5 54.8 0 119 21 -[arg:_pthread_\\\\\\njoin_1] \\\",\\n\\t\\tfillcolor=cornflowerblue,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N931\\\\n[arg:_pthread_join_1]\\\",\\n\\t\\tpos=\\\"218.5,66\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=1.875];\\n\\tN919 -> N931\\t[_draw_=\\\"c 7 -#000000 B 4 92.61 66 106.72 66 123.65 66 140.41 66 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 140.81 69.5 150.81 66 140.81 62.5 \\\",\\n\\t\\tpos=\\\"e,150.81,66 92.609,66 106.72,66 123.65,66 140.41,66\\\"];\\n\\tN925\\t[_draw_=\\\"c 7 -#000000 C 7 -#d3d3d3 P 4 552.5 212 498.5 212 498.5 174 552.5 174 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 196.8 0 31 4 -N925 F 14 11 -Times-Roman c 7 -#000000 T 525.5 181.8 0 7 1 -0 \\\",\\n\\t\\tfillcolor=lightgrey,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N925\\\\n0\\\",\\n\\t\\tpos=\\\"525.5,193\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.75];\\n\\tN925 -> N926:op_2\\t[_draw_=\\\"c 7 -#000000 B 10 552.61 196.17 569.18 199.33 590.2 205.6 605 218 612.32 224.13 608.76 229.78 615 237 621.58 244.62 624.68 250.92 \\\\\\n630.92 253.98 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 630.51 257.47 641 256 631.88 250.61 \\\",\\n\\t\\tpos=\\\"e,641,256 552.61,196.17 569.18,199.33 590.2,205.6 605,218 612.32,224.13 608.76,229.78 615,237 621.58,244.62 624.68,250.92 630.92,\\\\\\n253.98\\\"];\\n\\tN925 -> N926:op_3\\t[_draw_=\\\"c 7 -#000000 B 7 552.61 200.37 568.03 204.95 587.83 211.25 605 218 617.74 223.01 621.72 230.44 631.06 233.55 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 630.6 237.02 641 235 631.61 230.09 \\\",\\n\\t\\tpos=\\\"e,641,235 552.61,200.37 568.03,204.95 587.83,211.25 605,218 617.74,223.01 621.72,230.44 631.06,233.55\\\"];\\n\\tN933\\t[_ldraw_=\\\"S 5 -solid c 9 -#fffffe00 C 7 -#98fb98 P 4 651 125 651 161 715 161 715 125 S 5 -solid c 7 -#000000 p 4 651 125 651 161 715 161 715 \\\\\\n125 F 14 11 -Times-Roman c 7 -#000000 T 654 146.8 -1 58 8 -N933(%9) F 14 11 -Times-Roman c 7 -#000000 T 660.5 131.8 -1 45 7 -icmp \\\\\\nne S 5 -solid c 7 -#000000 p 4 651 104 651 125 715 125 715 104 F 14 11 -Times-Roman c 7 -#000000 T 667.5 110.8 -1 31 4 -N925 S 5 \\\\\\n-solid c 7 -#000000 p 4 651 83 651 104 715 104 715 83 F 14 11 -Times-Roman c 7 -#000000 T 667.5 89.8 -1 31 4 -N932 \\\",\\n\\t\\theight=1.1944,\\n\\t\\tlabel=<<table  border='0' cellspacing='0'><tr><td port='top' bgcolor='palegreen' border='1'>N933(%9)<br/>icmp ne</td></tr><tr><td port='op_1' border='1'>N925</td></tr><tr><td port='op_2' border='1'>N932</td></tr></table>>,\\n\\t\\tpos=\\\"683,122\\\",\\n\\t\\tshape=none,\\n\\t\\twidth=1.1111];\\n\\tN925 -> N933:op_1\\t[_draw_=\\\"c 7 -#000000 B 4 542.76 173.88 562.91 152.28 599.56 119.48 639.94 114.61 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 640.23 118.1 650 114 639.81 111.12 \\\",\\n\\t\\tpos=\\\"e,650,114 542.76,173.88 562.91,152.28 599.56,119.48 639.94,114.61\\\"];\\n\\tP595\\t[_draw_=\\\"c 7 -#dc143c C 7 -#dc143c E 841.5 153 2 2 \\\",\\n\\t\\tcolor=crimson,\\n\\t\\tfillcolor=crimson,\\n\\t\\theight=0.055556,\\n\\t\\tlabel=\\\"\\\",\\n\\t\\tpos=\\\"841.5,153\\\",\\n\\t\\tshape=circle,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.055556];\\n\\tN925 -> P595\\t[_draw_=\\\"c 7 -#000000 B 7 552.58 192.1 600.73 190.04 706.63 183.75 794 166 812.4 162.26 834.2 155.11 839.36 153.38 \\\",\\n\\t\\tarrowhead=none,\\n\\t\\tpos=\\\"552.58,192.1 600.73,190.04 706.63,183.75 794,166 812.4,162.26 834.2,155.11 839.36,153.38\\\"];\\n\\tN927\\t[_draw_=\\\"c 7 -#000000 C 7 -#dcdcdc P 4 871 325 812 325 812 287 871 287 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 841.5 309.8 0 31 4 -N927 F 14 11 -Times-Roman c 7 -#000000 T 841.5 294.8 0 43 5 -DEREF \\\",\\n\\t\\tfillcolor=gainsboro,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N927\\\\nDEREF\\\",\\n\\t\\tpos=\\\"841.5,306\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.81944];\\n\\tN926:top -> N927\\t[_draw_=\\\"c 7 -#000000 B 4 725 306 750.45 306 779.05 306 801.42 306 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 801.55 309.5 811.55 306 801.55 302.5 \\\",\\n\\t\\tpos=\\\"e,811.55,306 725,306 750.45,306 779.05,306 801.42,306\\\"];\\n\\tN928\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 114 141 0 141 0 103 114 103 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 57 125.8 0 31 4 -N928 F 14 11 -Times-Roman c 7 -#000000 T 57 110.8 0 98 17 -stdThreadJoin::6* \\\",\\n\\t\\tfillcolor=cyan3,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N928\\\\nstdThreadJoin::6*\\\",\\n\\t\\tpos=\\\"57,122\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=1.5833];\\n\\tN930\\t[_draw_=\\\"c 7 -#000000 C 7 -#6495ed P 4 286 141 151 141 151 103 286 103 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 218.5 125.8 0 31 4 -N930 F 14 11 -Times-Roman c 7 -#000000 T 218.5 110.8 0 119 21 -[arg:_pthread_\\\\\\njoin_0] \\\",\\n\\t\\tfillcolor=cornflowerblue,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N930\\\\n[arg:_pthread_join_0]\\\",\\n\\t\\tpos=\\\"218.5,122\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=1.875];\\n\\tN928 -> N930\\t[_draw_=\\\"c 7 -#000000 B 4 114.23 122 122.84 122 131.84 122 140.79 122 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 140.85 125.5 150.85 122 140.85 118.5 \\\",\\n\\t\\tpos=\\\"e,150.85,122 114.23,122 122.84,122 131.84,122 140.79,122\\\"];\\n\\tCS_31\\t[_draw_=\\\"S 15 -setlinewidth(2) c 7 -#000000 p 4 323 70.5 323 139.5 417 139.5 417 70.5 c 7 -#000000 L 2 323 116.5 417 116.5 c 7 -#000000 L \\\\\\n2 323 93.5 370 93.5 c 7 -#000000 L 2 370 70.5 370 116.5 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 370 124.3 0 76 13 -_pthread_join F 14 11 -Times-Roman c 7 -#000000 T 346.5 101.3 0 31 4 -N930 \\\\\\nF 14 11 -Times-Roman c 7 -#000000 T 346.5 78.3 0 31 4 -N931 F 14 11 -Times-Roman c 7 -#000000 T 393.5 89.8 0 31 4 -N932 \\\",\\n\\t\\theight=0.97222,\\n\\t\\tlabel=\\\"_pthread_join | { {<cs_id_in_0> N930 | <cs_id_in_1> N931} | {<cs_id_out_0> N932} }\\\",\\n\\t\\tpos=\\\"370,105\\\",\\n\\t\\trects=\\\"323,116.5,417,139.5 323,93.5,370,116.5 323,70.5,370,93.5 370,70.5,417,116.5\\\",\\n\\t\\tshape=record,\\n\\t\\tstyle=bold,\\n\\t\\twidth=1.3056];\\n\\tN930 -> CS_31:cs_id_in_0\\t[_draw_=\\\"c 7 -#000000 B 4 286.05 107.81 294.84 106.6 303.87 105.68 312.72 105.26 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 313.09 108.75 323 105 312.92 101.75 \\\",\\n\\t\\tpos=\\\"e,323,105 286.05,107.81 294.84,106.6 303.87,105.68 312.72,105.26\\\"];\\n\\tN931 -> CS_31:cs_id_in_1\\t[_draw_=\\\"c 7 -#000000 B 4 286.08 79.36 294.87 80.49 303.9 81.36 312.74 81.76 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 312.92 85.27 323 82 313.08 78.27 \\\",\\n\\t\\tpos=\\\"e,323,82 286.08,79.358 294.87,80.493 303.9,81.361 312.74,81.76\\\"];\\n\\tN932\\t[_draw_=\\\"c 7 -#000000 C 7 -#00cdcd P 4 579 112 472 112 472 74 579 74 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 525.5 96.8 0 31 4 -N932 F 14 11 -Times-Roman c 7 -#000000 T 525.5 81.8 0 91 16 -stdThreadJoin::\\\\\\n8 \\\",\\n\\t\\tfillcolor=cyan3,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N932\\\\nstdThreadJoin::8\\\",\\n\\t\\tpos=\\\"525.5,93\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=1.4861];\\n\\tN932 -> N933:op_2\\t[_draw_=\\\"c 7 -#000000 B 4 579.08 93 597.84 93 619.38 93 639.78 93 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 640 96.5 650 93 640 89.5 \\\",\\n\\t\\tpos=\\\"e,650,93 579.08,93 597.84,93 619.38,93 639.78,93\\\"];\\n\\tN933:top -> P595\\t[_draw_=\\\"S 6 -dotted c 7 -#dc143c B 4 716 143 757.78 143 807.19 148.66 829.08 151.47 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#dc143c C 7 -#dc143c P 3 828.9 154.97 839.28 152.83 829.83 148.03 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 772 150.8 0 31 4 -N933 \\\",\\n\\t\\tcolor=crimson,\\n\\t\\tlabel=N933,\\n\\t\\tlp=\\\"772,154.5\\\",\\n\\t\\tpos=\\\"e,839.28,152.83 716,143 757.78,143 807.19,148.66 829.08,151.47\\\",\\n\\t\\tstyle=dotted];\\n\\tP596\\t[_draw_=\\\"c 7 -#dc143c C 7 -#dc143c E 841.5 115 2 2 \\\",\\n\\t\\tcolor=crimson,\\n\\t\\tfillcolor=crimson,\\n\\t\\theight=0.055556,\\n\\t\\tlabel=\\\"\\\",\\n\\t\\tpos=\\\"841.5,115\\\",\\n\\t\\tshape=circle,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.055556];\\n\\tN933:top -> P596\\t[_draw_=\\\"S 6 -dotted c 7 -#dc143c B 7 716 143 735.3 143 731.82 122.45 750 116 777.11 106.38 811.72 110.01 829.25 112.85 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#dc143c C 7 -#dc143c P 3 828.7 116.31 839.17 114.7 829.98 109.43 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 772 119.8 0 44 7 -!(N933) \\\",\\n\\t\\tcolor=crimson,\\n\\t\\tlabel=\\\"!(N933)\\\",\\n\\t\\tlp=\\\"772,123.5\\\",\\n\\t\\tpos=\\\"e,839.17,114.7 716,143 735.3,143 731.82,122.45 750,116 777.11,106.38 811.72,110.01 829.25,112.85\\\",\\n\\t\\tstyle=dotted];\\n\\tN934\\t[_draw_=\\\"c 7 -#000000 C 7 -#d3d3d3 P 4 710 61 656 61 656 23 710 23 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 683 45.8 0 31 4 -N934 F 14 11 -Times-Roman c 7 -#000000 T 683 30.8 0 7 1 -1 \\\",\\n\\t\\tfillcolor=lightgrey,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N934\\\\n1\\\",\\n\\t\\tpos=\\\"683,42\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.75];\\n\\tN934 -> P596\\t[_draw_=\\\"c 7 -#000000 B 4 710.19 54.22 751.96 73.7 829.94 110.08 839.53 114.55 \\\",\\n\\t\\tarrowhead=none,\\n\\t\\tpos=\\\"710.19,54.219 751.96,73.701 829.94,110.08 839.53,114.55\\\"];\\n\\tN937\\t[_draw_=\\\"c 7 -#000000 C 7 -#e9967a P 4 962 150 908 150 908 112 962 112 \\\",\\n\\t\\t_ldraw_=\\\"F 14 11 -Times-Roman c 7 -#000000 T 935 134.8 0 31 4 -N937 F 14 11 -Times-Roman c 7 -#000000 T 935 119.8 0 7 2 -γ \\\",\\n\\t\\tfillcolor=darksalmon,\\n\\t\\theight=0.52778,\\n\\t\\tlabel=\\\"N937\\\\n&gamma;\\\",\\n\\t\\tpos=\\\"935,131\\\",\\n\\t\\tshape=box,\\n\\t\\tstyle=filled,\\n\\t\\twidth=0.75];\\n\\tN937 -> N940\\t[_draw_=\\\"c 7 -#000000 B 4 962.22 131 970.55 131 979.91 131 988.82 131 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 988.97 134.5 998.97 131 988.97 127.5 \\\",\\n\\t\\tpos=\\\"e,998.97,131 962.22,131 970.55,131 979.91,131 988.82,131\\\"];\\n\\tP595 -> N937\\t[_draw_=\\\"c 7 -#000000 B 4 843.53 152.75 848.97 151.45 875 145.19 897.76 139.71 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 898.66 143.1 907.57 137.36 897.02 136.29 \\\",\\n\\t\\tpos=\\\"e,907.57,137.36 843.53,152.75 848.97,151.45 875,145.19 897.76,139.71\\\"];\\n\\tP596 -> N937\\t[_draw_=\\\"c 7 -#000000 B 4 843.53 115.18 848.94 116.13 874.77 120.64 897.45 124.61 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 897.11 128.1 907.57 126.38 898.32 121.21 \\\",\\n\\t\\tpos=\\\"e,907.57,126.38 843.53,115.18 848.94,116.13 874.77,120.64 897.45,124.61\\\"];\\n\\tCS_31:cs_id_out_0 -> N932\\t[_draw_=\\\"c 7 -#000000 B 4 417 93 431.34 93 446.76 93 461.32 93 \\\",\\n\\t\\t_hdraw_=\\\"S 5 -solid c 7 -#000000 C 7 -#000000 P 3 461.74 96.5 471.74 93 461.74 89.5 \\\",\\n\\t\\tpos=\\\"e,471.74,93 417,93 431.34,93 446.76,93 461.32,93\\\"];\\n}\\n\";","import stdThreadJoinGv from '!raw-loader!./examples/stdThreadJoin.gv';\nimport stdThreadJoinJson from '!raw-loader!./examples/stdThreadJoin.txt';\nimport recordJson from '!raw-loader!./examples/record.txt';\nimport subgraphJson from '!raw-loader!./examples/subgraph.txt';\nimport icosahedronGv from '!raw-loader!./examples/icosahedron.txt';\nimport tableJson from '!raw-loader!./examples/table.txt';\nimport edgeGv from '!raw-loader!./examples/edge.txt';\nimport stdThreadJoinXdot from '!raw-loader!./examples/stdThreadJoin.xdot.txt';\n\ninterface Example {\n  name: string;\n  parser: string;\n  content: string;\n}\n\nexport const graphExamples: Example[] = [\n  {\n    name: 'stdThreadJoinGv',\n    parser: 'graphviz',\n    content: stdThreadJoinGv,\n  },\n  {\n    name: 'stdThreadJoinJson',\n    parser: 'json',\n    content: stdThreadJoinJson,\n  },\n  {\n    name: 'record',\n    parser: 'json',\n    content: recordJson,\n  },\n  {\n    name: 'subgraph',\n    parser: 'json',\n    content: subgraphJson,\n  },\n  {\n    name: 'icosahedronGv',\n    parser: 'graphviz',\n    content: icosahedronGv,\n  },\n  {\n    name: 'table',\n    parser: 'json',\n    content: tableJson,\n  },\n  {\n    name: 'edgeGv',\n    parser: 'graphviz',\n    content: edgeGv,\n  },\n  {\n    name: 'stdThreadJoinXdot',\n    parser: 'xdot',\n    content: stdThreadJoinXdot,\n  },\n];\n","import { debounce } from 'lodash-es';\n\nexport function Debounce(delay: number) {\n  return (target: any, prop: string) => {\n    return {\n      configurable: true,\n      enumerable: false,\n      value: debounce(target[prop], delay),\n    };\n  };\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Vue, Watch} from 'vue-property-decorator';\nimport CollapsiblePane from './components/CollapsiblePane.vue';\nimport Graph from './components/Graph.vue';\nimport 'vue-awesome/icons/upload';\nimport 'vue-awesome/icons/sync';\nimport {throttle} from 'lodash-es';\nimport {globalGraphRoot} from '@/graph/Root';\nimport {GraphParserConfig, graphParsers} from '@/graph/parser';\nimport {graphExamples} from './graph/examples';\nimport {Debounce} from '@/debounce-decorator';\nimport {AnyShape} from '@/graph/base/dataOutput';\n\n@Component({\n  components: {\n    CollapsiblePane,\n    Graph,\n  },\n})\nexport default class App extends Vue {\n  get desktopLayout() {\n    return this.windowWidth > 719;\n  }\n  get realSettingsWidth() {\n    return this.desktopLayout ? this.settingsWidth : this.canvasWidth;\n  }\n  // UI data\n  // noinspection JSUnusedLocalSymbols\n  private settingsOpen = true;\n  private settingsWidth = 300;\n  private minGraphWidth = 150;\n  private minSettingsWidth = 150;\n  private sizerMouseActive = false;\n  private sizerTouchActive = false;\n  private windowWidth = document.documentElement.clientWidth;\n  private windowHeight = document.documentElement.clientHeight;\n  private canvasWidth = 0;\n  private canvasHeight = 0;\n  // Input data\n  private parser = 'json';\n  private rawInput = '';\n  private parseError = null;\n  private parsedInput = '';\n  // Settings data\n  private enableDraggable = true;\n  private highlightMode = 'no';\n  private initialLayout = 'KamadaKawai';\n  private physicsLayout = 'BarnesHut';\n  private componentLayout = 'default';\n  private preferredDirection = 'right';\n  private edgeShape = 'quadratic';\n  // noinspection JSUnusedLocalSymbols\n  private examples = graphExamples;\n  // Rendered data\n  // noinspection JSMismatchedCollectionQueryUpdate\n  private rendered: AnyShape[] = [];\n  get parserConfig(): GraphParserConfig {\n    const preferredEdgeDirection = ({\n      default: 'any',\n      left: 180,\n      right: 0,\n      top: -90,\n      down: 90,\n    } as any)[this.preferredDirection];\n    return {\n      initialLayout: this.initialLayout as any,\n      physicsLayout: this.physicsLayout as any,\n      componentLayout: this.componentLayout as any,\n      preferredEdgeDirection,\n      edgeType: this.edgeShape as any,\n    };\n  }\n  @Debounce(10000 / 60)\n  public parseInput() {\n    try {\n      if (this.rawInput) {\n        const parsed = graphParsers[this.parser](\n          this.rawInput, this.parserConfig);\n        this.parsedInput = JSON.stringify(parsed, null, 2);\n        globalGraphRoot.updateData(parsed);\n      } else {\n        this.parsedInput = '';\n      }\n      this.parseError = null;\n    } catch (e) {\n      /* tslint:disable:no-console */\n      console.log(e);\n      this.parseError = e.stack;\n    }\n  }\n  public mounted() {\n    window.addEventListener('resize', this.getSize);\n    this.updateCanvasSize();\n    globalGraphRoot.addEventListener('render', throttle((data: AnyShape[]) => {\n      this.rendered = data;\n    }, 1000 / 60));\n    if (location.hash) {\n      const script = document.createElement('script');\n      script.src = location.hash.slice(1);\n      script.onload = () => {\n        if (window.hasOwnProperty('externalData')) {\n          const {externalData} = window as any;\n          this.rawInput = externalData.content;\n          this.parser = externalData.parser;\n        }\n      };\n      document.body.append(script);\n    }\n  }\n  public beforeDestroy() {\n    window.removeEventListener('resize', this.getSize);\n  }\n  @Watch('settingsWidth')\n  public onSettingsWidthChanged() {\n    this.updateCanvasSize();\n  }\n  @Watch('settingsOpen')\n  public onSettingsOpenChanged() {\n    setTimeout(() => {\n      this.updateCanvasSize();\n    }, 300);\n  }\n  @Watch('parser')\n  public onParserChanged() {\n    switch (this.parser) {\n      case 'graphviz':\n      case 'json':\n        this.enableDraggable = true;\n        break;\n      default:\n        this.enableDraggable = false;\n        break;\n    }\n    this.parseInput();\n  }\n  @Watch('rawInput')\n  public onRawInputChanged() {\n    this.parseInput();\n  }\n  @Watch('parserConfig')\n  public onParseConfigChanged() {\n    this.parseInput();\n  }\n  @Watch('enableDraggable')\n  public onEnableDraggableChanged() {\n    (this.$refs.graph as any).enableDraggable = this.enableDraggable;\n  }\n  @Watch('highlightMode')\n  public onHighlightModeChanged() {\n    globalGraphRoot.setHighlightMode(this.highlightMode as any);\n  }\n  public redraw() {\n    if (this.parsedInput) {\n      globalGraphRoot.fullyUpdateData(JSON.parse(this.parsedInput));\n    }\n  }\n  public selectExample(i: number) {\n    const example = graphExamples[i];\n    this.parser = example.parser;\n    this.rawInput = example.content;\n  }\n  public inputFileChange(e: InputEvent) {\n    const file = (e.target as HTMLInputElement).files![0];\n    if (!file) {\n      return;\n    }\n    switch (file.type) {\n      case 'application/json':\n        this.parser = 'json';\n        break;\n      case 'text/vnd.graphviz':\n        this.parser = 'graphviz';\n        break;\n      default:\n        alert('Unknown file type');\n        return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent<FileReader>) => {\n      this.rawInput = evt.target!.result as string;\n    };\n    reader.readAsText(file);\n  }\n  public getSize() {\n    this.windowWidth = document.documentElement.clientWidth;\n    this.windowHeight = document.documentElement.clientHeight;\n    this.$nextTick(() => this.updateCanvasSize());\n  }\n  public updateCanvasSize() {\n    this.canvasWidth = (this.$refs.canvas as HTMLElement).offsetWidth;\n    this.canvasHeight = (this.$refs.canvas as HTMLElement).offsetHeight;\n    // globalRoot.setViewportSize(this.canvasWidth, this.canvasHeight);\n  }\n  public onMainSizerMouseDown() {\n    this.sizerMouseActive = true;\n  }\n  public onMainSizerMouseUp() {\n    this.sizerMouseActive = false;\n  }\n  public onMainSizerMouseMove(e: MouseEvent) {\n    if (e.buttons === 0) {\n      this.sizerMouseActive = false;\n    }\n    if (this.sizerMouseActive) {\n      let elementOffsetX = 0;\n      let target = e.currentTarget;\n      while (target) {\n        elementOffsetX += (target as HTMLElement).offsetLeft;\n        target = (target as HTMLElement).offsetParent;\n      }\n      const mouseOffsetX = e.pageX;\n      const width = (e.currentTarget! as HTMLElement).offsetWidth;\n      const offsetX = mouseOffsetX - elementOffsetX;\n      if (offsetX >= this.minGraphWidth &&\n        (width - offsetX) >= this.minSettingsWidth) {\n        this.settingsWidth = Math.round(width - offsetX);\n      }\n    }\n  }\n  public onMainSizerTouchStart() {\n    this.sizerTouchActive = true;\n  }\n  public onMainSizerTouchEnd() {\n    this.sizerTouchActive = false;\n  }\n  public onMainSizerTouchMove(e: TouchEvent) {\n    if (this.sizerTouchActive) {\n      let elementOffsetX = 0;\n      let target = e.currentTarget;\n      while (target) {\n        elementOffsetX += (target as HTMLElement).offsetLeft;\n        target = (target as HTMLElement).offsetParent;\n      }\n      const mouseOffsetX = e.touches[0].pageX;\n      const width = (e.currentTarget! as HTMLElement).offsetWidth;\n      const offsetX = mouseOffsetX - elementOffsetX;\n      if (offsetX >= this.minGraphWidth &&\n        (width - offsetX) >= this.minSettingsWidth) {\n        this.settingsWidth = Math.round(width - offsetX);\n      }\n    }\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=c27cc784&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Icon from 'vue-awesome/components/Icon.vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n\nVue.component('v-icon', Icon);\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CollapsiblePane.vue?vue&type=style&index=0&id=08120549&lang=stylus&scoped=true&\""],"sourceRoot":""}